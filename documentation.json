{
    "pipes": [
        {
            "name": "MinusPipe",
            "id": "pipe-MinusPipe-95000f6d24879ffce8088c18e6fd96ad",
            "file": "apps/coin-market/src/app/shared/pipes/minus.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 7,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "minus",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'minus',\n})\nexport class MinusPipe implements PipeTransform {\n    transform(value: number): number {\n        if (value < 0) {\n            return Math.abs(value);\n        } else {\n            return value;\n        }\n    }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "Chainable",
            "id": "interface-Chainable-eeb6394b310e7cc14f0321cca3d9eb7f",
            "file": "apps/coin-market-e2e/src/support/commands.ts",
            "type": "interface",
            "sourceCode": "declare namespace Cypress {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  interface Chainable<Subject> {\r\n    login(email: string, password: string): void;\r\n  }\r\n}\r\n//\r\n// -- This is a parent command --\r\nCypress.Commands.add('login', (email, password) => {\r\n  console.log('Custom command example: Login', email, password);\r\n});\r\n//\r\n// -- This is a child command --\r\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\r\n//\r\n//\r\n// -- This is a dual command --\r\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\r\n//\r\n//\r\n// -- This will overwrite an existing command --\r\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 152,
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        },
                        {
                            "name": "password",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "PriceChange",
            "id": "interface-PriceChange-cc44d2d39198e9b38f6d225168cd7aca",
            "file": "apps/coin-market/src/app/models/coin-price-statistics.model.ts",
            "type": "interface",
            "sourceCode": "import { CoinStatistics } from './coin-statistics.model';\r\n\r\ninterface PriceChange {\r\n    value: number;\r\n    comparisonPercentage: number;\r\n    occuredOn?: number;\r\n}\r\n\r\nexport class CoinPriceStatistics extends CoinStatistics {\r\n    priceChange: PriceChange;\r\n    price_today_low: number;\r\n    price_today_high: number;\r\n    marketDominance: number;\r\n    price_yesterday_low: number;\r\n    price_yesterday_high: number;\r\n    price_yesterday_open: number;\r\n    price_yesterday_close: number;\r\n    yesterdayChange: number;\r\n    price_yesterday_volume: number;\r\n    price_7d_low: number;\r\n    price_7d_high: number;\r\n    price_30d_low: number;\r\n    price_30d_high: number;\r\n    price_90d_low: number;\r\n    price_90d_high: number;\r\n    price_52w_low: number;\r\n    price_52w_high: number;\r\n    allTimeHigh: PriceChange;\r\n    allTimeLow: PriceChange;\r\n    percent_roi: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "comparisonPercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "occuredOn",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CoinDetailsService",
            "id": "injectable-CoinDetailsService-8e800bb388f4f9ec5ab3222ee6eb3aa7",
            "file": "apps/coin-market/src/app/shared/services/coin-details.service.ts",
            "properties": [
                {
                    "name": "coinItems",
                    "defaultValue": "new BehaviorSubject<Coin>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "coinItems$",
                    "type": "Observable<Coin>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "coinPrice",
                    "defaultValue": "new BehaviorSubject<CoinPrices>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "coinPrice$",
                    "type": "Observable<CoinPrices>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "coinStatistics",
                    "defaultValue": "new BehaviorSubject<CoinStatistics>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "coinStatistics$",
                    "type": "Observable<CoinStatistics>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCoin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "getCoinPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "getCoinStatistics",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Coin } from \"../../models/coin\";\r\nimport { CoinPrices } from \"../../models/coin-prices\";\r\nimport { CoinStatistics } from \"../../models/coin-statistics.model\";\r\nimport {\r\n  fakeCoin,\r\n  fakeCoinStatistics,\r\n  fakeCoinPrice,\r\n} from \"../../../assets/data/coin-detail.data\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CoinDetailsService {\r\n  private coinItems = new BehaviorSubject<Coin>(null);\r\n  public coinItems$: Observable<Coin>;\r\n\r\n  private coinStatistics = new BehaviorSubject<CoinStatistics>(null);\r\n  public coinStatistics$: Observable<CoinStatistics>;\r\n\r\n  private coinPrice = new BehaviorSubject<CoinPrices>(null);\r\n  public coinPrice$: Observable<CoinPrices>;\r\n\r\n  constructor() {\r\n    this.coinItems$ = this.coinItems.asObservable();\r\n    this.getCoin();\r\n\r\n    this.coinStatistics$ = this.coinStatistics.asObservable();\r\n    this.getCoinStatistics();\r\n\r\n    this.coinPrice$ = this.coinPrice.asObservable();\r\n    this.getCoinPrice();\r\n  }\r\n\r\n  getCoin() {\r\n    this.coinItems.next(fakeCoin);\r\n  }\r\n\r\n  getCoinStatistics() {\r\n    this.coinStatistics.next(fakeCoinStatistics);\r\n  }\r\n\r\n  getCoinPrice() {\r\n    this.coinPrice.next(fakeCoinPrice);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 24
            },
            "type": "injectable"
        },
        {
            "name": "CoinListService",
            "id": "injectable-CoinListService-340082ebf87c353a9684152c19c239ba",
            "file": "apps/coin-market/src/app/shared/services/coin-list.service.ts",
            "properties": [
                {
                    "name": "coinItems",
                    "defaultValue": "new BehaviorSubject<CoinList[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "coinItems$",
                    "type": "Observable<CoinList[]>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dataLength",
                    "defaultValue": "new BehaviorSubject<number>(0)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "dataLength$",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "pageNumber",
                    "defaultValue": "new BehaviorSubject(0)",
                    "type": "BehaviorSubject<number>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "pageSize",
                    "defaultValue": "new BehaviorSubject(20)",
                    "type": "BehaviorSubject<number>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "screenItems",
                    "defaultValue": "new BehaviorSubject<CoinList[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "screenItems$",
                    "type": "Observable<CoinList[]>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "sortEvent",
                    "defaultValue": "new BehaviorSubject('')",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "sortOrder",
                    "defaultValue": "new BehaviorSubject('asc')",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "paginateCoins",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "sortCoins",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { coinListData } from 'apps/coin-market/src/assets/data/coinListData';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CoinList } from '../../models/coin-list.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CoinListService {\r\n    private coinItems = new BehaviorSubject<CoinList[]>([]);\r\n    public coinItems$: Observable<CoinList[]>;\r\n\r\n    private screenItems = new BehaviorSubject<CoinList[]>([]);\r\n    public screenItems$: Observable<CoinList[]>;\r\n\r\n    private dataLength = new BehaviorSubject<number>(0);\r\n    public dataLength$: Observable<number>;\r\n\r\n    public pageSize: BehaviorSubject<number> = new BehaviorSubject(20);\r\n    public pageNumber: BehaviorSubject<number> = new BehaviorSubject(0);\r\n    public sortEvent: BehaviorSubject<string> = new BehaviorSubject('');\r\n    public sortOrder: BehaviorSubject<string> = new BehaviorSubject('asc');\r\n\r\n    constructor() {\r\n        this.coinItems.next(coinListData);\r\n        this.paginateCoins();\r\n        this.coinItems.subscribe((x) => {\r\n            this.dataLength.next(x.length);\r\n        });\r\n\r\n        this.coinItems$ = this.coinItems.asObservable();\r\n        this.screenItems$ = this.screenItems.asObservable();\r\n        this.dataLength$ = this.dataLength.asObservable();\r\n    }\r\n\r\n    paginateCoins() {\r\n        let pageNumber = this.pageNumber.getValue();\r\n        let pageSize = this.pageSize.getValue();\r\n\r\n        let res = [...this.coinItems.getValue()];\r\n\r\n        const initialPos = pageNumber * pageSize;\r\n        res = res.slice(initialPos, initialPos + pageSize);\r\n\r\n        this.screenItems.next(res);\r\n    }\r\n\r\n    sortCoins() {\r\n        let arr = this.coinItems.getValue();\r\n        let sortEvent = this.sortEvent.getValue();\r\n        let sortOrder = this.sortOrder.getValue();\r\n\r\n        if (sortOrder === 'asc') {\r\n            arr.sort((a, b) =>\r\n                a[sortEvent] > b[sortEvent]\r\n                    ? 1\r\n                    : b[sortEvent] > a[sortEvent]\r\n                    ? -1\r\n                    : 0\r\n            );\r\n        } else {\r\n            arr.sort((a, b) =>\r\n                b[sortEvent] > a[sortEvent]\r\n                    ? 1\r\n                    : a[sortEvent] > b[sortEvent]\r\n                    ? -1\r\n                    : 0\r\n            );\r\n        }\r\n        this.coinItems.next(arr);\r\n        this.paginateCoins();\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 22
            },
            "type": "injectable"
        },
        {
            "name": "GainersLosersService",
            "id": "injectable-GainersLosersService-e23d23cc505752e070f4e7a58d97d6ec",
            "file": "apps/coin-market/src/app/shared/services/gainers-losers.service.ts",
            "properties": [
                {
                    "name": "gainers",
                    "defaultValue": "new BehaviorSubject<GainersLosers[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "gainers$",
                    "type": "Observable<GainersLosers[]>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "losers",
                    "defaultValue": "new BehaviorSubject<GainersLosers[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "losers$",
                    "type": "Observable<GainersLosers[]>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { GainersLosers } from '../../models/gainers-losers';\r\nimport { GainersLosersResponse } from '../../models/gainers-losers-response.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class GainersLosersService {\r\n    private gainers = new BehaviorSubject<GainersLosers[]>([]);\r\n    public gainers$: Observable<GainersLosers[]>;\r\n\r\n    private losers = new BehaviorSubject<GainersLosers[]>([]);\r\n    public losers$: Observable<GainersLosers[]>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.http\r\n            .get<GainersLosersResponse>('assets/data/gainers.json')\r\n            .subscribe((x) => {\r\n                this.gainers.next(x.gainers);\r\n                this.losers.next(x.losers);\r\n            });\r\n\r\n        this.gainers$ = this.gainers.asObservable();\r\n        this.losers$ = this.losers.asObservable();\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HistoricalDataService",
            "id": "injectable-HistoricalDataService-7cd1e99ef99a51a8bf3f482c44389545",
            "file": "apps/coin-market/src/app/shared/services/historical-data.service.ts",
            "properties": [
                {
                    "name": "dateRange",
                    "defaultValue": "new BehaviorSubject<CalendarDateRange>(\r\n        new CalendarDateRange()\r\n    )",
                    "type": "BehaviorSubject<CalendarDateRange>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "dateRange$",
                    "type": "Observable<CalendarDateRange>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "generateDataByDate",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "historicalData",
                    "defaultValue": "new BehaviorSubject<HistoricalData[]>([])",
                    "type": "BehaviorSubject<HistoricalData[]>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "historicalData$",
                    "type": "Observable<HistoricalData[]>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "filterByDate",
                    "args": [
                        {
                            "name": "dates",
                            "type": "CalendarDateRange"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "dates",
                            "type": "CalendarDateRange",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateDataForLoadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 116
                },
                {
                    "name": "generateInitialData",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 160
                },
                {
                    "name": "getHistoricalData",
                    "args": [
                        {
                            "name": "date",
                            "type": "CalendarDateRange",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "CalendarDateRange",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CalendarDateRange } from '@coin-market/data';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HistoricalData } from '../../models/historical-data.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class HistoricalDataService {\r\n    private historicalData: BehaviorSubject<\r\n        HistoricalData[]\r\n    > = new BehaviorSubject<HistoricalData[]>([]);\r\n    public historicalData$: Observable<HistoricalData[]>;\r\n\r\n    private dateRange: BehaviorSubject<CalendarDateRange> = new BehaviorSubject<CalendarDateRange>(\r\n        new CalendarDateRange()\r\n    );\r\n    public dateRange$: Observable<CalendarDateRange>;\r\n\r\n    constructor() {\r\n        this.getHistoricalData();\r\n        this.historicalData$ = this.historicalData.asObservable();\r\n\r\n        this.dateRange$ = this.dateRange.asObservable();\r\n    }\r\n\r\n    //this will request another month of data, starting from oldest data shown on table\r\n    loadMore() {\r\n        const existingData = this.historicalData.getValue();\r\n        const dataToAdd = this.generateDataForLoadMore();\r\n\r\n        this.historicalData.next([...existingData, ...dataToAdd]);\r\n    }\r\n\r\n    //this will request last 2 months of data or the date range if provided\r\n    getHistoricalData(date?: CalendarDateRange) {\r\n        if (date) {\r\n            //send request for dates provided\r\n            const data = this.generateDataByDate(date); //will be replaced with http request\r\n\r\n            this.historicalData.next(data);\r\n            this.dateRange.next(date);\r\n        } else {\r\n            //send request for last 2 months\r\n            const data = this.generateInitialData();\r\n\r\n            this.historicalData.next(data);\r\n            this.dateRange.next(\r\n                new CalendarDateRange(\r\n                    new Date(new Date().setHours(-24 * 10)),\r\n                    new Date()\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    //updates date with values passed\r\n    filterByDate(dates: CalendarDateRange) {\r\n        this.getHistoricalData(dates);\r\n    }\r\n\r\n    //generates fake data with dates provided\r\n    generateDataByDate = (dates: CalendarDateRange) => {\r\n        const { start, end } = dates;\r\n        const arr: HistoricalData[] = [];\r\n\r\n        const days = Math.floor((end.getTime() - start.getTime()) / 86400000);\r\n\r\n        for (let i = 0; i < days; i++) {\r\n            arr.push(\r\n                new HistoricalData({\r\n                    coinID: '1',\r\n                    closing: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: new Date(\r\n                            new Date(end).setHours(-24 * i)\r\n                        ).toISOString(),\r\n                    },\r\n                    opening: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: new Date(\r\n                            new Date(end).setHours(-24 * i)\r\n                        ).toISOString(),\r\n                    },\r\n                    highest: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: new Date(\r\n                            new Date(end).setHours(-24 * i)\r\n                        ).toISOString(),\r\n                    },\r\n                    lowest: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: new Date(\r\n                            new Date(end).setHours(-24 * i)\r\n                        ).toISOString(),\r\n                    },\r\n                    volume: {\r\n                        value: Math.floor(Math.random() * 9000000),\r\n                        date_time: new Date(\r\n                            new Date(end).setHours(-24 * i)\r\n                        ).toISOString(),\r\n                    },\r\n                    marketCap: {\r\n                        value: Math.floor(Math.random() * 9000000),\r\n                        date_time: new Date(\r\n                            new Date(end).setHours(-24 * i)\r\n                        ).toISOString(),\r\n                    },\r\n                })\r\n            );\r\n        }\r\n\r\n        return arr;\r\n    };\r\n\r\n    generateDataForLoadMore() {\r\n        const dataToAdd: HistoricalData[] = [];\r\n        let { start } = this.dateRange.getValue();\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            const oldest = start;\r\n            dataToAdd.push(\r\n                new HistoricalData({\r\n                    coinID: '1',\r\n                    closing: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: oldest.toISOString(),\r\n                    },\r\n                    opening: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: oldest.toISOString(),\r\n                    },\r\n                    highest: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: oldest.toISOString(),\r\n                    },\r\n                    lowest: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: oldest.toISOString(),\r\n                    },\r\n                    volume: {\r\n                        value: Math.floor(Math.random() * 9000000),\r\n                        date_time: oldest.toISOString(),\r\n                    },\r\n                    marketCap: {\r\n                        value: Math.floor(Math.random() * 9000000),\r\n                        date_time: oldest.toISOString(),\r\n                    },\r\n                })\r\n            );\r\n\r\n            start = new Date(oldest.setHours(-24));\r\n        }\r\n\r\n        this.dateRange.next({ ...this.dateRange.getValue(), start });\r\n\r\n        return dataToAdd;\r\n    }\r\n\r\n    generateInitialData() {\r\n        const data: HistoricalData[] = [];\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            const date = new Date(new Date().setHours(-24 * i)).toISOString();\r\n            data.push(\r\n                new HistoricalData({\r\n                    coinID: '1',\r\n                    closing: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: date,\r\n                    },\r\n                    opening: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: date,\r\n                    },\r\n                    highest: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: date,\r\n                    },\r\n                    lowest: {\r\n                        value: Math.floor(Math.random() * 90000),\r\n                        date_time: date,\r\n                    },\r\n                    volume: {\r\n                        value: Math.floor(Math.random() * 9000000),\r\n                        date_time: date,\r\n                    },\r\n                    marketCap: {\r\n                        value: Math.floor(Math.random() * 9000000),\r\n                        date_time: date,\r\n                    },\r\n                })\r\n            );\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "type": "injectable"
        },
        {
            "name": "LocalStorageService",
            "id": "injectable-LocalStorageService-22e86e96ff5e2a9487153a52e953412c",
            "file": "apps/coin-market/src/app/shared/services/local-storage.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LocalStorageService {\r\n  constructor() {}\r\n\r\n  setItem(key: string, value: string) {\r\n    localStorage.setItem(key, value);\r\n  }\r\n\r\n  getItem(key: string) {\r\n    return localStorage.getItem(key);\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "MarketsService",
            "id": "injectable-MarketsService-4f19dfc054a35b32d38172abe4aae2ea",
            "file": "apps/coin-market/src/app/shared/services/markets.service.ts",
            "properties": [
                {
                    "name": "dataLength",
                    "defaultValue": "new BehaviorSubject<number>(0)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "dataLength$",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "filteredItems",
                    "defaultValue": "new BehaviorSubject<MarketList[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "filteredItems$",
                    "type": "Observable<MarketList[]>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "marketItems",
                    "defaultValue": "new BehaviorSubject<MarketList[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "marketItems$",
                    "type": "Observable<MarketList[]>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "pageNumber",
                    "defaultValue": "new BehaviorSubject(0)",
                    "type": "BehaviorSubject<number>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "pageSize",
                    "defaultValue": "new BehaviorSubject(20)",
                    "type": "BehaviorSubject<number>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "screenItems",
                    "defaultValue": "new BehaviorSubject<MarketList[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "screenItems$",
                    "type": "Observable<MarketList[]>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selection",
                    "defaultValue": "new BehaviorSubject('All')",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "sortEvent",
                    "defaultValue": "new BehaviorSubject('')",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "sortOrder",
                    "defaultValue": "new BehaviorSubject('')",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "filterPair",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113
                },
                {
                    "name": "findMarkets",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "getMarketItems",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "sortData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MarketList } from '../../models/market';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MarketsService {\r\n    private marketItems = new BehaviorSubject<MarketList[]>([]);\r\n    public marketItems$: Observable<MarketList[]>;\r\n\r\n    private screenItems = new BehaviorSubject<MarketList[]>([]);\r\n    public screenItems$: Observable<MarketList[]>;\r\n\r\n    private filteredItems = new BehaviorSubject<MarketList[]>([]);\r\n    public filteredItems$: Observable<MarketList[]>;\r\n\r\n    private dataLength = new BehaviorSubject<number>(0);\r\n    public dataLength$: Observable<number>;\r\n\r\n    sortOrder: BehaviorSubject<string> = new BehaviorSubject('');\r\n    pageNumber: BehaviorSubject<number> = new BehaviorSubject(0);\r\n    pageSize: BehaviorSubject<number> = new BehaviorSubject(20);\r\n    selection: BehaviorSubject<string> = new BehaviorSubject('All');\r\n    sortEvent: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.getMarketItems();\r\n        this.marketItems$ = this.marketItems.asObservable();\r\n        this.filteredItems$ = this.filteredItems.asObservable();\r\n        this.screenItems$ = this.screenItems.asObservable();\r\n        this.dataLength$ = this.dataLength.asObservable();\r\n    }\r\n\r\n    getMarketItems() {\r\n        return this.http\r\n            .get<MarketList[]>('assets/data/marketsData.json')\r\n            .subscribe((x) => {\r\n                const data = x.map((e) => {\r\n                    return new MarketList(e);\r\n                });\r\n                this.marketItems.next(data);\r\n                this.filteredItems.next(data);\r\n                this.findMarkets();\r\n                this.dataLength.next(data.length);\r\n            });\r\n    }\r\n\r\n    findMarkets(): void {\r\n        let pageNumber = this.pageNumber.getValue();\r\n        let pageSize = this.pageSize.getValue();\r\n\r\n        let res = [...this.filteredItems.getValue()];\r\n\r\n        const initialPos = pageNumber * pageSize;\r\n        res = res.slice(initialPos, initialPos + pageSize);\r\n\r\n        this.screenItems.next(res);\r\n    }\r\n\r\n    sortData() {\r\n        let arr = this.filteredItems.getValue();\r\n        let sortEvent = this.sortEvent.getValue();\r\n        let sortOrder = this.sortOrder.getValue();\r\n\r\n        if (sortEvent === 'market_name') {\r\n            // Spesific(case insensitive) sorting algorithm for source column\r\n            if (sortOrder === 'asc') {\r\n                arr.sort((a, b) =>\r\n                    a[sortEvent].toLowerCase() > b[sortEvent].toLowerCase()\r\n                        ? 1\r\n                        : b[sortEvent].toLowerCase() >\r\n                          a[sortEvent].toLowerCase()\r\n                        ? -1\r\n                        : 0\r\n                );\r\n            } else {\r\n                arr.sort((a, b) =>\r\n                    b[sortEvent].toLowerCase() > a[sortEvent].toLowerCase()\r\n                        ? 1\r\n                        : a[sortEvent].toLowerCase() >\r\n                          b[sortEvent].toLowerCase()\r\n                        ? -1\r\n                        : 0\r\n                );\r\n            }\r\n        } else {\r\n            // Same sorting algorithm for the all other columns\r\n            if (sortOrder === 'asc') {\r\n                arr.sort((a, b) =>\r\n                    a[sortEvent] > b[sortEvent]\r\n                        ? 1\r\n                        : b[sortEvent] > a[sortEvent]\r\n                        ? -1\r\n                        : 0\r\n                );\r\n            } else {\r\n                arr.sort((a, b) =>\r\n                    b[sortEvent] > a[sortEvent]\r\n                        ? 1\r\n                        : a[sortEvent] > b[sortEvent]\r\n                        ? -1\r\n                        : 0\r\n                );\r\n            }\r\n        }\r\n\r\n        this.filteredItems.next(arr);\r\n        this.findMarkets();\r\n    }\r\n\r\n    filterPair() {\r\n        let arrAll = [];\r\n        let arrFiltered = [];\r\n\r\n        let selection = this.selection.getValue();\r\n        arrAll = this.marketItems.getValue();\r\n\r\n        if (selection === 'All') {\r\n            this.filteredItems.next([...arrAll]);\r\n            this.dataLength.next(arrAll.length);\r\n            this.findMarkets();\r\n        } else {\r\n            arrAll.find((e) => {\r\n                if (e.pairs.split('/')[1] === selection) {\r\n                    arrFiltered.push(e);\r\n                }\r\n            });\r\n            this.filteredItems.next([...arrFiltered]);\r\n            this.dataLength.next(arrFiltered.length);\r\n            this.findMarkets();\r\n        }\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OverviewService",
            "id": "injectable-OverviewService-effe28a3e5144be5b923e8f3f9dd9d6a",
            "file": "apps/coin-market/src/app/shared/services/overview.service.ts",
            "properties": [
                {
                    "name": "_selectedCalendarRange",
                    "defaultValue": "new BehaviorSubject<CalendarDateRange>(\r\n        new CalendarDateRange()\r\n    )",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_selectedRange",
                    "defaultValue": "new BehaviorSubject<ChartDateRange>(\r\n        new ChartDateRange()\r\n    )",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_selectedTab",
                    "defaultValue": "new BehaviorSubject<ChartDataTab>(\r\n        new ChartDataTab()\r\n    )",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "chartData",
                    "defaultValue": "new BehaviorSubject(null)",
                    "type": "BehaviorSubject<ChartData>",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "chartData$",
                    "type": "Observable<ChartData>",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "coin",
                    "defaultValue": "new BehaviorSubject<Coin>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "coin$",
                    "type": "Observable<Coin>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "coinStatistics",
                    "defaultValue": "new BehaviorSubject(\r\n        null\r\n    )",
                    "type": "BehaviorSubject<OverviewPriceStatistics>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "coinStatistics$",
                    "type": "Observable<OverviewPriceStatistics>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "coinVotes",
                    "defaultValue": "new BehaviorSubject<VoteCoinData>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "coinVotes$",
                    "type": "Observable<VoteCoinData>",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "marketcap",
                    "defaultValue": "[]",
                    "type": "OverviewMarketcap[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "marketcap_coin",
                    "defaultValue": "[]",
                    "type": "number[][]",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "overviewMarketcap",
                    "defaultValue": "new BehaviorSubject<OverviewMarketcap[]>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "overviewPrice",
                    "defaultValue": "new BehaviorSubject<OverviewPrice[]>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "price",
                    "defaultValue": "[]",
                    "type": "OverviewPrice[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "price_coin",
                    "defaultValue": "[]",
                    "type": "number[][]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "selectedCalendarRange$",
                    "type": "Observable<CalendarDateRange>",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selectedRange$",
                    "type": "Observable<ChartDateRange>",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selectedTab$",
                    "type": "Observable<ChartDataTab>",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "fakeChartData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110
                },
                {
                    "name": "getCoin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102
                },
                {
                    "name": "getCoinStatistics",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140
                },
                {
                    "name": "getCoinVotes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106
                },
                {
                    "name": "getOverviewMarketcap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136
                },
                {
                    "name": "getOverviewPrice",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132
                },
                {
                    "name": "mapChartData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Coin } from '../../models/coin.model';\r\nimport {\r\n    fakeCoin,\r\n    fakeCoinStatistics,\r\n    fakeCoinVotes,\r\n} from '../../../assets/data/coinData';\r\nimport { VoteCoinData } from '../../models/voteCoinData.model';\r\nimport {\r\n    CalendarDateRange,\r\n    ChartData,\r\n    ChartDataTab,\r\n    ChartDateRange,\r\n} from '@coin-market/data';\r\nimport { OverviewPrice, OverviewMarketcap } from '@coin-market/data';\r\nimport { OverviewPriceStatistics } from '../../models/overview-price-statistics.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class OverviewService {\r\n    private overviewPrice = new BehaviorSubject<OverviewPrice[]>(null);\r\n    private overviewMarketcap = new BehaviorSubject<OverviewMarketcap[]>(null);\r\n\r\n    private coin = new BehaviorSubject<Coin>(null);\r\n    public coin$: Observable<Coin>;\r\n\r\n    private coinVotes = new BehaviorSubject<VoteCoinData>(null);\r\n    public coinVotes$: Observable<VoteCoinData>;\r\n\r\n    private coinStatistics: BehaviorSubject<OverviewPriceStatistics> = new BehaviorSubject(\r\n        null\r\n    );\r\n    public coinStatistics$: Observable<OverviewPriceStatistics>;\r\n\r\n    private chartData: BehaviorSubject<ChartData> = new BehaviorSubject(null);\r\n    public chartData$: Observable<ChartData>;\r\n\r\n    private _selectedTab = new BehaviorSubject<ChartDataTab>(\r\n        new ChartDataTab()\r\n    );\r\n    private _selectedRange = new BehaviorSubject<ChartDateRange>(\r\n        new ChartDateRange()\r\n    );\r\n    private _selectedCalendarRange = new BehaviorSubject<CalendarDateRange>(\r\n        new CalendarDateRange()\r\n    );\r\n\r\n    public selectedTab$: Observable<ChartDataTab>;\r\n    public selectedRange$: Observable<ChartDateRange>;\r\n    public selectedCalendarRange$: Observable<CalendarDateRange>;\r\n\r\n    //holds fake data, delete after http implementation\r\n    price: OverviewPrice[] = [];\r\n    price_coin: number[][] = [];\r\n    marketcap: OverviewMarketcap[] = [];\r\n    marketcap_coin: number[][] = [];\r\n\r\n    /*\r\n  This service is used for state of active coin\r\n  */\r\n    constructor() {\r\n        this.fakeChartData();\r\n        this.getOverviewPrice();\r\n        this.getOverviewMarketcap();\r\n\r\n        this.coin$ = this.coin.asObservable();\r\n        this.getCoin();\r\n\r\n        this.chartData$ = this.chartData.asObservable();\r\n        this.mapChartData();\r\n\r\n        this.coinVotes$ = this.coinVotes.asObservable();\r\n        this.getCoinVotes();\r\n\r\n        this.coinStatistics$ = this.coinStatistics.asObservable();\r\n        this.getCoinStatistics();\r\n\r\n        this.selectedTab$ = this._selectedTab.asObservable();\r\n        this.selectedRange$ = this._selectedRange.asObservable();\r\n        this.selectedCalendarRange$ = this._selectedCalendarRange.asObservable();\r\n    }\r\n\r\n    set selectedTab(val: ChartDataTab) {\r\n        this._selectedTab.next(val);\r\n    }\r\n\r\n    set selectedRange(val: ChartDateRange) {\r\n        this._selectedRange.next(val);\r\n    }\r\n\r\n    set selectedCalendarRange(val: CalendarDateRange) {\r\n        this._selectedCalendarRange.next(val);\r\n    }\r\n\r\n    /*\r\n  This method sends a request to get active Coin Detail\r\n  Params(@coindID)\r\n  Response(Coin)\r\n  */\r\n    getCoin(): void {\r\n        this.coin.next(fakeCoin);\r\n    }\r\n\r\n    getCoinVotes(): void {\r\n        this.coinVotes.next(fakeCoinVotes);\r\n    }\r\n\r\n    fakeChartData(): void {\r\n        for (let i = 500; i > 0; i--) {\r\n            const day = new Date().getDate();\r\n            this.price.push({\r\n                date_time: new Date(new Date().setDate(day - i)).toString(),\r\n                price: Math.floor(Math.random() * 100000 + 1),\r\n                vol_24h: Math.floor(Math.random() * 10000000 + 1),\r\n            });\r\n            this.marketcap.push({\r\n                date_time: new Date(new Date().setDate(day - i)).toString(),\r\n                marketCap: Math.floor(Math.random() * 90000000000 + 1),\r\n                vol_24h: Math.floor(Math.random() * 10000000 + 1),\r\n            });\r\n\r\n            this.price_coin.push([new Date().setDate(day - i), 1]);\r\n            this.marketcap_coin.push([\r\n                new Date().setDate(day - i),\r\n                Math.floor(Math.random() * 90000000 + 1),\r\n            ]);\r\n        }\r\n    }\r\n\r\n    getOverviewPrice(): void {\r\n        this.overviewPrice.next(this.price);\r\n    }\r\n\r\n    getOverviewMarketcap(): void {\r\n        this.overviewMarketcap.next(this.marketcap);\r\n    }\r\n\r\n    getCoinStatistics(): void {\r\n        const { coin_id, circulating_supply } = this.coin.getValue();\r\n        this.coinStatistics.next(\r\n            new OverviewPriceStatistics({\r\n                ...fakeCoinStatistics,\r\n                coin_id,\r\n                circulating_supply,\r\n            })\r\n        );\r\n    }\r\n\r\n    private mapChartData() {\r\n        const price = this.overviewPrice.getValue();\r\n        const marketcap = this.overviewMarketcap.getValue();\r\n        const coin = this.coin.getValue();\r\n\r\n        this.chartData.next(new ChartData(coin.coin_name, price, marketcap));\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 58
            },
            "accessors": {
                "selectedTab": {
                    "name": "selectedTab",
                    "setSignature": {
                        "name": "selectedTab",
                        "type": "void",
                        "args": [
                            {
                                "name": "val",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 85,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "selectedRange": {
                    "name": "selectedRange",
                    "setSignature": {
                        "name": "selectedRange",
                        "type": "void",
                        "args": [
                            {
                                "name": "val",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 89,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "selectedCalendarRange": {
                    "name": "selectedCalendarRange",
                    "setSignature": {
                        "name": "selectedCalendarRange",
                        "type": "void",
                        "args": [
                            {
                                "name": "val",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "TrendingListService",
            "id": "injectable-TrendingListService-34965f212182ebe0690062dd6f9d847d",
            "file": "apps/coin-market/src/app/shared/services/trending-list.service.ts",
            "properties": [
                {
                    "name": "trendingCoins",
                    "defaultValue": "new BehaviorSubject<Coin[]>(null)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "trendingCoins$",
                    "type": "Observable<Coin[]>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getTrendingCoins",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { fakeTrendingCoinList } from 'apps/coin-market/src/assets/data/coinData';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Coin } from '../../models/coin.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TrendingListService {\r\n    private trendingCoins = new BehaviorSubject<Coin[]>(null);\r\n    public trendingCoins$: Observable<Coin[]>;\r\n\r\n    constructor() {\r\n        this.trendingCoins$ = this.trendingCoins.asObservable();\r\n        this.getTrendingCoins();\r\n    }\r\n\r\n    getTrendingCoins(): void {\r\n        this.trendingCoins.next(fakeTrendingCoinList);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "CalendarDateRange",
            "id": "class-CalendarDateRange-8ba1667ab092d23d177bd9a9839fdb95",
            "file": "libs/data/src/lib/models/ui-calendar/date-range.model.ts",
            "type": "class",
            "sourceCode": "export class CalendarDateRange {\r\n    start: Date;\r\n    end: Date;\r\n\r\n    constructor(start?: Date, end?: Date) {\r\n        this.start = start || null;\r\n        this.end = end || null;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "start",
                        "type": "Date",
                        "optional": true
                    },
                    {
                        "name": "end",
                        "type": "Date",
                        "optional": true
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "start",
                        "type": "Date",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "end",
                        "type": "Date",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "end",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "start",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ChartData",
            "id": "class-ChartData-7a37a6da770fa4bddf5885927216873f",
            "file": "libs/data/src/lib/models/coin-chart/chart-data.model.ts",
            "type": "class",
            "sourceCode": "import { OverviewMarketcap } from './overview-marketcap.model';\r\nimport { OverviewPrice } from './overview-price.model';\r\n\r\nexport class ChartData {\r\n    coinName: string;\r\n    price: { usd: number[][]; coin: number[][] } = { usd: [], coin: [] };\r\n    marketCap: { usd: number[][]; coin: number[][] } = { usd: [], coin: [] };\r\n    volume: number[][] = [];\r\n\r\n    constructor(\r\n        coinName: string,\r\n        price: OverviewPrice[],\r\n        marketcap: OverviewMarketcap[]\r\n    ) {\r\n        this.coinName = coinName;\r\n\r\n        price.map((i) => {\r\n            this.price.usd.push([this.formatDate(i.date_time), i.price]);\r\n            this.volume.push([this.formatDate(i.date_time), i.vol_24h]);\r\n        });\r\n\r\n        marketcap.map((i) => {\r\n            this.marketCap.usd.push([\r\n                this.formatDate(i.date_time),\r\n                i.marketCap,\r\n            ]);\r\n        });\r\n    }\r\n\r\n    formatDate(date: string) {\r\n        //todo date validation\r\n        return new Date(date).getTime();\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "coinName",
                        "type": "string"
                    },
                    {
                        "name": "price",
                        "type": "OverviewPrice[]"
                    },
                    {
                        "name": "marketcap",
                        "type": "OverviewMarketcap[]"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "coinName",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "price",
                        "type": "OverviewPrice[]",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "marketcap",
                        "type": "OverviewMarketcap[]",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "coinName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "marketCap",
                    "defaultValue": "{ usd: [], coin: [] }",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "price",
                    "defaultValue": "{ usd: [], coin: [] }",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "volume",
                    "defaultValue": "[]",
                    "type": "number[][]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ChartDataTab",
            "id": "class-ChartDataTab-41d8ca88ffb9c5e2e42894c1e73402d8",
            "file": "libs/data/src/lib/models/coin-chart/chart-data-tab.model.ts",
            "type": "class",
            "sourceCode": "export class ChartDataTab {\r\n    text: 'Price' | 'Market Cap';\r\n    textJson: 'price' | 'marketCap';\r\n\r\n    constructor(item?: any) {\r\n        (this.text = item?.text || 'Price'),\r\n            (this.textJson = item?.textJson || 'price');\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "text",
                    "type": "\"Price\" | \"Market Cap\"",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "textJson",
                    "type": "\"price\" | \"marketCap\"",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ChartDateRange",
            "id": "class-ChartDateRange-d412d9c31046f0d8e0bd15fc59f557f1",
            "file": "libs/data/src/lib/models/coin-chart/chart-date-range.model.ts",
            "type": "class",
            "sourceCode": "import { CalendarDateRange } from '../ui-calendar/date-range.model';\r\n\r\nexport class ChartDateRange {\r\n    value: '1D' | '7D' | '1M' | '3M' | '1Y' | 'ALL' | 'YTD';\r\n    dateRange: CalendarDateRange;\r\n\r\n    constructor(item?: any) {\r\n        this.value = item?.value || 'ALL';\r\n        this.dateRange = item?.dateRange || new CalendarDateRange();\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "dateRange",
                    "type": "CalendarDateRange",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "type": "\"1D\" | \"7D\" | \"1M\" | \"3M\" | \"1Y\" | \"ALL\" | \"YTD\"",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Coin",
            "id": "class-Coin-62d9da550d6df1acd9e195b501ba7c63",
            "file": "apps/coin-market/src/app/models/coin.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class Coin {\r\n    coin_id: string;\r\n    price: number;\r\n    coin_name: string;\r\n    market_cap: ValuePercentage;\r\n    fully_diluted_market_cap: ValuePercentage;\r\n    volume: ValuePercentage;\r\n    circulating_supply: CoinSupplyNumbers;\r\n    price_high_low: PriceHighLow;\r\n    icon: string;\r\n\r\n    constructor(item?: any) {\r\n        this.coin_id = item?.coin_id || '';\r\n        this.price = item?.price || 0;\r\n        this.coin_name = item?.coin_name || '';\r\n        this.market_cap = new ValuePercentage(item?.market_cap);\r\n        this.fully_diluted_market_cap = new ValuePercentage(\r\n            item?.fully_diluted_market_cap\r\n        );\r\n        this.volume = new ValuePercentage(item?.volume);\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item?.circulating_supply\r\n        );\r\n        this.price_high_low = new PriceHighLow(item?.price_high_low);\r\n        this.icon = item.icon || '';\r\n    }\r\n}\r\n\r\nclass ValuePercentage {\r\n    value: number;\r\n    change_percentage: number;\r\n\r\n    constructor(item?: any) {\r\n        this.value = item?.value || 0;\r\n        this.change_percentage = item?.change_percentage || 0;\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n    interval: string;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n        this.interval = item?.interval || '';\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "circulating_supply",
                    "type": "CoinSupplyNumbers",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "coin_id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "coin_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fully_diluted_market_cap",
                    "type": "ValuePercentage",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "market_cap",
                    "type": "ValuePercentage",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "price_high_low",
                    "type": "PriceHighLow",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "volume",
                    "type": "ValuePercentage",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Coin",
            "id": "class-Coin-938b25a0d4667da6a75c70bf2bb54905-1",
            "file": "apps/coin-market/src/app/models/coin.ts",
            "type": "class",
            "sourceCode": "export class Coin {\r\n    name: string;\r\n    shortName: string;\r\n    icon: string;\r\n    price: number;\r\n    rank: number;\r\n    watchlists: number;\r\n\r\n    constructor(item: any) {\r\n        this.name = item.name || null;\r\n        this.shortName = item.shortName || null;\r\n        this.icon = item.icon || 'icon yok adresi yani icon bulunamadı resmi';\r\n        this.price = item.price || 0;\r\n        this.rank = item.rank || 0;\r\n        this.watchlists = item.watchlists || 0;\r\n\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "rank",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "shortName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "watchlists",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Coin-1"
        },
        {
            "name": "CoinList",
            "id": "class-CoinList-afc1e7a5e489ec5d8fe3c74c924308f5",
            "file": "apps/coin-market/src/app/models/coin-list.model.ts",
            "type": "class",
            "sourceCode": "export class CoinList {\r\n    coin_rank: number;\r\n    coin_icon: string;\r\n    coin_id: string;\r\n    name: string;\r\n    price: number;\r\n    trend_24h: number;\r\n    trend_7d: number;\r\n    market_cap: number;\r\n    circulating_supply: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "circulating_supply",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "coin_icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "coin_id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "coin_rank",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "market_cap",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "trend_24h",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "trend_7d",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CoinListDatasource",
            "id": "class-CoinListDatasource-361053b52f3f5981ae8a238187447207",
            "file": "apps/coin-market/src/assets/data/datasource/coin-list-datasource.ts",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { CoinList } from 'apps/coin-market/src/app/models/coin-list.model';\nimport { CoinListService } from 'apps/coin-market/src/app/shared/services/coin-list.service';\nimport { Observable } from 'rxjs';\n\nexport class CoinListDatasource implements DataSource<CoinList> {\n    constructor(public coinListService: CoinListService) {}\n\n    connect(): Observable<CoinList[]> {\n        return this.coinListService.screenItems$;\n    }\n    disconnect() {}\n\n    loadCoins() {\n        this.coinListService.paginateCoins();\n        this.coinListService.sortCoins();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "coinListService",
                        "type": "CoinListService"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "coinListService",
                        "type": "CoinListService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "coinListService",
                    "type": "CoinListService",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CoinList[]>",
                    "typeParameters": [],
                    "line": 9
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                },
                {
                    "name": "loadCoins",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "DataSource"
            ]
        },
        {
            "name": "CoinPrices",
            "id": "class-CoinPrices-32f4f41b4390c8d11827845efba0e89f",
            "file": "apps/coin-market/src/app/models/coin-prices.ts",
            "type": "class",
            "sourceCode": "export class CoinPrices {\r\n    name: string;\r\n    shortName: string;\r\n    price: number;\r\n    pricePercentage: number;\r\n    priceStatus: number;\r\n    priceLow: number;\r\n    priceHigh: number;\r\n    priceSideValue: number;\r\n    priceSideName: string;\r\n\r\n    constructor(item: any) {\r\n        this.name = item.name || null;\r\n        this.shortName = item.shortName || null;\r\n        this.price = item.price || 0;\r\n        this.pricePercentage = item.pricePercentage || 0;\r\n        this.priceStatus = item.priceStatus || 0;\r\n        this.priceLow = item.priceLow || 0;\r\n        this.priceHigh = item.priceHigh || 0;\r\n        this.priceSideName = item.priceSideName || null;\r\n        this.priceSideValue = item.priceSideValue || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "priceHigh",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "priceLow",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "pricePercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "priceSideName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "priceSideValue",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "priceStatus",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "shortName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CoinPriceStatistics",
            "id": "class-CoinPriceStatistics-cc44d2d39198e9b38f6d225168cd7aca",
            "file": "apps/coin-market/src/app/models/coin-price-statistics.model.ts",
            "type": "class",
            "sourceCode": "import { CoinStatistics } from './coin-statistics.model';\r\n\r\ninterface PriceChange {\r\n    value: number;\r\n    comparisonPercentage: number;\r\n    occuredOn?: number;\r\n}\r\n\r\nexport class CoinPriceStatistics extends CoinStatistics {\r\n    priceChange: PriceChange;\r\n    price_today_low: number;\r\n    price_today_high: number;\r\n    marketDominance: number;\r\n    price_yesterday_low: number;\r\n    price_yesterday_high: number;\r\n    price_yesterday_open: number;\r\n    price_yesterday_close: number;\r\n    yesterdayChange: number;\r\n    price_yesterday_volume: number;\r\n    price_7d_low: number;\r\n    price_7d_high: number;\r\n    price_30d_low: number;\r\n    price_30d_high: number;\r\n    price_90d_low: number;\r\n    price_90d_high: number;\r\n    price_52w_low: number;\r\n    price_52w_high: number;\r\n    allTimeHigh: PriceChange;\r\n    allTimeLow: PriceChange;\r\n    percent_roi: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "allTimeHigh",
                    "type": "PriceChange",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "allTimeLow",
                    "type": "PriceChange",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "marketDominance",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "percent_roi",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "price_30d_high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "price_30d_low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "price_52w_high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "price_52w_low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "price_7d_high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "price_7d_low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "price_90d_high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "price_90d_low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "price_today_high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "price_today_low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "price_yesterday_close",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "price_yesterday_high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "price_yesterday_low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "price_yesterday_open",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "price_yesterday_volume",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "priceChange",
                    "type": "PriceChange",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "yesterdayChange",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "circulatingSupplyNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "circulatingSupplyPercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "fullyMarketCapPercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "fullyMarketCapPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "marketCapPercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "marketCapPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "maxSupplyNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "totalSupplyNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "volumeMarketCapNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "volumePercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                },
                {
                    "name": "volumePrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "inheritance": {
                        "file": "CoinStatistics"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "CoinStatistics",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CoinStatistics",
            "id": "class-CoinStatistics-b03da7096ad7c2da365c562eb3a7bd5c",
            "file": "apps/coin-market/src/app/models/coin-statistics.model.ts",
            "type": "class",
            "sourceCode": "export class CoinStatistics {\r\n    marketCapPrice: number;\r\n    marketCapPercentage: number;\r\n    fullyMarketCapPrice: number;\r\n    fullyMarketCapPercentage: number;\r\n    volumePrice: number;\r\n    volumePercentage: number;\r\n    volumeMarketCapNumber: number;\r\n    circulatingSupplyNumber: number;\r\n    circulatingSupplyPercentage: number;\r\n    maxSupplyNumber: number;\r\n    totalSupplyNumber: number;\r\n\r\n    constructor(item: any) {\r\n        this.marketCapPrice = item.marketCapPrice || 0;\r\n        this.marketCapPercentage = item.marketCapPercentage || 0;\r\n        this.fullyMarketCapPrice = item.fullyMarketCapPrice || 0;\r\n        this.fullyMarketCapPercentage = item.fullyMarketCapPercentage || 0;\r\n        this.volumePrice = item.volumePrice || 0;\r\n        this.volumePercentage = item.volumePercentage || 0;\r\n        this.volumeMarketCapNumber = item.volumeMarketCapNumber || 0;\r\n        this.circulatingSupplyNumber = item.circulatingSupplyNumber || 0;\r\n        this.circulatingSupplyPercentage = item.circulatingSupplyPercentage || 0;\r\n        this.maxSupplyNumber = item.maxSupplyNumber || 0;\r\n        this.totalSupplyNumber = item.totalSupplyNumber || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "circulatingSupplyNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "circulatingSupplyPercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "fullyMarketCapPercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "fullyMarketCapPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "marketCapPercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "marketCapPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "maxSupplyNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "totalSupplyNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "volumeMarketCapNumber",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "volumePercentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "volumePrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CoinSupplyNumbers",
            "id": "class-CoinSupplyNumbers-e5825f75a868e3bac19bf6a5f314e819",
            "file": "apps/coin-market/src/app/models/coin-supply-numbers.model.ts",
            "type": "class",
            "sourceCode": "export class CoinSupplyNumbers {\r\n    max_supply: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n\r\n    constructor(item?: any) {\r\n        this.max_supply = item?.max_supply || 0;\r\n        this.circulating_supply = item?.circulating_supply || 0;\r\n        this.total_supply = item?.total_supply || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "circulating_supply",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "max_supply",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "total_supply",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Comparison",
            "id": "class-Comparison-65f0618c6d7c8dde377095b70418dab3",
            "file": "apps/coin-market/src/app/components/overview/coin-statistics/coin-statistic-row/coin-statistic-row.component.ts",
            "type": "class",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'coin-market-coin-statistic-row',\r\n    templateUrl: './coin-statistic-row.component.html',\r\n    styleUrls: ['./coin-statistic-row.component.scss'],\r\n})\r\nexport class CoinStatisticRowComponent implements OnInit {\r\n    @Input() title: string;\r\n    @Input() value: number | number[] | string;\r\n    @Input() isCurrency: boolean;\r\n    @Input() dayTag: boolean;\r\n    @Input() percentage: number;\r\n    @Input() tooltip: string;\r\n    @Input() date: Date;\r\n    comparison: Comparison;\r\n\r\n    ngOnInit(): void {\r\n        if (this.percentage) this.comparison = new Comparison(this.percentage);\r\n    }\r\n\r\n    isArray() {\r\n        return this.value instanceof Array;\r\n    }\r\n\r\n    isString() {\r\n        return typeof this.value === 'string';\r\n    }\r\n\r\n    handleComparisonClass() {\r\n        return {\r\n            'comparison--up': this.percentage > 0,\r\n            'comparison--down': this.percentage < 0,\r\n            'comparison--small': this.value,\r\n        };\r\n    }\r\n}\r\n\r\nclass Comparison {\r\n    icon?: 'expand_more' | 'expand_less';\r\n    percentage?: number;\r\n\r\n    constructor(percentage: number) {\r\n        this.icon = percentage < 0 ? 'expand_more' : 'expand_less';\r\n        this.percentage = percentage < 0 ? percentage * -1 : percentage;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "percentage",
                        "type": "number"
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "percentage",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "icon",
                    "type": "\"expand_more\" | \"expand_less\"",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "percentage",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 41
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GainersLosers",
            "id": "class-GainersLosers-bdeccdb2b3d2d79f6679c6881a88921f",
            "file": "apps/coin-market/src/app/models/gainers-losers.ts",
            "type": "class",
            "sourceCode": "export class GainersLosers {\r\n    rank: number;\r\n    coin_icon: string;\r\n    coin_name: string;\r\n    coin_id: string;\r\n    price: number;\r\n\r\n    constructor(item?: any) {\r\n        this.rank = item.rank || 0;\r\n        this.coin_icon = item.coin_icon || '';\r\n        this.coin_name = item.coin_name || '';\r\n        this.coin_id = item.coin_id || '';\r\n        this.price = item.price || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "coin_icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "coin_id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "coin_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "rank",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GainersLosersResponse",
            "id": "class-GainersLosersResponse-37d8c8db4e9dd70c9d7990f4c74df2a0",
            "file": "apps/coin-market/src/app/models/gainers-losers-response.model.ts",
            "type": "class",
            "sourceCode": "import { GainersLosers } from './gainers-losers';\r\n\r\nexport class GainersLosersResponse {\r\n    gainers: GainersLosers[] = [];\r\n    losers: GainersLosers[] = [];\r\n}\r\n",
            "properties": [
                {
                    "name": "gainers",
                    "defaultValue": "[]",
                    "type": "GainersLosers[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "losers",
                    "defaultValue": "[]",
                    "type": "GainersLosers[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HistoricalData",
            "id": "class-HistoricalData-88af83c16f230a20bc42ca62d09893c1",
            "file": "apps/coin-market/src/app/models/historical-data.model.ts",
            "type": "class",
            "sourceCode": "export class HistoricalData {\r\n    coinID: string;\r\n    opening: { value: number; date_time: string };\r\n    closing: { value: number; date_time: string };\r\n    highest: { value: number; date_time: string };\r\n    lowest: { value: number; date_time: string };\r\n    volume: { value: number; date_time: string };\r\n    marketCap: { value: number; date_time: string };\r\n    date_time?: string;\r\n\r\n    constructor(item: HistoricalData) {\r\n        this.coinID = item.coinID || '';\r\n        this.opening = item.opening || { value: 0, date_time: '' };\r\n        this.closing = item.closing || { value: 0, date_time: '' };\r\n        this.lowest = item.lowest || { value: 0, date_time: '' };\r\n        this.volume = item.volume || { value: 0, date_time: '' };\r\n        this.marketCap = item.marketCap || { value: 0, date_time: '' };\r\n        this.highest = item.highest || { value: 0, date_time: '' };\r\n\r\n        this.date_time = item.opening.date_time;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "HistoricalData"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "HistoricalData",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "closing",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "coinID",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "date_time",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "highest",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "lowest",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "marketCap",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "opening",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "volume",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LocalStorageMock",
            "id": "class-LocalStorageMock-c85a59c7fc354ebc08b7dca7c19f1cfd",
            "file": "apps/coin-market/src/app/mocks/localStorage.mock.ts",
            "type": "class",
            "sourceCode": "class LocalStorageMock {\r\n    //comment\r\n    private storage = {};\r\n\r\n    clear() {\r\n        this.storage = {};\r\n    }\r\n\r\n    setItem(key: string, val: string) {\r\n        this.storage[key] = val;\r\n    }\r\n\r\n    getItem(key: string) {\r\n        return this.storage[key] || null;\r\n    }\r\n\r\n    removeItem(key: string) {\r\n        delete this.storage[key];\r\n    }\r\n}\r\n\r\nexport default LocalStorageMock;\r\n",
            "properties": [
                {
                    "name": "storage",
                    "defaultValue": "{}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5
                },
                {
                    "name": "getItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "val",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "val",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MarketList",
            "id": "class-MarketList-3d1306bed25d66cebfc204221def112f",
            "file": "apps/coin-market/src/app/models/market.ts",
            "type": "class",
            "sourceCode": "export class MarketList {\r\n    market_id: number;\r\n    market_icon: string;\r\n    market_name: string;\r\n    pairs: string;\r\n    price: number;\r\n    volume: number;\r\n    volume_percentage: number;\r\n    liquidity: number;\r\n\r\n    constructor(item: any) {\r\n        this.market_id = Number(item.market_id || '');\r\n        this.market_icon = item.market_icon || null;\r\n        this.market_name = item.market_name || '';\r\n        this.pairs = item.pairs || '';\r\n        this.price = item.price || '';\r\n        this.volume = item.volume || '';\r\n        this.volume_percentage = item.volume_percentage || '';\r\n        this.liquidity = item.liquidity || '';\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "liquidity",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "market_icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "market_id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "market_name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "pairs",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "volume",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "volume_percentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MarketsDataSource",
            "id": "class-MarketsDataSource-c2654f332a867bcb5b1f492fb855f92f",
            "file": "apps/coin-market/src/assets/data/market-datasource.ts",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { Observable } from 'rxjs';\r\nimport { MarketList } from '../../app/models/market';\r\nimport { MarketsService } from '../../app/shared/services/markets.service';\r\n\r\nexport class MarketsDataSource implements DataSource<MarketList> {\r\n    constructor(private marketService: MarketsService) {}\r\n\r\n    connect(): Observable<MarketList[]> {\r\n        return this.marketService.screenItems$;\r\n    }\r\n\r\n    disconnect(): void {}\r\n    loadMarkets() {\r\n        this.marketService.findMarkets();\r\n        this.marketService.filterPair();\r\n        this.marketService.sortData();\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "marketService",
                        "type": "MarketsService"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "marketService",
                        "type": "MarketsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<MarketList[]>",
                    "typeParameters": [],
                    "line": 9
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "loadMarkets",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "DataSource"
            ]
        },
        {
            "name": "OverviewMarketcap",
            "id": "class-OverviewMarketcap-034230f54436faca94fbb8a59d54349d",
            "file": "libs/data/src/lib/models/coin-chart/overview-marketcap.model.ts",
            "type": "class",
            "sourceCode": "export class OverviewMarketcap {\r\n    marketCap: number;\r\n    vol_24h: number;\r\n    date_time: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "date_time",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "marketCap",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "vol_24h",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OverviewPrice",
            "id": "class-OverviewPrice-20ac0819047a69df4c1b77399d29a275",
            "file": "libs/data/src/lib/models/coin-chart/overview-price.model.ts",
            "type": "class",
            "sourceCode": "export class OverviewPrice {\r\n    price: number;\r\n    vol_24h: number;\r\n    date_time: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "date_time",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "vol_24h",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OverviewPriceStatistics",
            "id": "class-OverviewPriceStatistics-c157977a157fb57fc8a39e142ea38f38",
            "file": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class OverviewPriceStatistics {\r\n    price: number;\r\n    price_change_24h: number;\r\n    price_low_high_24h: PriceHighLow;\r\n    trading_volume_24h: number;\r\n    market_dominance: number;\r\n    market_rank: number;\r\n    market_cap: number;\r\n    fully_diluted_market_cap: number;\r\n    price_change_percentage_yesterday: number;\r\n    price_low_high_yesterday: PriceHighLow;\r\n    price_open_close_yesterday: PriceOpenClose;\r\n    price_low_high_7d: PriceHighLow;\r\n    price_low_high_30d: PriceHighLow;\r\n    price_low_high_90d: PriceHighLow;\r\n    price_low_high_52w: PriceHighLow;\r\n    price_low_high_all: PriceAllTime;\r\n\r\n    coin_id?: string;\r\n    circulating_supply?: CoinSupplyNumbers;\r\n\r\n    constructor(item: any) {\r\n        this.price = item.price || 0;\r\n        this.price_change_24h = item.price_change_24h || 0;\r\n        this.price_low_high_24h = new PriceHighLow(item.price_low_high_24h);\r\n        this.trading_volume_24h = item.trading_volume_24h || 0;\r\n        this.market_dominance = item.market_dominance || 0;\r\n        this.market_rank = item.market_rank || 0;\r\n        this.market_cap = item.market_cap || 0;\r\n        this.fully_diluted_market_cap = item.fully_diluted_market_cap || 0;\r\n        this.price_change_percentage_yesterday =\r\n            item.price_change_percentage_yesterday || 0;\r\n        this.price_low_high_yesterday = new PriceHighLow(\r\n            item.price_low_high_yesterday\r\n        );\r\n        this.price_open_close_yesterday = new PriceOpenClose(\r\n            item.price_open_close_yesterday\r\n        );\r\n        this.price_low_high_7d = new PriceHighLow(item.price_low_high_7d);\r\n        this.price_low_high_30d = new PriceHighLow(item.price_low_high_30d);\r\n        this.price_low_high_90d = new PriceHighLow(item.price_low_high_90d);\r\n        this.price_low_high_52w = new PriceHighLow(item.price_low_high_52w);\r\n        this.price_low_high_all = new PriceAllTime(item.price_low_high_all);\r\n\r\n        this.coin_id = item.coin_id || '';\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item.circulating_supply\r\n        );\r\n    }\r\n}\r\n\r\nclass PriceAllTime {\r\n    high: PriceAllTimeHigh;\r\n    low: PriceAllTimeLow;\r\n\r\n    constructor(item?: any) {\r\n        this.high = new PriceAllTimeHigh(item?.high);\r\n        this.low = new PriceAllTimeLow(item?.low);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeHigh {\r\n    date_time: string;\r\n    high_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.high_price = item?.high_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeLow {\r\n    date_time: string;\r\n    low_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.low_price = item?.low_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n    }\r\n}\r\n\r\nclass PriceOpenClose {\r\n    open: number;\r\n    close: number;\r\n\r\n    constructor(item?: any) {\r\n        this.open = item?.open || 0;\r\n        this.close = item?.close || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "circulating_supply",
                    "type": "CoinSupplyNumbers",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "coin_id",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "fully_diluted_market_cap",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "market_cap",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "market_dominance",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "market_rank",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "price_change_24h",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "price_change_percentage_yesterday",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "price_low_high_24h",
                    "type": "PriceHighLow",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "price_low_high_30d",
                    "type": "PriceHighLow",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "price_low_high_52w",
                    "type": "PriceHighLow",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "price_low_high_7d",
                    "type": "PriceHighLow",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "price_low_high_90d",
                    "type": "PriceHighLow",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "price_low_high_all",
                    "type": "PriceAllTime",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "price_low_high_yesterday",
                    "type": "PriceHighLow",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "price_open_close_yesterday",
                    "type": "PriceOpenClose",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "trading_volume_24h",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OverviewServiceMock",
            "id": "class-OverviewServiceMock-f1d695e7c28462fc64f362922273c85d",
            "file": "apps/coin-market/src/app/mocks/overview-service.mock.ts",
            "type": "class",
            "sourceCode": "import { of } from 'rxjs';\r\nimport { Coin } from '../models/coin';\r\nimport { VoteCoinData } from '../models/voteCoinData.model';\r\n\r\nexport class OverviewServiceMock {\r\n    coin$ = of(new Coin({}));\r\n    coinVotes$ = of(new VoteCoinData());\r\n}\r\n",
            "properties": [
                {
                    "name": "coin$",
                    "defaultValue": "of(new Coin({}))",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "coinVotes$",
                    "defaultValue": "of(new VoteCoinData())",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Pair",
            "id": "class-Pair-b0e0cd4d02b85b63edf122586440f019",
            "file": "apps/coin-market/src/app/models/pair.ts",
            "type": "class",
            "sourceCode": "export class Pair {}\r\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PriceAllTime",
            "id": "class-PriceAllTime-c157977a157fb57fc8a39e142ea38f38",
            "file": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class OverviewPriceStatistics {\r\n    price: number;\r\n    price_change_24h: number;\r\n    price_low_high_24h: PriceHighLow;\r\n    trading_volume_24h: number;\r\n    market_dominance: number;\r\n    market_rank: number;\r\n    market_cap: number;\r\n    fully_diluted_market_cap: number;\r\n    price_change_percentage_yesterday: number;\r\n    price_low_high_yesterday: PriceHighLow;\r\n    price_open_close_yesterday: PriceOpenClose;\r\n    price_low_high_7d: PriceHighLow;\r\n    price_low_high_30d: PriceHighLow;\r\n    price_low_high_90d: PriceHighLow;\r\n    price_low_high_52w: PriceHighLow;\r\n    price_low_high_all: PriceAllTime;\r\n\r\n    coin_id?: string;\r\n    circulating_supply?: CoinSupplyNumbers;\r\n\r\n    constructor(item: any) {\r\n        this.price = item.price || 0;\r\n        this.price_change_24h = item.price_change_24h || 0;\r\n        this.price_low_high_24h = new PriceHighLow(item.price_low_high_24h);\r\n        this.trading_volume_24h = item.trading_volume_24h || 0;\r\n        this.market_dominance = item.market_dominance || 0;\r\n        this.market_rank = item.market_rank || 0;\r\n        this.market_cap = item.market_cap || 0;\r\n        this.fully_diluted_market_cap = item.fully_diluted_market_cap || 0;\r\n        this.price_change_percentage_yesterday =\r\n            item.price_change_percentage_yesterday || 0;\r\n        this.price_low_high_yesterday = new PriceHighLow(\r\n            item.price_low_high_yesterday\r\n        );\r\n        this.price_open_close_yesterday = new PriceOpenClose(\r\n            item.price_open_close_yesterday\r\n        );\r\n        this.price_low_high_7d = new PriceHighLow(item.price_low_high_7d);\r\n        this.price_low_high_30d = new PriceHighLow(item.price_low_high_30d);\r\n        this.price_low_high_90d = new PriceHighLow(item.price_low_high_90d);\r\n        this.price_low_high_52w = new PriceHighLow(item.price_low_high_52w);\r\n        this.price_low_high_all = new PriceAllTime(item.price_low_high_all);\r\n\r\n        this.coin_id = item.coin_id || '';\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item.circulating_supply\r\n        );\r\n    }\r\n}\r\n\r\nclass PriceAllTime {\r\n    high: PriceAllTimeHigh;\r\n    low: PriceAllTimeLow;\r\n\r\n    constructor(item?: any) {\r\n        this.high = new PriceAllTimeHigh(item?.high);\r\n        this.low = new PriceAllTimeLow(item?.low);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeHigh {\r\n    date_time: string;\r\n    high_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.high_price = item?.high_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeLow {\r\n    date_time: string;\r\n    low_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.low_price = item?.low_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n    }\r\n}\r\n\r\nclass PriceOpenClose {\r\n    open: number;\r\n    close: number;\r\n\r\n    constructor(item?: any) {\r\n        this.open = item?.open || 0;\r\n        this.close = item?.close || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "high",
                    "type": "PriceAllTimeHigh",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "low",
                    "type": "PriceAllTimeLow",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PriceAllTimeHigh",
            "id": "class-PriceAllTimeHigh-c157977a157fb57fc8a39e142ea38f38",
            "file": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class OverviewPriceStatistics {\r\n    price: number;\r\n    price_change_24h: number;\r\n    price_low_high_24h: PriceHighLow;\r\n    trading_volume_24h: number;\r\n    market_dominance: number;\r\n    market_rank: number;\r\n    market_cap: number;\r\n    fully_diluted_market_cap: number;\r\n    price_change_percentage_yesterday: number;\r\n    price_low_high_yesterday: PriceHighLow;\r\n    price_open_close_yesterday: PriceOpenClose;\r\n    price_low_high_7d: PriceHighLow;\r\n    price_low_high_30d: PriceHighLow;\r\n    price_low_high_90d: PriceHighLow;\r\n    price_low_high_52w: PriceHighLow;\r\n    price_low_high_all: PriceAllTime;\r\n\r\n    coin_id?: string;\r\n    circulating_supply?: CoinSupplyNumbers;\r\n\r\n    constructor(item: any) {\r\n        this.price = item.price || 0;\r\n        this.price_change_24h = item.price_change_24h || 0;\r\n        this.price_low_high_24h = new PriceHighLow(item.price_low_high_24h);\r\n        this.trading_volume_24h = item.trading_volume_24h || 0;\r\n        this.market_dominance = item.market_dominance || 0;\r\n        this.market_rank = item.market_rank || 0;\r\n        this.market_cap = item.market_cap || 0;\r\n        this.fully_diluted_market_cap = item.fully_diluted_market_cap || 0;\r\n        this.price_change_percentage_yesterday =\r\n            item.price_change_percentage_yesterday || 0;\r\n        this.price_low_high_yesterday = new PriceHighLow(\r\n            item.price_low_high_yesterday\r\n        );\r\n        this.price_open_close_yesterday = new PriceOpenClose(\r\n            item.price_open_close_yesterday\r\n        );\r\n        this.price_low_high_7d = new PriceHighLow(item.price_low_high_7d);\r\n        this.price_low_high_30d = new PriceHighLow(item.price_low_high_30d);\r\n        this.price_low_high_90d = new PriceHighLow(item.price_low_high_90d);\r\n        this.price_low_high_52w = new PriceHighLow(item.price_low_high_52w);\r\n        this.price_low_high_all = new PriceAllTime(item.price_low_high_all);\r\n\r\n        this.coin_id = item.coin_id || '';\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item.circulating_supply\r\n        );\r\n    }\r\n}\r\n\r\nclass PriceAllTime {\r\n    high: PriceAllTimeHigh;\r\n    low: PriceAllTimeLow;\r\n\r\n    constructor(item?: any) {\r\n        this.high = new PriceAllTimeHigh(item?.high);\r\n        this.low = new PriceAllTimeLow(item?.low);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeHigh {\r\n    date_time: string;\r\n    high_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.high_price = item?.high_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeLow {\r\n    date_time: string;\r\n    low_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.low_price = item?.low_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n    }\r\n}\r\n\r\nclass PriceOpenClose {\r\n    open: number;\r\n    close: number;\r\n\r\n    constructor(item?: any) {\r\n        this.open = item?.open || 0;\r\n        this.close = item?.close || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "date",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "date_time",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "high_price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PriceAllTimeLow",
            "id": "class-PriceAllTimeLow-c157977a157fb57fc8a39e142ea38f38",
            "file": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class OverviewPriceStatistics {\r\n    price: number;\r\n    price_change_24h: number;\r\n    price_low_high_24h: PriceHighLow;\r\n    trading_volume_24h: number;\r\n    market_dominance: number;\r\n    market_rank: number;\r\n    market_cap: number;\r\n    fully_diluted_market_cap: number;\r\n    price_change_percentage_yesterday: number;\r\n    price_low_high_yesterday: PriceHighLow;\r\n    price_open_close_yesterday: PriceOpenClose;\r\n    price_low_high_7d: PriceHighLow;\r\n    price_low_high_30d: PriceHighLow;\r\n    price_low_high_90d: PriceHighLow;\r\n    price_low_high_52w: PriceHighLow;\r\n    price_low_high_all: PriceAllTime;\r\n\r\n    coin_id?: string;\r\n    circulating_supply?: CoinSupplyNumbers;\r\n\r\n    constructor(item: any) {\r\n        this.price = item.price || 0;\r\n        this.price_change_24h = item.price_change_24h || 0;\r\n        this.price_low_high_24h = new PriceHighLow(item.price_low_high_24h);\r\n        this.trading_volume_24h = item.trading_volume_24h || 0;\r\n        this.market_dominance = item.market_dominance || 0;\r\n        this.market_rank = item.market_rank || 0;\r\n        this.market_cap = item.market_cap || 0;\r\n        this.fully_diluted_market_cap = item.fully_diluted_market_cap || 0;\r\n        this.price_change_percentage_yesterday =\r\n            item.price_change_percentage_yesterday || 0;\r\n        this.price_low_high_yesterday = new PriceHighLow(\r\n            item.price_low_high_yesterday\r\n        );\r\n        this.price_open_close_yesterday = new PriceOpenClose(\r\n            item.price_open_close_yesterday\r\n        );\r\n        this.price_low_high_7d = new PriceHighLow(item.price_low_high_7d);\r\n        this.price_low_high_30d = new PriceHighLow(item.price_low_high_30d);\r\n        this.price_low_high_90d = new PriceHighLow(item.price_low_high_90d);\r\n        this.price_low_high_52w = new PriceHighLow(item.price_low_high_52w);\r\n        this.price_low_high_all = new PriceAllTime(item.price_low_high_all);\r\n\r\n        this.coin_id = item.coin_id || '';\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item.circulating_supply\r\n        );\r\n    }\r\n}\r\n\r\nclass PriceAllTime {\r\n    high: PriceAllTimeHigh;\r\n    low: PriceAllTimeLow;\r\n\r\n    constructor(item?: any) {\r\n        this.high = new PriceAllTimeHigh(item?.high);\r\n        this.low = new PriceAllTimeLow(item?.low);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeHigh {\r\n    date_time: string;\r\n    high_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.high_price = item?.high_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeLow {\r\n    date_time: string;\r\n    low_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.low_price = item?.low_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n    }\r\n}\r\n\r\nclass PriceOpenClose {\r\n    open: number;\r\n    close: number;\r\n\r\n    constructor(item?: any) {\r\n        this.open = item?.open || 0;\r\n        this.close = item?.close || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 82,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "date",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "date_time",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "low_price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 80
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PriceHighLow",
            "id": "class-PriceHighLow-62d9da550d6df1acd9e195b501ba7c63",
            "file": "apps/coin-market/src/app/models/coin.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class Coin {\r\n    coin_id: string;\r\n    price: number;\r\n    coin_name: string;\r\n    market_cap: ValuePercentage;\r\n    fully_diluted_market_cap: ValuePercentage;\r\n    volume: ValuePercentage;\r\n    circulating_supply: CoinSupplyNumbers;\r\n    price_high_low: PriceHighLow;\r\n    icon: string;\r\n\r\n    constructor(item?: any) {\r\n        this.coin_id = item?.coin_id || '';\r\n        this.price = item?.price || 0;\r\n        this.coin_name = item?.coin_name || '';\r\n        this.market_cap = new ValuePercentage(item?.market_cap);\r\n        this.fully_diluted_market_cap = new ValuePercentage(\r\n            item?.fully_diluted_market_cap\r\n        );\r\n        this.volume = new ValuePercentage(item?.volume);\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item?.circulating_supply\r\n        );\r\n        this.price_high_low = new PriceHighLow(item?.price_high_low);\r\n        this.icon = item.icon || '';\r\n    }\r\n}\r\n\r\nclass ValuePercentage {\r\n    value: number;\r\n    change_percentage: number;\r\n\r\n    constructor(item?: any) {\r\n        this.value = item?.value || 0;\r\n        this.change_percentage = item?.change_percentage || 0;\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n    interval: string;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n        this.interval = item?.interval || '';\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "interval",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PriceHighLow",
            "id": "class-PriceHighLow-c157977a157fb57fc8a39e142ea38f38-1",
            "file": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class OverviewPriceStatistics {\r\n    price: number;\r\n    price_change_24h: number;\r\n    price_low_high_24h: PriceHighLow;\r\n    trading_volume_24h: number;\r\n    market_dominance: number;\r\n    market_rank: number;\r\n    market_cap: number;\r\n    fully_diluted_market_cap: number;\r\n    price_change_percentage_yesterday: number;\r\n    price_low_high_yesterday: PriceHighLow;\r\n    price_open_close_yesterday: PriceOpenClose;\r\n    price_low_high_7d: PriceHighLow;\r\n    price_low_high_30d: PriceHighLow;\r\n    price_low_high_90d: PriceHighLow;\r\n    price_low_high_52w: PriceHighLow;\r\n    price_low_high_all: PriceAllTime;\r\n\r\n    coin_id?: string;\r\n    circulating_supply?: CoinSupplyNumbers;\r\n\r\n    constructor(item: any) {\r\n        this.price = item.price || 0;\r\n        this.price_change_24h = item.price_change_24h || 0;\r\n        this.price_low_high_24h = new PriceHighLow(item.price_low_high_24h);\r\n        this.trading_volume_24h = item.trading_volume_24h || 0;\r\n        this.market_dominance = item.market_dominance || 0;\r\n        this.market_rank = item.market_rank || 0;\r\n        this.market_cap = item.market_cap || 0;\r\n        this.fully_diluted_market_cap = item.fully_diluted_market_cap || 0;\r\n        this.price_change_percentage_yesterday =\r\n            item.price_change_percentage_yesterday || 0;\r\n        this.price_low_high_yesterday = new PriceHighLow(\r\n            item.price_low_high_yesterday\r\n        );\r\n        this.price_open_close_yesterday = new PriceOpenClose(\r\n            item.price_open_close_yesterday\r\n        );\r\n        this.price_low_high_7d = new PriceHighLow(item.price_low_high_7d);\r\n        this.price_low_high_30d = new PriceHighLow(item.price_low_high_30d);\r\n        this.price_low_high_90d = new PriceHighLow(item.price_low_high_90d);\r\n        this.price_low_high_52w = new PriceHighLow(item.price_low_high_52w);\r\n        this.price_low_high_all = new PriceAllTime(item.price_low_high_all);\r\n\r\n        this.coin_id = item.coin_id || '';\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item.circulating_supply\r\n        );\r\n    }\r\n}\r\n\r\nclass PriceAllTime {\r\n    high: PriceAllTimeHigh;\r\n    low: PriceAllTimeLow;\r\n\r\n    constructor(item?: any) {\r\n        this.high = new PriceAllTimeHigh(item?.high);\r\n        this.low = new PriceAllTimeLow(item?.low);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeHigh {\r\n    date_time: string;\r\n    high_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.high_price = item?.high_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeLow {\r\n    date_time: string;\r\n    low_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.low_price = item?.low_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n    }\r\n}\r\n\r\nclass PriceOpenClose {\r\n    open: number;\r\n    close: number;\r\n\r\n    constructor(item?: any) {\r\n        this.open = item?.open || 0;\r\n        this.close = item?.close || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 94,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "high",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "low",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 94
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PriceHighLow-1"
        },
        {
            "name": "PriceOpenClose",
            "id": "class-PriceOpenClose-c157977a157fb57fc8a39e142ea38f38",
            "file": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class OverviewPriceStatistics {\r\n    price: number;\r\n    price_change_24h: number;\r\n    price_low_high_24h: PriceHighLow;\r\n    trading_volume_24h: number;\r\n    market_dominance: number;\r\n    market_rank: number;\r\n    market_cap: number;\r\n    fully_diluted_market_cap: number;\r\n    price_change_percentage_yesterday: number;\r\n    price_low_high_yesterday: PriceHighLow;\r\n    price_open_close_yesterday: PriceOpenClose;\r\n    price_low_high_7d: PriceHighLow;\r\n    price_low_high_30d: PriceHighLow;\r\n    price_low_high_90d: PriceHighLow;\r\n    price_low_high_52w: PriceHighLow;\r\n    price_low_high_all: PriceAllTime;\r\n\r\n    coin_id?: string;\r\n    circulating_supply?: CoinSupplyNumbers;\r\n\r\n    constructor(item: any) {\r\n        this.price = item.price || 0;\r\n        this.price_change_24h = item.price_change_24h || 0;\r\n        this.price_low_high_24h = new PriceHighLow(item.price_low_high_24h);\r\n        this.trading_volume_24h = item.trading_volume_24h || 0;\r\n        this.market_dominance = item.market_dominance || 0;\r\n        this.market_rank = item.market_rank || 0;\r\n        this.market_cap = item.market_cap || 0;\r\n        this.fully_diluted_market_cap = item.fully_diluted_market_cap || 0;\r\n        this.price_change_percentage_yesterday =\r\n            item.price_change_percentage_yesterday || 0;\r\n        this.price_low_high_yesterday = new PriceHighLow(\r\n            item.price_low_high_yesterday\r\n        );\r\n        this.price_open_close_yesterday = new PriceOpenClose(\r\n            item.price_open_close_yesterday\r\n        );\r\n        this.price_low_high_7d = new PriceHighLow(item.price_low_high_7d);\r\n        this.price_low_high_30d = new PriceHighLow(item.price_low_high_30d);\r\n        this.price_low_high_90d = new PriceHighLow(item.price_low_high_90d);\r\n        this.price_low_high_52w = new PriceHighLow(item.price_low_high_52w);\r\n        this.price_low_high_all = new PriceAllTime(item.price_low_high_all);\r\n\r\n        this.coin_id = item.coin_id || '';\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item.circulating_supply\r\n        );\r\n    }\r\n}\r\n\r\nclass PriceAllTime {\r\n    high: PriceAllTimeHigh;\r\n    low: PriceAllTimeLow;\r\n\r\n    constructor(item?: any) {\r\n        this.high = new PriceAllTimeHigh(item?.high);\r\n        this.low = new PriceAllTimeLow(item?.low);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeHigh {\r\n    date_time: string;\r\n    high_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.high_price = item?.high_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceAllTimeLow {\r\n    date_time: string;\r\n    low_price: number;\r\n\r\n    date?: Date;\r\n\r\n    constructor(item?: any) {\r\n        this.date_time = item?.date_time || null;\r\n        this.low_price = item?.low_price || 0;\r\n\r\n        this.date = new Date(this.date_time);\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n    }\r\n}\r\n\r\nclass PriceOpenClose {\r\n    open: number;\r\n    close: number;\r\n\r\n    constructor(item?: any) {\r\n        this.open = item?.open || 0;\r\n        this.close = item?.close || 0;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 104,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "close",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "open",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 103
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ValuePercentage",
            "id": "class-ValuePercentage-62d9da550d6df1acd9e195b501ba7c63",
            "file": "apps/coin-market/src/app/models/coin.model.ts",
            "type": "class",
            "sourceCode": "import { CoinSupplyNumbers } from './coin-supply-numbers.model';\r\n\r\nexport class Coin {\r\n    coin_id: string;\r\n    price: number;\r\n    coin_name: string;\r\n    market_cap: ValuePercentage;\r\n    fully_diluted_market_cap: ValuePercentage;\r\n    volume: ValuePercentage;\r\n    circulating_supply: CoinSupplyNumbers;\r\n    price_high_low: PriceHighLow;\r\n    icon: string;\r\n\r\n    constructor(item?: any) {\r\n        this.coin_id = item?.coin_id || '';\r\n        this.price = item?.price || 0;\r\n        this.coin_name = item?.coin_name || '';\r\n        this.market_cap = new ValuePercentage(item?.market_cap);\r\n        this.fully_diluted_market_cap = new ValuePercentage(\r\n            item?.fully_diluted_market_cap\r\n        );\r\n        this.volume = new ValuePercentage(item?.volume);\r\n        this.circulating_supply = new CoinSupplyNumbers(\r\n            item?.circulating_supply\r\n        );\r\n        this.price_high_low = new PriceHighLow(item?.price_high_low);\r\n        this.icon = item.icon || '';\r\n    }\r\n}\r\n\r\nclass ValuePercentage {\r\n    value: number;\r\n    change_percentage: number;\r\n\r\n    constructor(item?: any) {\r\n        this.value = item?.value || 0;\r\n        this.change_percentage = item?.change_percentage || 0;\r\n    }\r\n}\r\n\r\nclass PriceHighLow {\r\n    high: number;\r\n    low: number;\r\n    interval: string;\r\n\r\n    constructor(item?: any) {\r\n        this.high = item?.high || 0;\r\n        this.low = item?.low || 0;\r\n        this.interval = item?.interval || '';\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "item",
                        "type": "any",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "change_percentage",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "VoteCoin",
            "id": "class-VoteCoin-d2003c3463bfbd4023a3bc547ef0c5ed",
            "file": "apps/coin-market/src/app/models/voteCoin.model.ts",
            "type": "class",
            "sourceCode": "export class VoteCoin {\r\n  value: number;\r\n  expireDate: number;\r\n\r\n  constructor(value: number, expireDate: number) {\r\n    this.value = value;\r\n    this.expireDate = expireDate;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "number"
                    },
                    {
                        "name": "expireDate",
                        "type": "number"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "expireDate",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "expireDate",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "VoteCoinData",
            "id": "class-VoteCoinData-25600eb995f9a3b8a5adbc4d6f8163b4",
            "file": "apps/coin-market/src/app/models/voteCoinData.model.ts",
            "type": "class",
            "sourceCode": "export class VoteCoinData {\r\n  coinId: number;\r\n  good: number;\r\n  bad: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "bad",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "coinId",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "good",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-41c8fee1336bd5189bcff42b76441038",
            "file": "apps/coin-market/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'coin-market'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'coin-market-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n    title = 'coin-market';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".root {\r\n    background: var(--theme-linear-gradient);\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<coin-market-navbar></coin-market-navbar>\r\n<div class=\"root\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<coin-market-scroll-top></coin-market-scroll-top>\r\n<coin-market-footer></coin-market-footer>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "BuyAddButtonSectionComponent",
            "id": "component-BuyAddButtonSectionComponent-a583f4108b9b9eac1cf435fd0ab3da8b",
            "file": "apps/coin-market/src/app/components/details-section/buy-add-button-section/buy-add-button-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-buy-add-button-section",
            "styleUrls": [
                "./buy-add-button-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./buy-add-button-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isDisplayCrypto",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isDisplayExchange",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isDisplayGaming",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "cryptoDisplay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "exchangeDisplay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "gamingDisplay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'coin-market-buy-add-button-section',\r\n  templateUrl: './buy-add-button-section.component.html',\r\n  styleUrls: ['./buy-add-button-section.component.scss']\r\n})\r\nexport class BuyAddButtonSectionComponent implements OnInit {\r\n\r\n  //isDisplayBuy = false;\r\n  isDisplayCrypto = false;\r\n  isDisplayExchange = false;\r\n  isDisplayGaming = false;\r\n/*\r\n  buyDisplay(){\r\n    this.isDisplayBuy = !this.isDisplayBuy;\r\n  } */\r\n\r\n  cryptoDisplay(){\r\n    this.isDisplayCrypto = !this.isDisplayCrypto;\r\n  }\r\n\r\n  exchangeDisplay(){\r\n    this.isDisplayExchange = !this.isDisplayExchange;\r\n  }\r\n\r\n  gamingDisplay(){\r\n    this.isDisplayGaming = !this.isDisplayGaming;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".buy-add-button-section {\r\n    margin: 0rem;\r\n\r\n    .container-button {\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding-top: 1.6rem;\r\n        padding-bottom: 1.6rem;\r\n\r\n        @media (max-width: 1300px) {\r\n            flex-direction: column-reverse;\r\n        }\r\n\r\n        .button-section {\r\n            display: flex;\r\n            -webkit-box-pack: end;\r\n            justify-content: flex-end;\r\n            flex-wrap: wrap;\r\n            margin-bottom: 0.6rem !important;\r\n\r\n            button {\r\n                background-color: var(--color-primary-blue);\r\n                display: inline-flex;\r\n                align-items: center;\r\n                border: none;\r\n                border-radius: 8px;\r\n                color: #fff;\r\n                padding: 0.5rem 0.8rem;\r\n                margin: 0 0.4rem 0.4rem 0;\r\n                font-size: 1.2rem;\r\n                font-weight: 600;\r\n                line-height: 2.2rem;\r\n                cursor: pointer;\r\n                outline: none;\r\n            }\r\n        }\r\n        .sponsored-mark {\r\n            margin-bottom: 0.8rem;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            align-items: center;\r\n\r\n            .sponsored-text-area {\r\n                color: var(--color-light-neutral-5);\r\n                font-size: 1.1rem;\r\n                font-weight: 600;\r\n                line-height: 1.8rem;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.my-svg {\r\n    margin: 0px 0px 0px 0.4rem;\r\n    height: 1.4rem;\r\n    width: 1.4rem;\r\n}\r\n\r\nbody {\r\n    --table-background-color: #fff;\r\n    --table-divider-color: #eff2f5;\r\n    --table-row-hover-background-color: #f8fafd;\r\n}\r\n\r\n.tippy-box {\r\n    position: relative;\r\n    background-color: var(--color-tippy-arrow);\r\n    box-shadow: var(--shadow-normal);\r\n    color: var(--color-text-1);\r\n    border-radius: 0.4rem;\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    outline: 0;\r\n    transition-property: transform, visibility, opacity;\r\n}\r\n\r\n.tippy-box {\r\n    background-color: var(--control-background-color);\r\n    color: var(--text-color);\r\n}\r\n\r\n.tippy-content {\r\n    position: relative;\r\n    padding: 0.5rem 0.9rem;\r\n    z-index: 1;\r\n}\r\n\r\n.dropdown-container {\r\n    border-radius: 8px;\r\n    padding: 1.1rem 0.5rem;\r\n    max-width: 254px;\r\n}\r\n\r\n.dropdown-inner {\r\n    box-sizing: border-box;\r\n    margin: 0px 0px 1.6rem;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n}\r\n\r\n.dropdown-p {\r\n    line-height: 1.5;\r\n    margin: 0px 0px 0px 0.4rem;\r\n    color: rgb(34, 37, 49);\r\n    font-size: 14px;\r\n}\r\n\r\n.big-img {\r\n    border-radius: 10px;\r\n    margin-bottom: 1rem;\r\n}\r\n\r\n.dropdown-h {\r\n    margin: 0px 0px 0.4rem;\r\n    font-size: 1.4rem;\r\n    font-weight: 600;\r\n    line-height: 21px;\r\n    color: rgb(34, 37, 49);\r\n}\r\n\r\n.dropdown-desc {\r\n    color: var(--color-light-neutral-6);\r\n    margin: 0;\r\n    font-size: 1.2rem;\r\n    line-height: 1.8rem;\r\n    margin-bottom: 1.6rem;\r\n}\r\n\r\n.dropdown-a {\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    background: rgb(56, 97, 251);\r\n    border: 0px;\r\n    border-radius: 8px;\r\n    display: inline-flex;\r\n    color: rgb(255, 255, 255);\r\n    cursor: pointer;\r\n    -webkit-box-pack: center;\r\n    justify-content: center;\r\n    outline: 0px;\r\n    font-weight: 600;\r\n    width: 100%;\r\n    height: 4rem;\r\n    font-size: 1.4rem;\r\n    padding: 0px 2.4rem;\r\n    line-height: 2.4rem;\r\n}\r\n\r\n.div-svg {\r\n    box-sizing: border-box;\r\n    margin: 0px 0px 0px 0.4rem;\r\n}\r\n\r\n.dropdown-svg {\r\n    box-sizing: border-box;\r\n    margin: 0px;\r\n    height: 1.6rem;\r\n    width: 1.6rem;\r\n}\r\n\r\n@media (max-width: 576px) {\r\n    img.lazy-load.loaded {\r\n        opacity: 1;\r\n        visibility: visible;\r\n    }\r\n}\r\n\r\nimg.lazy-load.loaded {\r\n    opacity: 1;\r\n}\r\n\r\n@media (max-width: 576px) {\r\n    img.lazy-load {\r\n        opacity: 1;\r\n        transition: none;\r\n        visibility: hidden;\r\n    }\r\n}\r\n\r\nimg.lazy-load {\r\n    opacity: 0;\r\n    transition: all 0.3s ease-in-out;\r\n}\r\n",
                    "styleUrl": "./buy-add-button-section.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 29
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"buy-add-button-section\">\r\n  <div class=\"container-button\">\r\n    <div class=\"button-section\">\r\n\r\n      <button mat-button [matMenuTriggerFor]=\"menuBuy\">\r\n        Buy\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"14px\" width=\"14px\" viewBox=\"0 0 24 24\"\r\n          class=\"my-svg\">\r\n          <path\r\n            d=\"M18.0566 8H5.94336C5.10459 8 4.68455 9.02183 5.27763 9.61943L11.3343 15.7222C11.7019 16.0926 12.2981 16.0926 12.6657 15.7222L18.7223 9.61943C19.3155 9.02183 18.8954 8 18.0566 8Z\">\r\n          </path>\r\n        </svg>\r\n      </button>\r\n      <mat-menu #menuBuy=\"matMenu\">\r\n        <div style=\"pointer-events: none; z-index: 9999;\">\r\n          <div class=\"tippy-box\" tabindex=\"-1\" style=\"max-width: 350px; transition-duration: 300ms;\">\r\n            <div class=\"tippy-content\" style=\"transition-duration: 300ms;\">\r\n              <div>\r\n                <div class=\"dropdown-container\">\r\n                  <div display=\"flex\" class=\"dropdown-inner\"><img\r\n                      src=\"https://s2.coinmarketcap.com/static/cloud/img/binance_32x32_1.png\"\r\n                      class=\"undefined lazy-load loaded\" height=\"16\" width=\"16\">\r\n                    <p color=\"text\" font-size=\"1\" class=\"dropdown-p\">BINANCE</p>\r\n                  </div>\r\n                  <img src=\"https://s2.coinmarketcap.com/static/cloud/img/binance_buy_480x176.png\"\r\n                    class=\"big-img lazy-load loaded\" width=\"100%\">\r\n                  <h4 font-size=\"14px\" font-weight=\"600\" color=\"text\" class=\"dropdown-h\">Buy Crypto with Fees as\r\n                    Low\r\n                    as 0%</h4>\r\n                  <p class=\"dropdown-desc\">Buy crypto with a bank transfer, credit or debit card, P2P exchange,\r\n                    and\r\n                    more. Not investment advice. All trading carries risk. Terms apply.</p>\r\n                  <a href=\"https://binance1.shortcm.li/cmcbuy\" target=\"_blank\" rel=\"nofollow sponsored noopener\"\r\n                    class=\"dropdown-a\"\r\n                    style=\"color: var(--color-primary-white); padding-top: 8px; padding-bottom: 8px; height: auto; min-height: 40px;\">\r\n                    Fees as Low as 0%<div class=\"div-svg\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\"\r\n                        class=\"dropdown-svg\">\r\n                        <path\r\n                          d=\"M12 11.9998L20 4M20 4H14.1817M20 4L19.9999 9.81802M9.81819 6.90946H5.77777C4.79594 6.90946 4 7.70537 4 8.68718V18.2223C4 19.2041 4.79594 20 5.77778 20H15.3131C16.295 20 17.0909 19.2041 17.0909 18.2223V14.182\"\r\n                          stroke=\"currentColor\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"></path>\r\n                      </svg>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-menu>\r\n      <button mat-button [matMenuTriggerFor]=\"menuExchange\">\r\n        Exchange\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"14px\" width=\"14px\" viewBox=\"0 0 24 24\"\r\n          class=\"my-svg\">\r\n          <path\r\n            d=\"M18.0566 8H5.94336C5.10459 8 4.68455 9.02183 5.27763 9.61943L11.3343 15.7222C11.7019 16.0926 12.2981 16.0926 12.6657 15.7222L18.7223 9.61943C19.3155 9.02183 18.8954 8 18.0566 8Z\">\r\n          </path>\r\n        </svg>\r\n      </button>\r\n      <mat-menu #menuExchange=\"matMenu\">\r\n        <div style=\"pointer-events: none; z-index: 9999;\">\r\n          <div class=\"tippy-box\" tabindex=\"-1\" style=\"max-width: 350px; transition-duration: 300ms;\">\r\n            <div class=\"tippy-content\" style=\"transition-duration: 300ms;\">\r\n              <div>\r\n                <div class=\"dropdown-container\">\r\n                  <div display=\"flex\" class=\"dropdown-inner\"><img\r\n                      src=\"https://s2.coinmarketcap.com/static/cloud/img/binance_32x32_1.png\"\r\n                      class=\"undefined lazy-load loaded\" height=\"16\" width=\"16\">\r\n                    <p color=\"text\" font-size=\"1\" class=\"dropdown-p\">BINANCE</p>\r\n                  </div><img src=\"https://s2.coinmarketcap.com/static/cloud/img/binance_exchange_480x176.png\"\r\n                    class=\"big-img lazy-load loaded\" width=\"100%\">\r\n                  <h4 font-size=\"14px\" font-weight=\"600\" color=\"text\" class=\"dropdown-h\">Lowest Trading Fees on\r\n                    300+\r\n                    Cryptocurrencies.</h4>\r\n                  <p class=\"dropdown-desc\">Binance offers the lowest trading fees for 99% of users compared to\r\n                    leading global exchanges. Not investment advice. Trading carries risk. Terms apply</p>\r\n                  <a href=\"https://binance1.shortcm.li/cmcex\" target=\"_blank\" rel=\"nofollow sponsored noopener\"\r\n                    class=\"dropdown-a\"\r\n                    style=\"color: var(--color-primary-white); padding-top: 8px; padding-bottom: 8px; height: auto; min-height: 40px;\">Lowest\r\n                    Trading Fees <div class=\"div-svg\"> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\"\r\n                        width=\"16px\" viewBox=\"0 0 24 24\" class=\"dropdown-svg\">\r\n                        <path\r\n                          d=\"M12 11.9998L20 4M20 4H14.1817M20 4L19.9999 9.81802M9.81819 6.90946H5.77777C4.79594 6.90946 4 7.70537 4 8.68718V18.2223C4 19.2041 4.79594 20 5.77778 20H15.3131C16.295 20 17.0909 19.2041 17.0909 18.2223V14.182\"\r\n                          stroke=\"currentColor\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"></path>\r\n                      </svg></div></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-menu>\r\n      <button mat-button [matMenuTriggerFor]=\"menuGaming\">\r\n        Gaming\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"14px\" width=\"14px\" viewBox=\"0 0 24 24\"\r\n          class=\"my-svg\">\r\n          <path\r\n            d=\"M18.0566 8H5.94336C5.10459 8 4.68455 9.02183 5.27763 9.61943L11.3343 15.7222C11.7019 16.0926 12.2981 16.0926 12.6657 15.7222L18.7223 9.61943C19.3155 9.02183 18.8954 8 18.0566 8Z\">\r\n          </path>\r\n        </svg>\r\n      </button>\r\n      <mat-menu #menuGaming=\"matMenu\">\r\n        <div style=\"pointer-events: none; z-index: 9999;\">\r\n          <div class=\" tippy-box\" tabindex=\"-1\" style=\"max-width: 350px; transition-duration: 300ms;\">\r\n            <div class=\"tippy-content\" style=\"transition-duration: 300ms;\">\r\n              <div>\r\n                <div class=\"dropdown-container\">\r\n                  <div display=\"flex\" class=\"dropdown-inner\"><img\r\n                      src=\"https://s2.coinmarketcap.com/static/cloud/img/1xbit_32x32_1.png\"\r\n                      class=\"undefined lazy-load loaded\" height=\"16\" width=\"16\">\r\n                    <p color=\"text\" font-size=\"1\" class=\"dropdown-p\">1xBIT</p>\r\n                  </div>\r\n                  <img src=\"https://s2.coinmarketcap.com/static/cloud/img/1xbit_480x176.png\"\r\n                    class=\"big-img lazy-load loaded\" width=\"100%\">\r\n                  <h4 font-size=\"14px\" font-weight=\"600\" color=\"text\" class=\"dropdown-h\">Crypto Sportsbook &amp;\r\n                    Online Casino</h4>\r\n                  <p class=\"dropdown-desc\">Don’t lose a chance to dive into 3000+ games, the highest ODDs for\r\n                    sports\r\n                    and eSports with full anonymity\r\n                  </p>\r\n                  <a href=\"https://mooony.xyz/click.php?kpp=cmkbutton\" target=\"_blank\" rel=\"nofollow sponsored noopener\"\r\n                    class=\"dropdown-a\"\r\n                    style=\"color: var(--color-primary-white); padding-top: 8px; padding-bottom: 8px; height: auto; min-height: 40px;\">Get\r\n                    your 7 BTC here\r\n                    <div class=\"div-svg\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\"\r\n                        class=\"dropdown-svg\">\r\n                        <path\r\n                          d=\"M12 11.9998L20 4M20 4H14.1817M20 4L19.9999 9.81802M9.81819 6.90946H5.77777C4.79594 6.90946 4 7.70537 4 8.68718V18.2223C4 19.2041 4.79594 20 5.77778 20H15.3131C16.295 20 17.0909 19.2041 17.0909 18.2223V14.182\"\r\n                          stroke=\"currentColor\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"></path>\r\n                      </svg>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-menu>\r\n      <button mat-button [matMenuTriggerFor]=\"menuEarn\">\r\n        Earn Crypto\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"14px\" width=\"14px\" viewBox=\"0 0 24 24\"\r\n          class=\"my-svg\">\r\n          <path\r\n            d=\"M18.0566 8H5.94336C5.10459 8 4.68455 9.02183 5.27763 9.61943L11.3343 15.7222C11.7019 16.0926 12.2981 16.0926 12.6657 15.7222L18.7223 9.61943C19.3155 9.02183 18.8954 8 18.0566 8Z\">\r\n          </path>\r\n        </svg>\r\n      </button>\r\n      <mat-menu #menuEarn=\"matMenu\">\r\n        <div style=\"pointer-events: none; z-index: 9999;\">\r\n          <div class=\"tippy-box\" tabindex=\"-1\" style=\"max-width: 350px; transition-duration: 300ms;\">\r\n            <div class=\"tippy-content\" style=\"transition-duration: 300ms;\">\r\n              <div>\r\n                <div class=\"dropdown-container\">\r\n                  <div display=\"flex\" class=\"dropdown-inner\"><img\r\n                      src=\"https://s2.coinmarketcap.com/static/cloud/img/cexio_32x32_1.png\"\r\n                      class=\"undefined lazy-load loaded\" height=\"16\" width=\"16\">\r\n                    <p color=\"text\" font-size=\"1\" class=\"dropdown-p\">CEX.IO</p>\r\n                  </div><img src=\"https://s2.coinmarketcap.com/static/cloud/img/cexio_new_480x176.png\"\r\n                    class=\"big-img lazy-load loaded\" width=\"100%\">\r\n                  <h4 font-size=\"14px\" font-weight=\"600\" color=\"text\" class=\"dropdown-h\">25% Staking reward for\r\n                    ZIL\r\n                  </h4>\r\n                  <p class=\"dropdown-desc\"><span>Get a 25% annual staking reward on your ZIL holdings with<a\r\n                        target=\"_blank\" href=\"https://cexio.page.link/coinmarketcap\"> CEX.IO. </a>Till the end of March\r\n                      only. Reap your increased staking rewards before the offer ends.</span></p><a\r\n                    href=\"https://cexio.page.link/coinmarketcap\" target=\"_blank\" rel=\"nofollow sponsored noopener\"\r\n                    class=\"dropdown-a\"\r\n                    style=\"color: var(--color-primary-white); padding-top: 8px; padding-bottom: 8px; height: auto; min-height: 40px;\">Earn\r\n                    25% with ZIL Staking <div class=\"sc-AxjAm cITTod\"><svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\" class=\"div-svg\">\r\n                        <path\r\n                          d=\"M12 11.9998L20 4M20 4H14.1817M20 4L19.9999 9.81802M9.81819 6.90946H5.77777C4.79594 6.90946 4 7.70537 4 8.68718V18.2223C4 19.2041 4.79594 20 5.77778 20H15.3131C16.295 20 17.0909 19.2041 17.0909 18.2223V14.182\"\r\n                          stroke=\"currentColor\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"></path>\r\n                      </svg></div></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-menu>\r\n    </div>\r\n\r\n    <div class=\"sponsored-mark\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16px\" height=\"16px\">\r\n        <path\r\n          d=\"M11.304 7.768c-.23.144-.501.161-.707.047-.262-.146-.406-.486-.406-.96V5.435c0-.685-.274-1.172-.734-1.304-.779-.223-1.365.716-1.585 1.068L6.5 7.394V4.713c-.016-.617-.22-.986-.605-1.098-.256-.073-.638-.044-1.01.516L1.807 9A5.285 5.285 0 0 1 1.181 6.5 5.324 5.324 0 0 1 6.5 1.182 5.324 5.324 0 0 1 11.816 6.5l.001.014v.015c.027.568-.16 1.02-.513 1.24zM12.997 6.5V6.471A6.507 6.507 0 0 0 6.498 0 6.507 6.507 0 0 0 0 6.5C0 10.084 2.915 13 6.499 13a6.477 6.477 0 0 0 4.418-1.733.59.59 0 1 0-.803-.867 5.298 5.298 0 0 1-3.615 1.418 5.304 5.304 0 0 1-3.957-1.77l2.775-4.39v2.024c0 .972.383 1.286.704 1.378.321.092.812.03 1.327-.795l1.526-2.438c.05-.079.094-.147.136-.205v1.232c0 .91.37 1.636 1.013 1.994.58.323 1.31.294 1.905-.076.721-.449 1.11-1.275 1.07-2.272z\"\r\n          fill=\"#7e899f\" fill-rule=\"evenodd\"></path>\r\n      </svg>\r\n      <div class=\"sponsored-text-area\">Sponsored</div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "CalendarComponent",
            "id": "component-CalendarComponent-74d624e819a71691991884a0c2458715",
            "file": "libs/ui/src/lib/calendar/calendar.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-calendar",
            "styleUrls": [
                "./calendar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calendar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selectedRange",
                    "defaultValue": "new CalendarDateRange()",
                    "line": 21,
                    "type": "CalendarDateRange"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeMenuEvent",
                    "defaultValue": "new EventEmitter(null)",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "dateRangeEvent",
                    "defaultValue": "new EventEmitter<CalendarDateRange>(null)",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "matCalendar",
                    "type": "MatCalendar<Date>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatCalendar"
                        }
                    ]
                },
                {
                    "name": "maxDate",
                    "defaultValue": "new Date()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "predefinedDates",
                    "defaultValue": "[7, 30, 90, 180, 365]",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "range",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "selected",
                    "defaultValue": "new DateRange(null, null)",
                    "type": "DateRange<Date>",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66
                },
                {
                    "name": "emitChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onConfirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "event",
                            "type": "Date"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Date",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPredefinedDate",
                    "args": [
                        {
                            "name": "val",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { MatCalendar, DateRange } from '@angular/material/datepicker';\r\nimport { CalendarDateRange } from '@coin-market/data';\r\n\r\n@Component({\r\n    selector: 'ui-calendar',\r\n    templateUrl: './calendar.component.html',\r\n    styleUrls: ['./calendar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CalendarComponent implements OnChanges {\r\n    @Input() selectedRange: CalendarDateRange = new CalendarDateRange();\r\n    @Output() dateRangeEvent = new EventEmitter<CalendarDateRange>(null);\r\n    @Output() closeMenuEvent = new EventEmitter(null);\r\n    @ViewChild(MatCalendar) matCalendar: MatCalendar<Date>;\r\n    selected: DateRange<Date> = new DateRange(null, null);\r\n\r\n    predefinedDates: number[] = [7, 30, 90, 180, 365]; //dates in days\r\n    maxDate = new Date();\r\n    range = 0;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.selectedRange.currentValue) {\r\n            const { start, end } = changes.selectedRange.currentValue;\r\n            this.selected = new DateRange(start, end);\r\n        }\r\n    }\r\n\r\n    setPredefinedDate(val: number) {\r\n        this.selected = new DateRange(\r\n            new Date(new Date().setHours(val * -24)),\r\n            new Date()\r\n        );\r\n\r\n        this.onConfirm();\r\n    }\r\n\r\n    select(event: Date) {\r\n        const { start, end } = this.selected;\r\n\r\n        if (start && end) this.selected = new DateRange(null, null);\r\n\r\n        if (!start) {\r\n            this.selected = new DateRange(event, null);\r\n        } else if (!end && event > start) {\r\n            this.selected = new DateRange(this.selected.start, event);\r\n            this.range = Math.floor(\r\n                (this.selected.end.getTime() - this.selected.start.getTime()) /\r\n                    86400000\r\n            ); //sets range between dates in days\r\n        } else {\r\n            this.range = 0;\r\n            this.selected = new DateRange(event, null);\r\n        }\r\n    }\r\n\r\n    closeMenu() {\r\n        this.closeMenuEvent.emit();\r\n    }\r\n\r\n    onConfirm() {\r\n        this.closeMenu();\r\n        this.emitChanges();\r\n    }\r\n\r\n    emitChanges() {\r\n        this.dateRangeEvent.emit(\r\n            new CalendarDateRange(this.selected.start, this.selected.end)\r\n        );\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".calendar-menu {\r\n    display: grid;\r\n    grid-template-columns: 70% 30%;\r\n    column-gap: 3rem;\r\n    justify-content: center;\r\n    padding: 1.5rem 4rem;\r\n    font-size: 1.2rem;\r\n    color: inherit;\r\n\r\n    .mat-calendar-table-header {\r\n        color: var(--color-light-neutral-6);\r\n    }\r\n\r\n    .mat-calendar-body-cell {\r\n        .mat-calendar-body-cell-content {\r\n            color: var(--theme-color);\r\n\r\n            &.mat-calendar-body-selected {\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n\r\n    .mat-calendar-body-in-range {\r\n        &::before {\r\n            background-color: var(--color-light-neutral-2);\r\n        }\r\n    }\r\n\r\n    &__footer {\r\n        width: 100%;\r\n        grid-column: 1/-1;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        &__selected-range {\r\n            flex-grow: 1;\r\n            text-align: right;\r\n            margin-right: 1rem;\r\n            span {\r\n                color: var(--text-color-sub);\r\n            }\r\n        }\r\n\r\n        &__btn--confirm:disabled {\r\n            background-color: var(--color-light-neutral-7) !important;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./calendar.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div (click)=\"$event.stopPropagation()\" class=\"calendar-menu\">\r\n    <mat-calendar\r\n        class=\"calendar-menu__calendar\"\r\n        (selectedChange)=\"select($event)\"\r\n        [maxDate]=\"maxDate\"\r\n        [selected]=\"selected\"\r\n    ></mat-calendar>\r\n\r\n    <ui-predefined-dates\r\n        [predefinedDates]=\"predefinedDates\"\r\n        (predefinedDateEvent)=\"setPredefinedDate($event)\"\r\n    ></ui-predefined-dates>\r\n\r\n    <div class=\"calendar-menu__footer\">\r\n        <button mat-button (click)=\"closeMenu()\">Cancel</button>\r\n        <div class=\"calendar-menu__footer__selected-range\">\r\n            <span>Selected: </span>\r\n            {{ range }} days\r\n        </div>\r\n        <button\r\n            class=\"calendar-menu__footer__btn--confirm\"\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"onConfirm()\"\r\n            [disabled]=\"!selected.end\"\r\n        >\r\n            Confirm\r\n        </button>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ChartDataTabsComponent",
            "id": "component-ChartDataTabsComponent-baf802c2cadcffadfacef0f55b18c30e",
            "file": "libs/ui/src/lib/line-chart/chart-data-tabs/chart-data-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chart-data-tabs",
            "styleUrls": [
                "./chart-data-tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-data-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chart",
                    "line": 16,
                    "type": "Highcharts.Chart"
                },
                {
                    "name": "data",
                    "line": 17,
                    "type": "ChartData"
                },
                {
                    "name": "selected",
                    "line": 19,
                    "type": "ChartDataTab"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter<ChartDataTab>()",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "tabs",
                    "defaultValue": "[\r\n        { text: 'Price', textJson: 'price' },\r\n        { text: 'Market Cap', textJson: 'marketCap' },\r\n    ]",
                    "type": "ChartDataTab[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "val",
                            "type": "ChartDataTab"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "ChartDataTab",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\nimport { ChartDataTab, ChartData } from '@coin-market/data';\r\n\r\n@Component({\r\n    selector: 'ui-chart-data-tabs',\r\n    templateUrl: './chart-data-tabs.component.html',\r\n    styleUrls: ['./chart-data-tabs.component.scss'],\r\n})\r\nexport class ChartDataTabsComponent {\r\n    @Input() chart: Highcharts.Chart;\r\n    @Input() data: ChartData;\r\n\r\n    @Input() selected: ChartDataTab;\r\n    @Output() selectedChange = new EventEmitter<ChartDataTab>();\r\n\r\n    tabs: ChartDataTab[] = [\r\n        { text: 'Price', textJson: 'price' },\r\n        { text: 'Market Cap', textJson: 'marketCap' },\r\n    ];\r\n\r\n    handleClick(val: ChartDataTab) {\r\n        this.selectedChange.emit(val);\r\n        const serie_usd = this.chart.series.find((s) => s.name === 'USD');\r\n        const serie_coin = this.chart.series.find((s) => s.name === 'BTC');\r\n\r\n        serie_coin.update({\r\n            type: 'line',\r\n            data: this.data[val.textJson].coin,\r\n        });\r\n        serie_usd.update({\r\n            type: 'line',\r\n            data: this.data[val.textJson].usd,\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chart-data-tabs.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"vertical-gray-list\">\r\n    <li\r\n        *ngFor=\"let t of tabs\"\r\n        class=\"vertical-gray-list__item\"\r\n        [class.vertical-gray-list__item--selected]=\"\r\n            selected.textJson === t.textJson\r\n        \"\r\n        (click)=\"handleClick(t)\"\r\n    >\r\n        {{ t.text }}\r\n    </li>\r\n</ul>\r\n"
        },
        {
            "name": "ChartExportsButtonComponent",
            "id": "component-ChartExportsButtonComponent-e41155cb2e5e932b708a07cdd6221635",
            "file": "libs/ui/src/lib/line-chart/chart-exports-button/chart-exports-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chart-exports-button",
            "styleUrls": [
                "./chart-exports-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-exports-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chart",
                    "line": 11,
                    "type": "Highcharts.Chart"
                },
                {
                    "name": "chartData",
                    "line": 12,
                    "type": "ChartData"
                },
                {
                    "name": "selectedTab",
                    "line": 13,
                    "type": "ChartDataTab"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "exportOptions",
                    "defaultValue": "[\r\n        { text: 'Download PNG Image', type: 'image/png' },\r\n        { text: 'Download JPEG Image', type: 'image/jpeg' },\r\n        { text: 'Download PDF Image', type: 'application/pdf' },\r\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handleDownload",
                    "args": [
                        {
                            "name": "type",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlePrint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "handleXLSX",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ChartData, ChartDataTab } from '@coin-market/data';\r\nimport * as exceljs from 'exceljs';\r\n\r\n@Component({\r\n    selector: 'ui-chart-exports-button',\r\n    templateUrl: './chart-exports-button.component.html',\r\n    styleUrls: ['./chart-exports-button.component.scss'],\r\n})\r\nexport class ChartExportsButtonComponent {\r\n    @Input() chart: Highcharts.Chart;\r\n    @Input() chartData: ChartData;\r\n    @Input() selectedTab: ChartDataTab;\r\n    exportOptions = [\r\n        { text: 'Download PNG Image', type: 'image/png' },\r\n        { text: 'Download JPEG Image', type: 'image/jpeg' },\r\n        { text: 'Download PDF Image', type: 'application/pdf' },\r\n    ];\r\n\r\n    handlePrint() {\r\n        this.chart.print();\r\n    }\r\n\r\n    handleDownload(type: string) {\r\n        this.chart.exportChart(\r\n            { type: type as Highcharts.ExportingMimeTypeValue },\r\n            {}\r\n        );\r\n    }\r\n\r\n    handleXLSX() {\r\n        const wb = new exceljs.Workbook();\r\n        const sheet = wb.addWorksheet('Chart');\r\n        const currencyFormat = '\"$\"#,##0.00;[Red]-\"$\"#,##0.00';\r\n        const { min, max } = this.chart.xAxis[0].getExtremes();\r\n\r\n        sheet.columns = [\r\n            {\r\n                header: 'Date',\r\n                key: 'date',\r\n                width: 35,\r\n                style: { numFmt: 'dd/mm/yyyy HH:MM:SS' },\r\n            },\r\n            {\r\n                header: `USD (${this.selectedTab.text})`,\r\n                key: 'usd',\r\n                width: 20,\r\n                style: { numFmt: currencyFormat },\r\n            },\r\n            { header: 'BTC', key: 'btc', width: 20 },\r\n            {\r\n                header: 'Volume',\r\n                key: 'volume',\r\n                width: 20,\r\n                style: { numFmt: currencyFormat },\r\n            },\r\n        ];\r\n\r\n        const data: Array<{\r\n            date: Date;\r\n            usd: number;\r\n            btc: number;\r\n            volume: number;\r\n        }> = [];\r\n\r\n        for (let i = 0; i < this.chartData.volume.length; i++) {\r\n            const date: number = this.chartData.volume[i][0];\r\n            if (date <= max && date >= min)\r\n                data.push({\r\n                    date: new Date(date),\r\n                    usd: this.chartData[this.selectedTab.textJson].usd[i]\r\n                        ? this.chartData[this.selectedTab.textJson].usd[i][1]\r\n                        : null,\r\n                    btc: this.chartData[this.selectedTab.textJson].coin[i]\r\n                        ? this.chartData[this.selectedTab.textJson].coin[i][1]\r\n                        : null,\r\n                    volume: this.chartData.volume[i]\r\n                        ? this.chartData.volume[i][1]\r\n                        : null,\r\n                });\r\n        }\r\n\r\n        sheet.addRows(data);\r\n\r\n        wb.xlsx.writeBuffer().then(function (data: exceljs.Buffer) {\r\n            const blob = new Blob([data], {\r\n                type:\r\n                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n            });\r\n            const url = window.URL.createObjectURL(blob);\r\n            const anchor = document.createElement('a');\r\n            anchor.href = url;\r\n            anchor.download = 'chart.xlsx';\r\n            anchor.click();\r\n            window.URL.revokeObjectURL(url);\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-button {\r\n    min-width: 20px;\r\n    border-radius: 50%;\r\n    padding: 1rem;\r\n}\r\n\r\nmat-icon {\r\n    font-size: 2rem;\r\n    color: var(--color-light-neutral-6);\r\n}\r\n\r\n.exports-menu-list {\r\n    li {\r\n        padding: 1rem;\r\n        font-weight: bolder;\r\n        cursor: pointer;\r\n    }\r\n}\r\n",
                    "styleUrl": "./chart-exports-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button mat-button [matMenuTriggerFor]=\"exportsMenu\">\r\n    <mat-icon>more_horiz</mat-icon>\r\n</button>\r\n\r\n<mat-menu #exportsMenu>\r\n    <ul class=\"exports-menu-list\">\r\n        <li (click)=\"handlePrint()\">Print Chart</li>\r\n        <li *ngFor=\"let o of exportOptions\" (click)=\"handleDownload(o.type)\">\r\n            {{ o.text }}\r\n        </li>\r\n        <li (click)=\"handleXLSX()\">Download XLSX</li>\r\n    </ul>\r\n</mat-menu>\r\n"
        },
        {
            "name": "ChartFullscreenButtonComponent",
            "id": "component-ChartFullscreenButtonComponent-2a87970564e87500f1bbb7163efb5ef0",
            "file": "libs/ui/src/lib/line-chart/chart-fullscreen-button/chart-fullscreen-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chart-fullscreen-button",
            "styleUrls": [
                "./chart-fullscreen-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-fullscreen-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chart",
                    "line": 9,
                    "type": "Highcharts.Chart"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ui-chart-fullscreen-button',\r\n    templateUrl: './chart-fullscreen-button.component.html',\r\n    styleUrls: ['./chart-fullscreen-button.component.scss'],\r\n})\r\nexport class ChartFullscreenButtonComponent {\r\n    @Input() chart: Highcharts.Chart;\r\n\r\n    onClick() {\r\n        this.chart.fullscreen.toggle();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-button {\r\n    min-width: 20px;\r\n    border-radius: 50%;\r\n    padding: 1rem;\r\n}\r\n\r\nmat-icon {\r\n    font-size: 2.4rem;\r\n    color: var(--color-light-neutral-6);\r\n}\r\n",
                    "styleUrl": "./chart-fullscreen-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button mat-button (click)=\"onClick()\">\r\n    <mat-icon>fullscreen</mat-icon>\r\n</button>\r\n"
        },
        {
            "name": "ChartRangeSelectorComponent",
            "id": "component-ChartRangeSelectorComponent-a0c11bbf6d03a88692cfc728d1c5fa6f",
            "file": "libs/ui/src/lib/line-chart/chart-range-selector/chart-range-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chart-range-selector",
            "styleUrls": [
                "./chart-range-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-range-selector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chart",
                    "line": 21,
                    "type": "Highcharts.Chart"
                },
                {
                    "name": "dateRange",
                    "defaultValue": "new CalendarDateRange()",
                    "line": 22,
                    "type": "CalendarDateRange"
                },
                {
                    "name": "selected",
                    "line": 25,
                    "type": "ChartDateRange"
                }
            ],
            "outputsClass": [
                {
                    "name": "dateRangeChange",
                    "defaultValue": "new EventEmitter<CalendarDateRange>(null)",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter<ChartDateRange>(null)",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "ranges",
                    "defaultValue": "[\r\n        {\r\n            value: '1D',\r\n            dateRange: new CalendarDateRange(\r\n                subDays(new Date(), 1),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '7D',\r\n            dateRange: new CalendarDateRange(\r\n                subDays(new Date(), 7),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '1M',\r\n            dateRange: new CalendarDateRange(\r\n                subMonths(new Date(), 1),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '3M',\r\n            dateRange: new CalendarDateRange(\r\n                subMonths(new Date(), 3),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '1Y',\r\n            dateRange: new CalendarDateRange(\r\n                subYears(new Date(), 1),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: 'YTD',\r\n            dateRange: new CalendarDateRange(\r\n                startOfYear(new Date()),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: 'ALL',\r\n            dateRange: new CalendarDateRange(null, new Date()),\r\n        },\r\n    ]",
                    "type": "ChartDateRange[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "trigger",
                    "type": "MatMenuTrigger",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatMenuTrigger"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setExtremes",
                    "args": [
                        {
                            "name": "range",
                            "type": "CalendarDateRange"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "jsdoctags": [
                        {
                            "name": "range",
                            "type": "CalendarDateRange",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelected",
                    "args": [
                        {
                            "name": "val",
                            "type": "ChartDateRange"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "ChartDateRange",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { CalendarDateRange, ChartDateRange } from '@coin-market/data';\r\nimport * as Highcharts from 'highcharts/highstock';\r\nimport { subDays, subMonths, subYears, startOfYear } from 'date-fns';\r\n\r\n@Component({\r\n    selector: 'ui-chart-range-selector',\r\n    templateUrl: './chart-range-selector.component.html',\r\n    styleUrls: ['./chart-range-selector.component.scss'],\r\n})\r\nexport class ChartRangeSelectorComponent {\r\n    @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\r\n\r\n    @Input() chart: Highcharts.Chart;\r\n    @Input() dateRange = new CalendarDateRange();\r\n    @Output() dateRangeChange = new EventEmitter<CalendarDateRange>(null);\r\n\r\n    @Input() selected: ChartDateRange;\r\n    @Output() selectedChange = new EventEmitter<ChartDateRange>(null);\r\n\r\n    ranges: ChartDateRange[] = [\r\n        {\r\n            value: '1D',\r\n            dateRange: new CalendarDateRange(\r\n                subDays(new Date(), 1),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '7D',\r\n            dateRange: new CalendarDateRange(\r\n                subDays(new Date(), 7),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '1M',\r\n            dateRange: new CalendarDateRange(\r\n                subMonths(new Date(), 1),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '3M',\r\n            dateRange: new CalendarDateRange(\r\n                subMonths(new Date(), 3),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: '1Y',\r\n            dateRange: new CalendarDateRange(\r\n                subYears(new Date(), 1),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: 'YTD',\r\n            dateRange: new CalendarDateRange(\r\n                startOfYear(new Date()),\r\n                new Date()\r\n            ),\r\n        },\r\n        {\r\n            value: 'ALL',\r\n            dateRange: new CalendarDateRange(null, new Date()),\r\n        },\r\n    ];\r\n\r\n    setSelected(val: ChartDateRange) {\r\n        this.selected = val;\r\n        this.selectedChange.emit(val);\r\n    }\r\n\r\n    setExtremes(range: CalendarDateRange) {\r\n        this.dateRange = range;\r\n        this.dateRangeChange.emit(range);\r\n\r\n        this.chart.xAxis[0].setExtremes(\r\n            range.start?.getTime(),\r\n            range.end?.getTime()\r\n        );\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n",
                    "styleUrl": "./chart-range-selector.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"vertical-gray-list\">\r\n    <li\r\n        class=\"vertical-gray-list__item\"\r\n        [class.vertical-gray-list__item--selected]=\"selected.value === r.value\"\r\n        *ngFor=\"let r of ranges\"\r\n        (click)=\"setExtremes(r.dateRange); setSelected(r)\"\r\n    >\r\n        {{ r.value }}\r\n    </li>\r\n    <li\r\n        class=\"vertical-gray-list__item other\"\r\n        [matMenuTriggerFor]=\"calendarMenu\"\r\n    >\r\n        <!-- [class.vertical-gray-list__item--selected]=\"selected === 'CAL'\"\r\n    (click)=\"setSelected('CAL')\" -->\r\n        <mat-icon>calendar_today</mat-icon>\r\n    </li>\r\n    <li class=\"vertical-gray-list__item other\">LOG</li>\r\n</ul>\r\n\r\n<mat-menu #calendarMenu>\r\n    <ui-calendar\r\n        (dateRangeEvent)=\"setExtremes($event)\"\r\n        (closeMenuEvent)=\"trigger.closeMenu()\"\r\n        [selectedRange]=\"dateRange\"\r\n    ></ui-calendar>\r\n</mat-menu>\r\n"
        },
        {
            "name": "CoinChartComponent",
            "id": "component-CoinChartComponent-43e8e3728bded130d7832aef8022b007",
            "file": "apps/coin-market/src/app/components/overview/coin-chart/coin-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-coin-chart",
            "styleUrls": [
                "./coin-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coin-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartData$",
                    "type": "Observable<ChartData>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedCalendarRange$",
                    "type": "Observable<CalendarDateRange>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectedRange$",
                    "type": "Observable<ChartDateRange>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedTab$",
                    "type": "Observable<ChartDataTab>",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "selectedCalendarRangeChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedRangeChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectTabChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OverviewService } from '../../../shared/services/overview.service';\r\nimport {\r\n    ChartDataTab,\r\n    ChartData,\r\n    CalendarDateRange,\r\n    ChartDateRange,\r\n} from '@coin-market/data';\r\n\r\n@Component({\r\n    selector: 'coin-market-coin-chart',\r\n    styleUrls: ['./coin-chart.component.scss'],\r\n    templateUrl: './coin-chart.component.html',\r\n})\r\nexport class CoinChartComponent implements OnInit {\r\n    chartData$: Observable<ChartData>;\r\n    selectedTab$: Observable<ChartDataTab>;\r\n    selectedRange$: Observable<ChartDateRange>;\r\n    selectedCalendarRange$: Observable<CalendarDateRange>;\r\n\r\n    constructor(private overviewService: OverviewService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.chartData$ = this.overviewService.chartData$;\r\n        this.selectedTab$ = this.overviewService.selectedTab$;\r\n        this.selectedRange$ = this.overviewService.selectedRange$;\r\n        this.selectedCalendarRange$ = this.overviewService.selectedCalendarRange$;\r\n    }\r\n\r\n    selectTabChange(val: any) {\r\n        this.overviewService.selectedTab = val;\r\n    }\r\n\r\n    selectedRangeChange(val: any) {\r\n        this.overviewService.selectedRange = val;\r\n    }\r\n\r\n    selectedCalendarRangeChange(val: any) {\r\n        this.overviewService.selectedCalendarRange = val;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./coin-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ui-line-chart\r\n    [data]=\"chartData$ | async\"\r\n    [selectedTab]=\"selectedTab$ | async\"\r\n    [selectedRange]=\"selectedRange$ | async\"\r\n    [selectedCalendarRange]=\"selectedCalendarRange$ | async\"\r\n    (selectTabChange)=\"selectTabChange($event)\"\r\n    (selectedRangeChange)=\"selectedRangeChange($event)\"\r\n    (selectedCalendarRangeChange)=\"selectedCalendarRangeChange($event)\"\r\n></ui-line-chart>\r\n"
        },
        {
            "name": "CoinChartLegendComponent",
            "id": "component-CoinChartLegendComponent-21e1c9c0ebe7f392dff5e19634d8a8f7",
            "file": "libs/ui/src/lib/line-chart/coin-chart-legend/coin-chart-legend.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-coin-chart-legend",
            "styleUrls": [
                "./coin-chart-legend.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coin-chart-legend.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "chart",
                    "line": 11,
                    "type": "Highcharts.Chart"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "legend",
                    "defaultValue": "['USD', 'BTC']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "legendSwitch",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ui-coin-chart-legend',\r\n    templateUrl: './coin-chart-legend.component.html',\r\n    styleUrls: ['./coin-chart-legend.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CoinChartLegendComponent {\r\n    @Input() chart: Highcharts.Chart;\r\n    legend: string[] = ['USD', 'BTC'];\r\n\r\n    legendSwitch(e: any) {\r\n        const { name, checked } = e.target;\r\n\r\n        switch (name) {\r\n            case 'BTC':\r\n                const serie_btc = this.chart.series.find(\r\n                    (s) => s.name === name\r\n                );\r\n                if (checked) serie_btc?.show();\r\n                else serie_btc?.hide();\r\n                break;\r\n            case 'USD':\r\n                const serie_usd = this.chart.series.find(\r\n                    (s) => s.name === name\r\n                );\r\n                if (!checked) serie_usd.hide();\r\n                else serie_usd.show();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-checkbox.chart-legend__checkbox {\r\n    margin-right: 1rem;\r\n    margin-bottom: 1rem;\r\n\r\n    .mat-checkbox-frame {\r\n        border: 1px solid rgb(207, 214, 228) !important;\r\n        box-shadow: rgb(167 174 187 / 40%) 0px 2px 4px;\r\n        border-radius: 4px !important;\r\n    }\r\n\r\n    .mat-checkbox-background {\r\n        border-radius: 4px !important;\r\n    }\r\n}\r\n",
                    "styleUrl": "./coin-chart-legend.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-checkbox\r\n    class=\"chart-legend__checkbox\"\r\n    *ngFor=\"let l of legend; let index\"\r\n    [name]=\"l\"\r\n    color=\"primary\"\r\n    [checked]=\"l === 'USD'\"\r\n    (input)=\"legendSwitch($event)\"\r\n    >{{ l }}</mat-checkbox\r\n>\r\n"
        },
        {
            "name": "CoinConverterComponent",
            "id": "component-CoinConverterComponent-2be3f68ea7dd1c957f946cddd4bef619",
            "file": "apps/coin-market/src/app/components/overview/coin-converter/coin-converter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-coin-converter",
            "styleUrls": [
                "./coin-converter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coin-converter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coin$",
                    "type": "Observable<Coin>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "coinAmount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "usdAmount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        },
                        {
                            "name": "input",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "input",
                            "type": "HTMLInputElement",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Coin } from '../../../models/coin.model';\r\nimport { OverviewService } from '../../../shared/services/overview.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-coin-converter',\r\n    templateUrl: './coin-converter.component.html',\r\n    styleUrls: ['./coin-converter.component.scss'],\r\n})\r\nexport class CoinConverterComponent {\r\n    coin$: Observable<Coin>;\r\n    coinAmount: number;\r\n    usdAmount: number;\r\n\r\n    constructor(private overviewService: OverviewService) {\r\n        this.coin$ = this.overviewService.coin$;\r\n    }\r\n\r\n    onFocus(e: any, input: HTMLInputElement) {\r\n        input.value = '';\r\n        e.target.value = '';\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".coin-converter {\r\n    border: 2px solid var(--theme-border-color);\r\n    padding: 0;\r\n    box-shadow: none;\r\n    border-radius: 16px;\r\n\r\n    .currency {\r\n        padding: 2.4rem;\r\n        display: flex;\r\n\r\n        &:last-child {\r\n            background-color: var(--color-light-neutral-1);\r\n            border-bottom-left-radius: inherit;\r\n            border-bottom-right-radius: inherit;\r\n        }\r\n\r\n        &__details {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            &__name {\r\n                p {\r\n                    margin: 0;\r\n                    font-weight: bold;\r\n                    white-space: nowrap;\r\n                }\r\n                small {\r\n                    color: var(--color-light-neutral-6);\r\n                }\r\n            }\r\n\r\n            figure {\r\n                margin: 0 1.2rem;\r\n\r\n                img {\r\n                    width: 3.2rem;\r\n                }\r\n            }\r\n        }\r\n\r\n        &__input {\r\n            font-size: 1.8rem;\r\n            font-family: inherit;\r\n            flex-grow: 1;\r\n            border: none;\r\n            font-weight: bolder;\r\n            text-align: right;\r\n            background-color: transparent;\r\n            width: 100%;\r\n            color: inherit;\r\n\r\n            &:focus {\r\n                outline: none;\r\n            }\r\n            &::placeholder {\r\n                color: var(--color-light-neutral-4);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./coin-converter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section class=\"coin-converter\" *ngIf=\"coin$ | async as coin\">\r\n    <div class=\"currency\">\r\n        <div class=\"currency__details\">\r\n            <figure>\r\n                <img [src]=\"coin.icon\" alt=\"...\" />\r\n            </figure>\r\n            <div class=\"currency__details__name\">\r\n                <small>{{ coin.coin_id | uppercase }}</small>\r\n                <p>{{ coin.coin_name }}</p>\r\n            </div>\r\n        </div>\r\n        <input\r\n            #coinInput\r\n            class=\"currency__input\"\r\n            type=\"text\"\r\n            name=\"coin\"\r\n            placeholder=\"0\"\r\n            [(ngModel)]=\"coinAmount\"\r\n            [value]=\"usdAmount / coin.price | currency: 'USD':'':'1.0-6'\"\r\n            (focus)=\"onFocus($event, usdInput)\"\r\n        />\r\n    </div>\r\n    <div class=\"currency bg-light-gray\">\r\n        <div class=\"currency__details\">\r\n            <figure class=\"currency-logo\">\r\n                <img\r\n                    src=\"https://s2.coinmarketcap.com/static/cloud/img/fiat-flags/USD.svg\"\r\n                    alt=\"...\"\r\n                />\r\n            </figure>\r\n            <div class=\"currency__details__name\">\r\n                <small>USD</small>\r\n                <p>United States Dollar</p>\r\n            </div>\r\n        </div>\r\n        <input\r\n            #usdInput\r\n            name=\"usd\"\r\n            class=\"currency__input\"\r\n            type=\"text\"\r\n            placeholder=\"0\"\r\n            [(ngModel)]=\"usdAmount\"\r\n            [value]=\"coin.price * coinAmount | currency: 'USD':'':'1.0-6'\"\r\n            (focus)=\"onFocus($event, coinInput)\"\r\n        />\r\n    </div>\r\n</section>\r\n"
        },
        {
            "name": "CoinDetailBarComponent",
            "id": "component-CoinDetailBarComponent-ed8a427d0ff469668ab86e2ad2eda0c4",
            "file": "apps/coin-market/src/app/components/coin-detail-bar/coin-detail-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-coin-detail-bar",
            "styleUrls": [
                "./coin-detail-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coin-detail-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bar",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'bar'"
                        }
                    ]
                },
                {
                    "name": "coin$",
                    "type": "Observable<Coin>",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:scroll",
                    "args": [],
                    "argsDecorator": [],
                    "line": 27
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    ElementRef,\r\n    HostListener,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Coin } from '../../models/coin.model';\r\nimport { OverviewService } from '../../shared/services/overview.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-coin-detail-bar',\r\n    templateUrl: './coin-detail-bar.component.html',\r\n    styleUrls: ['./coin-detail-bar.component.scss'],\r\n})\r\nexport class CoinDetailBarComponent implements OnInit {\r\n    @ViewChild('bar') bar: ElementRef;\r\n    coin$: Observable<Coin>;\r\n\r\n    constructor(private overviewService: OverviewService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.coin$ = this.overviewService.coin$;\r\n    }\r\n\r\n    @HostListener('window:scroll') onScroll() {\r\n        if (window.scrollY > 0 || window.pageYOffset > 0)\r\n            this.bar?.nativeElement.classList.add('expanded');\r\n        else this.bar?.nativeElement.classList.remove('expanded');\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".coin-detail-bar {\r\n    background-color: var(--bg-color);\r\n    padding: 2rem 0;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    border-bottom: 1px solid var(--nav-border);\r\n    transform: translateY(-100%);\r\n    transition: transform 0.6s;\r\n\r\n    &.expanded {\r\n        transform: translateY(0);\r\n        box-shadow: 0px 4px 24px rgb(88 102 126 / 8%),\r\n            0px 1px 2px rgb(88 102 126 / 12%);\r\n    }\r\n\r\n    & > .container {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    &__icon {\r\n        width: 2.4rem;\r\n        height: 2.4rem;\r\n        object-fit: contain;\r\n        margin-right: 1rem;\r\n    }\r\n\r\n    &__name {\r\n        font-weight: bold;\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 1.5rem;\r\n\r\n        span {\r\n            color: var(--color-light-neutral-5);\r\n            font-weight: bold;\r\n            margin-left: 0.2rem;\r\n        }\r\n    }\r\n\r\n    &__price {\r\n        flex-grow: 1;\r\n        text-align: right;\r\n        font-weight: bold;\r\n        font-size: 1.6rem;\r\n\r\n        &__title {\r\n            font-size: 1.2rem;\r\n            font-weight: bold;\r\n            color: var(--color-light-neutral-5);\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./coin-detail-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section #bar class=\"coin-detail-bar\">\r\n    <div class=\"container\" *ngIf=\"coin$ | async as c\">\r\n        <img class=\"coin-detail-bar__icon\" [src]=\"c.icon\" alt=\"...\" />\r\n        <div class=\"coin-detail-bar__name\">\r\n            {{ c.coin_name }} <span>{{ c.coin_id | uppercase }}</span>\r\n        </div>\r\n        <div class=\"coin-detail-bar__price\">\r\n            <span class=\"coin-detail-bar__price__title\">Price:</span>\r\n            {{ c.price | currency: 'USD':'symbol':'1.0-6' }}\r\n            <span class=\"coin-detail-bar__price__state\"></span>\r\n        </div>\r\n    </div>\r\n</section>\r\n"
        },
        {
            "name": "CoinListComponent",
            "id": "component-CoinListComponent-ed0c72010e562dc784030607463bea30",
            "file": "apps/coin-market/src/app/components/coin-list/coin-list.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-coin-list",
            "styleUrls": [
                "./coin-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coin-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataLength$",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "dataSource",
                    "type": "CoinListDatasource",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n        'coin_rank',\r\n        'name',\r\n        'price',\r\n        'trend_24h',\r\n        'trend_7d',\r\n        'market_cap',\r\n        'circulating_supply',\r\n        'more_vert',\r\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "matTable",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'coinListTable'"
                        }
                    ]
                },
                {
                    "name": "paginator",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "rows",
                    "defaultValue": "[{ value: 20 }, { value: 40 }, { value: 60 }]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "select",
                    "type": "MatSelect",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSelect"
                        }
                    ]
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "20",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "sort",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    AfterViewChecked,\r\n} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { CoinListDatasource } from '../../../assets/data/datasource/coin-list-datasource';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CoinListService } from '../../shared/services/coin-list.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-coin-list',\r\n    templateUrl: './coin-list.component.html',\r\n    styleUrls: ['./coin-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CoinListComponent\r\n    implements OnInit, AfterViewInit, AfterViewChecked {\r\n    @ViewChild('coinListTable') matTable: any;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSelect) select: MatSelect;\r\n\r\n    dataSource: CoinListDatasource;\r\n    dataLength$: Observable<number>;\r\n\r\n    displayedColumns = [\r\n        'coin_rank',\r\n        'name',\r\n        'price',\r\n        'trend_24h',\r\n        'trend_7d',\r\n        'market_cap',\r\n        'circulating_supply',\r\n        'more_vert',\r\n    ];\r\n    selectedValue = 20;\r\n\r\n    rows = [{ value: 20 }, { value: 40 }, { value: 60 }];\r\n\r\n    constructor(private coinListService: CoinListService) {\r\n        this.dataLength$ = coinListService.dataLength$;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dataSource = new CoinListDatasource(this.coinListService);\r\n        this.dataSource.loadCoins();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.sort.sortChange\r\n            .pipe(\r\n                tap(() => {\r\n                    this.coinListService.sortEvent.next(this.sort.active);\r\n                    this.coinListService.sortOrder.next(this.sort.direction);\r\n                    this.dataSource.loadCoins();\r\n                })\r\n            )\r\n            .subscribe();\r\n\r\n        this.paginator.page\r\n            .pipe(\r\n                tap(() => {\r\n                    this.coinListService.pageNumber.next(\r\n                        this.paginator.pageIndex\r\n                    );\r\n                    this.coinListService.pageSize.next(this.paginator.pageSize);\r\n                    this.selectedValue = this.paginator.pageSize;\r\n                    this.dataSource.loadCoins();\r\n                })\r\n            )\r\n            .subscribe();\r\n\r\n        this.paginator._intl.itemsPerPageLabel = 'Show Rows';\r\n\r\n        this.select.selectionChange\r\n            .pipe(\r\n                tap(() => {\r\n                    this.coinListService.pageSize.next(this.selectedValue);\r\n                    this.dataSource.loadCoins();\r\n                    this.paginator.pageSize = this.selectedValue;\r\n                    this.paginator.firstPage();\r\n                })\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.matTable.updateStickyColumnStyles();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".home-gainers-losers-table {\r\n    table {\r\n        margin: auto;\r\n        font-size: 1.4rem;\r\n        width: 100%;\r\n        box-shadow: none !important;\r\n        background: var(--theme-background);\r\n\r\n        th {\r\n            color: var(--theme-color);\r\n            display: table-cell;\r\n            vertical-align: inherit;\r\n            font-weight: bold;\r\n        }\r\n        .mat-cell {\r\n            color: var(--theme-color);\r\n        }\r\n    }\r\n\r\n    .arrow {\r\n        display: flex;\r\n        flex-direction: row;\r\n        .down {\r\n            color: var(--down-color);\r\n            font-weight: bold;\r\n        }\r\n        .up {\r\n            color: var(--up-color);\r\n            font-weight: bold;\r\n        }\r\n    }\r\n\r\n    tr:hover {\r\n        background-color: var(--table-row-hover-background-color);\r\n    }\r\n\r\n    h1 {\r\n        font-size: 2.4rem;\r\n        line-height: 3.4rem;\r\n        padding-top: 3.6rem;\r\n        padding-bottom: 3.6rem;\r\n    }\r\n\r\n    .dots {\r\n        font-size: 2.4rem;\r\n        line-height: 2.4rem;\r\n        font-weight: normal;\r\n    }\r\n\r\n    .mat-button-focus-overlay {\r\n        opacity: 0 !important;\r\n    }\r\n\r\n    .rows {\r\n        box-sizing: border-box;\r\n        margin: 0rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        -webkit-box-align: center;\r\n        align-items: center;\r\n        float: right;\r\n        padding-bottom: 10px;\r\n\r\n        .row-text {\r\n            line-height: 1.5;\r\n            margin: 0rem 0.6rem 0rem 0rem;\r\n            color: var(--text-color-sub);\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./coin-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "coinListService",
                        "type": "CoinListService"
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "coinListService",
                        "type": "CoinListService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "AfterViewChecked"
            ],
            "templateData": "<div class=\"home-gainers-losers-table container\">\r\n    <div class=\"elements-above-table\">\r\n        <h1>Today's Cryptocurrency Prices by Market Cap</h1>\r\n        <div class=\"rows\">\r\n            <p class=\"row-text\">Show Rows</p>\r\n            <mat-select [(ngModel)]=\"selectedValue\" name=\"row\">\r\n                <mat-option *ngFor=\"let row of rows\" [value]=\"row.value\">\r\n                    {{ row.value }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </div>\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n        <table\r\n            #coinListTable\r\n            mat-table\r\n            [dataSource]=\"dataSource\"\r\n            class=\"mat-elevation-z8\"\r\n            matSort\r\n        >\r\n            <ng-container matColumnDef=\"coin_rank\" sticky>\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                <td\r\n                    style=\"color: rgb(88, 102, 126)\"\r\n                    mat-cell\r\n                    *matCellDef=\"let coin\"\r\n                >\r\n                    {{ coin.coin_rank }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"name\" sticky>\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n                <td style=\"font-weight: bold\" mat-cell *matCellDef=\"let coin\">\r\n                    <div class=\"coin-icon-name-id\">\r\n                        <img class=\"coin-icon\" [src]=\"coin.coin_icon\" />\r\n                        <a\r\n                            class=\"coin-name\"\r\n                            [routerLink]=\"'/currencies/' + coin.coin_id\"\r\n                            >{{ coin.name }}</a\r\n                        >\r\n                        <p class=\"coin-id\">{{ coin.coin_id }}</p>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\r\n                <td style=\"font-weight: bold\" mat-cell *matCellDef=\"let coin\">\r\n                    <a\r\n                        [routerLink]=\"\r\n                            '/currencies/' + coin.coin_id + '/markets'\r\n                        \"\r\n                        >{{ coin.price | currency: 'USD':'$':'0.2-2' }}</a\r\n                    >\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"trend_24h\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>24h %</th>\r\n                <td mat-cell *matCellDef=\"let coin\">\r\n                    <div class=\"arrow\" *ngIf=\"coin.trend_24h < 0\">\r\n                        <mat-icon class=\"down\">arrow_drop_down</mat-icon>\r\n                        <p class=\"down\">{{ coin.trend_24h | minus }}%</p>\r\n                    </div>\r\n                    <div class=\"arrow\" *ngIf=\"coin.trend_24h > 0\">\r\n                        <mat-icon class=\"up\">arrow_drop_up</mat-icon>\r\n                        <p class=\"up\">{{ coin.trend_24h }}%</p>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"trend_7d\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>7d %</th>\r\n                <td mat-cell *matCellDef=\"let coin\">\r\n                    <div class=\"arrow\" *ngIf=\"coin.trend_7d < 0\">\r\n                        <mat-icon class=\"down\">arrow_drop_down</mat-icon>\r\n                        <p class=\"down\">{{ coin.trend_7d | minus }}%</p>\r\n                    </div>\r\n                    <div class=\"arrow\" *ngIf=\"coin.trend_7d > 0\">\r\n                        <mat-icon class=\"up\">arrow_drop_up</mat-icon>\r\n                        <p class=\"up\">{{ coin.trend_7d }}%</p>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"market_cap\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    Market Cap\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let coin\">\r\n                    {{ coin.market_cap | currency: 'USD':'$':'4.0-2' }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"circulating_supply\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    Circulating Supply\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let coin\">\r\n                    {{ coin.circulating_supply | currency: '':'':'4.0-2' }}\r\n                    {{ coin.coin_id }}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"more_vert\">\r\n                <th mat-header-cell *matHeaderCellDef></th>\r\n                <td mat-cell *matCellDef=\"let coin\">\r\n                    <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menu\">\r\n                        <mat-icon class=\"dots\">more_vert</mat-icon>\r\n                    </button>\r\n                    <mat-menu #menu=\"matMenu\">\r\n                        <a [routerLink]=\"'/currencies/' + coin.coin_id\"\r\n                            ><button mat-menu-item class=\"dropdown-item\">\r\n                                View Charts\r\n                            </button></a\r\n                        >\r\n                        <a\r\n                            [routerLink]=\"\r\n                                '/currencies/' + coin.coin_id + '/markets'\r\n                            \"\r\n                        >\r\n                            <button mat-menu-item class=\"dropdown-item\">\r\n                                View Markets\r\n                            </button></a\r\n                        >\r\n                        <a\r\n                            [routerLink]=\"\r\n                                '/currencies/' +\r\n                                coin.coin_id +\r\n                                '/historical-data'\r\n                            \"\r\n                            ><button mat-menu-item class=\"dropdown-item\">\r\n                                View Historical Data\r\n                            </button></a\r\n                        >\r\n                    </mat-menu>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr\r\n                mat-header-row\r\n                *matHeaderRowDef=\"displayedColumns; sticky: true\"\r\n            ></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n        </table>\r\n    </div>\r\n    <mat-paginator\r\n        #myPaginator\r\n        [length]=\"dataLength$ | async\"\r\n        [pageSize]=\"20\"\r\n        [pageSizeOptions]=\"[20, 40, 60,]\"\r\n    >\r\n    </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "CoinStatisticRowComponent",
            "id": "component-CoinStatisticRowComponent-65f0618c6d7c8dde377095b70418dab3",
            "file": "apps/coin-market/src/app/components/overview/coin-statistics/coin-statistic-row/coin-statistic-row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-coin-statistic-row",
            "styleUrls": [
                "./coin-statistic-row.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coin-statistic-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "line": 15,
                    "type": "Date"
                },
                {
                    "name": "dayTag",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "isCurrency",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "percentage",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "tooltip",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 10,
                    "type": "number | number[] | string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "comparison",
                    "type": "Comparison",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "handleComparisonClass",
                    "args": [],
                    "optional": false,
                    "returnType": "{ 'comparison--up': boolean; 'comparison--down': boolean; 'comparison--small': string | number | ...",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "isArray",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "isString",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'coin-market-coin-statistic-row',\r\n    templateUrl: './coin-statistic-row.component.html',\r\n    styleUrls: ['./coin-statistic-row.component.scss'],\r\n})\r\nexport class CoinStatisticRowComponent implements OnInit {\r\n    @Input() title: string;\r\n    @Input() value: number | number[] | string;\r\n    @Input() isCurrency: boolean;\r\n    @Input() dayTag: boolean;\r\n    @Input() percentage: number;\r\n    @Input() tooltip: string;\r\n    @Input() date: Date;\r\n    comparison: Comparison;\r\n\r\n    ngOnInit(): void {\r\n        if (this.percentage) this.comparison = new Comparison(this.percentage);\r\n    }\r\n\r\n    isArray() {\r\n        return this.value instanceof Array;\r\n    }\r\n\r\n    isString() {\r\n        return typeof this.value === 'string';\r\n    }\r\n\r\n    handleComparisonClass() {\r\n        return {\r\n            'comparison--up': this.percentage > 0,\r\n            'comparison--down': this.percentage < 0,\r\n            'comparison--small': this.value,\r\n        };\r\n    }\r\n}\r\n\r\nclass Comparison {\r\n    icon?: 'expand_more' | 'expand_less';\r\n    percentage?: number;\r\n\r\n    constructor(percentage: number) {\r\n        this.icon = percentage < 0 ? 'expand_more' : 'expand_less';\r\n        this.percentage = percentage < 0 ? percentage * -1 : percentage;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".coin-statistics__table__row__header {\r\n    color: var(--color-light-neutral-6);\r\n    text-align: left;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .badge-gray {\r\n        margin-left: 0.5rem;\r\n    }\r\n\r\n    .mat-icon.mat-tooltip-trigger {\r\n        margin-left: 0.4rem;\r\n    }\r\n\r\n    &__date {\r\n        font-size: 85%;\r\n        font-weight: bolder;\r\n    }\r\n}\r\n\r\n.coin-statistics__table__row__body {\r\n    font-weight: bold;\r\n    margin: 0;\r\n    text-align: right;\r\n\r\n    .comparison {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n\r\n        &.comparison--small {\r\n            font-size: 1.1rem;\r\n        }\r\n\r\n        &.comparison--up {\r\n            color: var(--up-color);\r\n        }\r\n\r\n        &.comparison--down {\r\n            color: var(--down-color);\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./coin-statistic-row.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"coin-statistics__table__row__header\">\r\n    <ng-container *ngIf=\"!date; else titleWithDate\">{{ title }}</ng-container>\r\n    <span *ngIf=\"dayTag\" class=\"badge-gray\">24h</span>\r\n    <span *ngIf=\"tooltip; then tooltipTemplate\"></span>\r\n</div>\r\n<div class=\"coin-statistics__table__row__body\">\r\n    <ng-container *ngIf=\"!isArray(); else values\">\r\n        {{\r\n            isString()\r\n                ? value\r\n                : isCurrency\r\n                ? (value | currency: 'USD':'symbol':'1.0-2')\r\n                : (value | number: '1.0-6')\r\n        }}\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"percentage; then comparisonTemplate\"></ng-container>\r\n</div>\r\n\r\n<ng-template #titleWithDate>\r\n    <div>\r\n        {{ title }}\r\n        <div class=\"coin-statistics__table__row__header__date\">\r\n            {{ date | date }}\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #comparisonTemplate>\r\n    <div class=\"comparison\" [ngClass]=\"handleComparisonClass()\">\r\n        <mat-icon>{{ comparison.icon }}</mat-icon>\r\n        {{ comparison.percentage }}%\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #values>\r\n    <ng-container *ngFor=\"let v of value; index as i\">\r\n        {{ v | currency: 'USD':'symbol':'1.0-2' }}\r\n        {{ i === 0 ? '/' : '' }}\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #tooltipTemplate>\r\n    <mat-icon [matTooltip]=\"tooltip\">help</mat-icon>\r\n</ng-template>\r\n"
        },
        {
            "name": "CoinStatisticsComponent",
            "id": "component-CoinStatisticsComponent-21b7b70e5ba03d9afe4b0956bbfe039f",
            "file": "apps/coin-market/src/app/components/overview/coin-statistics/coin-statistics.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-coin-statistics",
            "styleUrls": [
                "./coin-statistics.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./coin-statistics.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coinStatistics$",
                    "type": "Observable<OverviewPriceStatistics>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "expanded",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OverviewPriceStatistics } from '../../../models/overview-price-statistics.model';\r\nimport { OverviewService } from '../../../shared/services/overview.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-coin-statistics',\r\n    templateUrl: './coin-statistics.component.html',\r\n    styleUrls: ['./coin-statistics.component.scss'],\r\n})\r\nexport class CoinStatisticsComponent implements OnInit {\r\n    coinStatistics$: Observable<OverviewPriceStatistics>;\r\n    expanded = false;\r\n\r\n    constructor(private overviewService: OverviewService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.coinStatistics$ = this.overviewService.coinStatistics$;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".coin-statistics {\r\n    background-color: var(--color-light-neutral-1);\r\n    padding: 2.4rem;\r\n    border-radius: 16px;\r\n\r\n    &__table {\r\n        width: 100%;\r\n\r\n        &__caption {\r\n            margin-top: 2.5rem;\r\n            padding-bottom: 1rem;\r\n            display: block;\r\n            font-size: 1.2rem;\r\n            border-bottom: 1px solid var(--theme-border-color);\r\n            color: var(--color-light-neutral-5);\r\n            text-align: left;\r\n        }\r\n\r\n        coin-market-coin-statistic-row {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding: 1.8rem 0;\r\n            &:not(:last-child) {\r\n                border-bottom: 1px solid var(--theme-border-color);\r\n            }\r\n        }\r\n    }\r\n    button {\r\n        width: 100%;\r\n    }\r\n}\r\n",
                    "styleUrl": "./coin-statistics.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"coin-statistics\" *ngIf=\"coinStatistics$ | async as s\">\r\n    <h2>{{ s.coin_id | uppercase }} Price Statistics</h2>\r\n    <div class=\"coin-statistics__table\">\r\n        <div class=\"coin-statistics__table__caption\">Bitcoin Price Today</div>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Bitcoin Price\"\r\n            [value]=\"s.price\"\r\n            [isCurrency]=\"true\"\r\n        ></coin-market-coin-statistic-row>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Price Change\"\r\n            [value]=\"s.price_change_24h\"\r\n            [dayTag]=\"true\"\r\n            [isCurrency]=\"true\"\r\n        ></coin-market-coin-statistic-row>\r\n        <coin-market-coin-statistic-row\r\n            title=\"24h Low / 24h High\"\r\n            [value]=\"[s.price_low_high_24h.low, s.price_low_high_24h.high]\"\r\n            [isCurrency]=\"true\"\r\n        ></coin-market-coin-statistic-row>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Trading Volume\"\r\n            [dayTag]=\"true\"\r\n            [value]=\"s.trading_volume_24h\"\r\n            [isCurrency]=\"true\"\r\n        ></coin-market-coin-statistic-row>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Volume / Market Cap\"\r\n            [value]=\"s.trading_volume_24h / s.market_cap\"\r\n        ></coin-market-coin-statistic-row>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Market Dominance\"\r\n            [value]=\"s.market_dominance + '%'\"\r\n        ></coin-market-coin-statistic-row>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Market Rank\"\r\n            [value]=\"'#' + s.market_rank\"\r\n        ></coin-market-coin-statistic-row>\r\n        <div class=\"coin-statistics__table__caption\">Bitcoin Market Cap</div>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Market Cap\"\r\n            [isCurrency]=\"true\"\r\n            [value]=\"s.market_cap\"\r\n        ></coin-market-coin-statistic-row>\r\n        <coin-market-coin-statistic-row\r\n            title=\"Fully Diluted Market Cap\"\r\n            [value]=\"s.fully_diluted_market_cap\"\r\n            [isCurrency]=\"true\"\r\n        ></coin-market-coin-statistic-row>\r\n    </div>\r\n    <ng-container *ngIf=\"expanded\">\r\n        <div class=\"coin-statistics__table\">\r\n            <div class=\"coin-statistics__table__caption\">\r\n                Bitcoin Price Yesterday\r\n            </div>\r\n            <coin-market-coin-statistic-row\r\n                title=\"Yesterday's Low / High\"\r\n                [value]=\"[\r\n                    s.price_low_high_yesterday.low,\r\n                    s.price_low_high_yesterday.high\r\n                ]\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"Yesterday's Open / Close\"\r\n                [value]=\"[\r\n                    s.price_open_close_yesterday.open,\r\n                    s.price_open_close_yesterday.close\r\n                ]\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"Yesterday's Change\"\r\n                [percentage]=\"s.price_change_percentage_yesterday\"\r\n            ></coin-market-coin-statistic-row>\r\n\r\n            <div class=\"coin-statistics__table__caption\">\r\n                Bitcoin Price History\r\n            </div>\r\n            <coin-market-coin-statistic-row\r\n                title=\"7d Low / 7d High\"\r\n                [value]=\"[s.price_low_high_7d.low, s.price_low_high_7d.high]\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"30d Low / 30d High\"\r\n                [value]=\"[s.price_low_high_30d.low, s.price_low_high_30d.high]\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"90d Low / 90d High\"\r\n                [value]=\"[s.price_low_high_90d.low, s.price_low_high_90d.high]\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"52 Week Low / 52 Week High\"\r\n                [value]=\"[s.price_low_high_52w.low, s.price_low_high_52w.high]\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"All Time High\"\r\n                [value]=\"s.price_low_high_all.high.high_price\"\r\n                [isCurrency]=\"true\"\r\n                [date]=\"s.price_low_high_all.high.date\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"All Time Low\"\r\n                [value]=\"s.price_low_high_all.low.low_price\"\r\n                [isCurrency]=\"true\"\r\n                [date]=\"s.price_low_high_all.low.date\"\r\n            ></coin-market-coin-statistic-row>\r\n\r\n            <div class=\"coin-statistics__table__caption\">Bitcoin Supply</div>\r\n            <coin-market-coin-statistic-row\r\n                title=\"Circulating Supply\"\r\n                [value]=\"\r\n                    (s.circulating_supply.circulating_supply | number) + ' BTC'\r\n                \"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"Total Supply\"\r\n                [value]=\"(s.circulating_supply.total_supply | number) + ' BTC'\"\r\n            ></coin-market-coin-statistic-row>\r\n            <coin-market-coin-statistic-row\r\n                title=\"Max Supply\"\r\n                [value]=\"(s.circulating_supply.max_supply | number) + ' BTC'\"\r\n            ></coin-market-coin-statistic-row>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <button class=\"large-gray-button\" (click)=\"expanded = !expanded\">\r\n        {{ expanded ? 'Show Less' : 'Show More' }}\r\n    </button>\r\n</section>\r\n"
        },
        {
            "name": "CurrencyComponent",
            "id": "component-CurrencyComponent-0acd2de185248dc49d0731da33ae9eab",
            "file": "apps/coin-market/src/app/pages/currency/currency.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-currency",
            "styleUrls": [
                "./currency.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./currency.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'coin-market-currency',\r\n  templateUrl: './currency.component.html',\r\n  styleUrls: ['./currency.component.scss']\r\n})\r\nexport class CurrencyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./currency.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<coin-market-loading-bar></coin-market-loading-bar>\r\n<coin-market-coin-detail-bar></coin-market-coin-detail-bar>\r\n\r\n<coin-market-details-section></coin-market-details-section>\r\n\r\n<coin-market-currency-tabs></coin-market-currency-tabs>\r\n\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "CurrencyTabsComponent",
            "id": "component-CurrencyTabsComponent-38ee182b0473f0bda4ff224b76d3ef93",
            "file": "apps/coin-market/src/app/components/currency-tabs/currency-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-currency-tabs",
            "styleUrls": [
                "./currency-tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./currency-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "links",
                    "defaultValue": "[\r\n        { text: 'Overview', routerLink: '' },\r\n        { text: 'Markets', routerLink: 'markets' },\r\n        { text: 'Historical Data', routerLink: 'historical-data' },\r\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selected",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "matchRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'coin-market-currency-tabs',\r\n    templateUrl: './currency-tabs.component.html',\r\n    styleUrls: ['./currency-tabs.component.scss'],\r\n})\r\nexport class CurrencyTabsComponent implements OnInit {\r\n    links = [\r\n        { text: 'Overview', routerLink: '' },\r\n        { text: 'Markets', routerLink: 'markets' },\r\n        { text: 'Historical Data', routerLink: 'historical-data' },\r\n    ];\r\n    selected = '';\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n        this.matchRoute();\r\n\r\n        this.router.events.subscribe((e) => {\r\n            if (e instanceof NavigationEnd) this.matchRoute();\r\n        });\r\n    }\r\n\r\n    matchRoute() {\r\n        for (const l of this.links) {\r\n            if (\r\n                l.routerLink.length > 0 &&\r\n                this.router.url.match('/' + l.routerLink)\r\n            ) {\r\n                this.selected = l.routerLink;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(event: string) {\r\n        this.selected = event;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".currency-tabs {\r\n    border-top: 1px solid;\r\n    border-bottom: 1px solid;\r\n    border-color: var(--border-color);\r\n    padding: 1.2rem 0;\r\n\r\n    &__container {\r\n        display: flex;\r\n    }\r\n\r\n    &__link {\r\n        font-weight: bold;\r\n        padding: 0.8rem 1.2rem;\r\n        border-radius: 8px;\r\n        color: var(--theme-color);\r\n        min-width: unset;\r\n        height: auto;\r\n\r\n        &:not(:first-child) {\r\n            margin-left: 0.6rem;\r\n        }\r\n\r\n        &.active {\r\n            background-color: var(--color-primary-blue);\r\n            color: #fff !important;\r\n\r\n            &:hover {\r\n                background-color: var(--color-primary-blue);\r\n            }\r\n        }\r\n\r\n        &:hover {\r\n            background-color: var(--color-light-neutral-1);\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./currency-tabs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"currency-tabs\">\r\n    <div class=\"currency-tabs__container container\">\r\n        <a\r\n            class=\"currency-tabs__link\"\r\n            *ngFor=\"let i of links\"\r\n            [class.active]=\"selected === i.routerLink\"\r\n            (click)=\"onClick(i.routerLink)\"\r\n            [routerLink]=\"'./' + i.routerLink\"\r\n        >\r\n            {{ i.text }}\r\n        </a>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "DetailsSectionComponent",
            "id": "component-DetailsSectionComponent-034a56d9510868e0cf2e8251358ef9bb",
            "file": "apps/coin-market/src/app/components/details-section/details-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-details-section",
            "styleUrls": [
                "./details-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'coin-market-details-section',\r\n    styleUrls: ['./details-section.component.scss'],\r\n    templateUrl: './details-section.component.html',\r\n})\r\nexport class DetailsSectionComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container-cryptocurrencies-coins-bitcoin {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding-top: 2.4rem;\r\n\r\n    .top-links-section {\r\n        display: flex;\r\n\r\n        a {\r\n            color: var(--color-light-neutral-6);\r\n            padding-right: 0.5rem;\r\n            position: relative;\r\n            white-space: nowrap;\r\n            text-decoration: none;\r\n            font-size: 1.2rem;\r\n            font-weight: 500;\r\n            line-height: 1.8rem;\r\n\r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n\r\n        .material-icons {\r\n            font-size: 1.8rem;\r\n            line-height: 100%;\r\n            color: rgb(88, 102, 126);\r\n            padding-right: 0.8rem;\r\n            top: 0.2rem;\r\n        }\r\n\r\n        .finally-span {\r\n            flex: 1 1 0%;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n            color: var(--color-primary-black);\r\n            font-size: 1.2rem;\r\n            font-weight: 500;\r\n            line-height: 1.8rem;\r\n            margin: 0rem;\r\n        }\r\n    }\r\n\r\n    .container-inner {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n\r\n        @media only screen and (min-width: 1300px) {\r\n            .nameSection,\r\n            ._link-section {\r\n                flex: 0 0 36%;\r\n            }\r\n            ._price-section {\r\n                flex: 0 0 37%;\r\n            }\r\n            ._button-section {\r\n                flex: 0 0 27%;\r\n            }\r\n            ._stats-section {\r\n                flex: 0 0 64%;\r\n            }\r\n        }\r\n\r\n        @media (min-width: 768px) and (max-width: 1300px) {\r\n            .nameSection {\r\n                flex: 0 0 50%;\r\n            }\r\n            ._link-section {\r\n                flex: 0 0 50%;\r\n                order: 3;\r\n            }\r\n            ._price-section {\r\n                flex: 0 0 50%;\r\n            }\r\n            ._stats-section {\r\n                flex: 0 0 100%;\r\n                order: 5;\r\n            }\r\n            ._button-section {\r\n                order: 4;\r\n                margin-top: 20px;\r\n                flex: 0 0 50%;\r\n            }\r\n        }\r\n\r\n        @media only screen and (max-width: 768px) {\r\n            .nameSection {\r\n                flex: 0 0 100%;\r\n            }\r\n\r\n            ._link-section {\r\n                flex: 0 0 100%;\r\n            }\r\n            ._price-section {\r\n                flex: 0 0 100%;\r\n            }\r\n            ._button-section {\r\n                flex: 0 0 100%;\r\n            }\r\n            ._stats-section {\r\n                visibility: hidden;\r\n                position: absolute;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./details-section.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container-cryptocurrencies-coins-bitcoin container\">\r\n    <div class=\"top-links-section\">\r\n        <a href=\"/\" class=\"crypto-link\">Cryptocurrencies</a>\r\n        <span class=\"material-icons\">chevron_right</span>\r\n        <a href=\"/coins/\" class=\"coins-link\">Coins</a>\r\n        <span class=\"material-icons\">chevron_right</span>\r\n        <span font-size=\"2,3\" class=\"finally-span\">Bitcoin</span>\r\n    </div>\r\n    <div class=\"container-inner\">\r\n        <coin-market-name-section\r\n            class=\"nameSection\"\r\n        ></coin-market-name-section>\r\n        <coin-market-price-section\r\n            class=\"_price-section\"\r\n        ></coin-market-price-section>\r\n        <coin-market-buy-add-button-section\r\n            class=\"_button-section\"\r\n        ></coin-market-buy-add-button-section>\r\n        <coin-market-link-section\r\n            class=\"_link-section\"\r\n        ></coin-market-link-section>\r\n        <coin-market-stats-section\r\n            class=\"_stats-section\"\r\n        ></coin-market-stats-section>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-40433c93fca306ab8609c5542d228425",
            "file": "apps/coin-market/src/app/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'coin-market-footer',\r\n    templateUrl: './footer.component.html',\r\n    styleUrls: ['./footer.component.scss'],\r\n})\r\nexport class FooterComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "footer {\r\n    height: 350px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding-top: 6rem;\r\n    padding-bottom: 6rem;\r\n\r\n    .footer-inner {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        &__logo {\r\n            background-image: var(--logo-src);\r\n            width: 20rem;\r\n            min-height: 5rem;\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n        }\r\n\r\n        &__navigation {\r\n            padding: 2rem 0;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n\r\n            &__list {\r\n                &:not(:last-child) {\r\n                    margin-right: 6rem;\r\n                }\r\n\r\n                h6 {\r\n                    font-size: 1.7rem;\r\n                    margin-bottom: 1.5rem;\r\n                }\r\n\r\n                li {\r\n                    cursor: pointer;\r\n                    margin-bottom: 1rem;\r\n                    font-size: 1.5rem;\r\n\r\n                    a:hover {\r\n                        color: var(--color-primary-blue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        @media (min-width: 576px) {\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n\r\n            &__navigation {\r\n                padding: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    p,\r\n    a {\r\n        color: var(--color-light-neutral-6);\r\n    }\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<footer class=\"container\">\r\n    <div class=\"footer-inner\">\r\n        <div class=\"footer-inner__logo\"></div>\r\n\r\n        <div class=\"footer-inner__navigation\">\r\n            <div class=\"footer-inner__navigation__list\">\r\n                <h6>Navigation</h6>\r\n                <ul>\r\n                    <li><a routerLink=\"/\">Cryptocurrencies</a></li>\r\n                    <li>\r\n                        <a routerLink=\"/gainers-losers\">Gainers & Losers</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"footer-inner__navigation__list\">\r\n                <h6>Socials</h6>\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"https://facebook.com\" target=\"_blank\"\r\n                            >Facebook</a\r\n                        >\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://web.telegram.org/\" target=\"_blank\"\r\n                            >Telegram</a\r\n                        >\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://instagram.com\" target=\"_blank\"\r\n                            >Instagram</a\r\n                        >\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://twitter.com\" target=\"_blank\"\r\n                            >Twitter</a\r\n                        >\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <p class=\"copyright\">© 2021 CoinMarketCap. All rights reserved</p>\r\n</footer>\r\n"
        },
        {
            "name": "GainersLosersComponent",
            "id": "component-GainersLosersComponent-6f361e7ce36cb4ad0a75a786ea38f082",
            "file": "apps/coin-market/src/app/pages/gainers-losers/gainers-losers.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-gainers-losers",
            "styleUrls": [
                "./gainers-losers.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gainers-losers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\r\n        {\r\n            headerName: '#',\r\n            field: 'rank',\r\n            cellClass: 'rank-gray',\r\n            maxWidth: 60,\r\n            flex: 2,\r\n        },\r\n        {\r\n            headerName: 'Name',\r\n            field: 'coin_name',\r\n            minWidth: 290,\r\n            flex: 5,\r\n            cellRenderer: function (params) {\r\n                const { coin_name, coin_id, coin_icon } = params.data;\r\n                const newLink = `\r\n                <div class=\"coin-icon-name-id\">\r\n                    <img class=\"coin-icon\" src=\"${coin_icon}\" alt=\"...\"/>\r\n                    <div class=\"coin-name\" >${coin_name}</div>\r\n                    <div class=\"coin-id\">${coin_id}</div>\r\n                </div>`;\r\n                return newLink;\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Price',\r\n            field: 'price',\r\n            minWidth: 290,\r\n            flex: 5,\r\n\r\n            cellRenderer: (params) => {\r\n                const price = this.currencyPipe.transform(\r\n                    params.data.price,\r\n                    'USD',\r\n                    'symbol',\r\n                    '1.0-10'\r\n                );\r\n                return `${price}`;\r\n            },\r\n        },\r\n    ]",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "gainers$",
                    "type": "Observable<GainersLosers[]>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "gridOptions",
                    "defaultValue": "{\r\n        alignedGrids: [],\r\n        defaultColDef: {\r\n            sortable: true,\r\n            lockPinned: true,\r\n        },\r\n    }",
                    "type": "GridOptions",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "losers$",
                    "type": "Observable<GainersLosers[]>",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { CurrencyPipe } from '@angular/common';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ColDef, GridOptions } from 'ag-grid-community';\r\nimport { Observable } from 'rxjs';\r\nimport { GainersLosers } from '../../models/gainers-losers';\r\nimport { GainersLosersService } from '../../shared/services/gainers-losers.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-gainers-losers',\r\n    templateUrl: './gainers-losers.component.html',\r\n    styleUrls: ['./gainers-losers.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class GainersLosersComponent implements OnInit {\r\n    gainers$: Observable<GainersLosers[]>;\r\n    losers$: Observable<GainersLosers[]>;\r\n    gridOptions: GridOptions = {\r\n        alignedGrids: [],\r\n        defaultColDef: {\r\n            sortable: true,\r\n            lockPinned: true,\r\n        },\r\n    };\r\n\r\n    columnDefs: ColDef[] = [\r\n        {\r\n            headerName: '#',\r\n            field: 'rank',\r\n            cellClass: 'rank-gray',\r\n            maxWidth: 60,\r\n            flex: 2,\r\n        },\r\n        {\r\n            headerName: 'Name',\r\n            field: 'coin_name',\r\n            minWidth: 290,\r\n            flex: 5,\r\n            cellRenderer: function (params) {\r\n                const { coin_name, coin_id, coin_icon } = params.data;\r\n                const newLink = `\r\n                <div class=\"coin-icon-name-id\">\r\n                    <img class=\"coin-icon\" src=\"${coin_icon}\" alt=\"...\"/>\r\n                    <div class=\"coin-name\" >${coin_name}</div>\r\n                    <div class=\"coin-id\">${coin_id}</div>\r\n                </div>`;\r\n                return newLink;\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Price',\r\n            field: 'price',\r\n            minWidth: 290,\r\n            flex: 5,\r\n\r\n            cellRenderer: (params) => {\r\n                const price = this.currencyPipe.transform(\r\n                    params.data.price,\r\n                    'USD',\r\n                    'symbol',\r\n                    '1.0-10'\r\n                );\r\n                return `${price}`;\r\n            },\r\n        },\r\n    ];\r\n    constructor(\r\n        private gainersLosersService: GainersLosersService,\r\n        private currencyPipe: CurrencyPipe\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.gainers$ = this.gainersLosersService.gainers$;\r\n        this.losers$ = this.gainersLosersService.losers$;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#gainers-losers {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .ag-theme-material {\r\n        font-family: inherit;\r\n    }\r\n    .rank-gray {\r\n        color: var(--text-color-sub);\r\n    }\r\n\r\n    h1 {\r\n        font-size: 2.4rem;\r\n        line-height: 3.4rem;\r\n        padding-top: 3.6rem;\r\n        padding-bottom: 3.6rem;\r\n    }\r\n    p {\r\n        line-height: 1.5;\r\n        margin: 0px;\r\n        color: var(--text-color-sub);\r\n        font-size: 14px;\r\n    }\r\n\r\n    .tables {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-between;\r\n\r\n        .table {\r\n            flex-basis: 100%;\r\n            margin-top: 3rem;\r\n            h2 {\r\n                display: block;\r\n                font-size: 1.8rem;\r\n                margin-block-end: 1rem;\r\n                margin-inline-start: 0rem;\r\n                margin-inline-end: 0rem;\r\n                font-weight: 700;\r\n            }\r\n\r\n            @media (min-width: 1200px) {\r\n                flex-basis: 48%;\r\n            }\r\n        }\r\n    }\r\n\r\n    ag-grid-angular {\r\n        .ag-row {\r\n            width: 100%;\r\n        }\r\n\r\n        .ag-pinned-left-header {\r\n            border: none;\r\n        }\r\n\r\n        .ag-cell.ag-cell-last-left-pinned:not(.ag-cell-range-right):not(.ag-cell-range-single-cell) {\r\n            border: none;\r\n        }\r\n\r\n        .ag-row-hover {\r\n            background: var(--theme-background) !important;\r\n        }\r\n\r\n        .ag-root-wrapper {\r\n            border: none;\r\n        }\r\n\r\n        .ag-header {\r\n            .ag-header-cell-text {\r\n                font-weight: bolder;\r\n                color: var(--theme-color);\r\n            }\r\n        }\r\n\r\n        .ag-header,\r\n        .ag-row {\r\n            border-color: var(--border-color);\r\n            background: var(--theme-background) !important;\r\n            color: var(--theme-color);\r\n\r\n            &:hover {\r\n                background-color: var(--theme-section-background) !important;\r\n            }\r\n        }\r\n\r\n        .ag-theme-material {\r\n            background: var(--theme-background) !important;\r\n        }\r\n        .ag-root-wrapper {\r\n            background: var(--theme-background) !important;\r\n        }\r\n\r\n        .ag-header-cell:hover {\r\n            background: none;\r\n        }\r\n\r\n        .ag-header-icon {\r\n            color: var(--theme-color);\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./gainers-losers.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "gainersLosersService",
                        "type": "GainersLosersService"
                    },
                    {
                        "name": "currencyPipe",
                        "type": "CurrencyPipe"
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "gainersLosersService",
                        "type": "GainersLosersService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "currencyPipe",
                        "type": "CurrencyPipe",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section id=\"gainers-losers\" class=\"home-gainers-losers-table container\">\r\n    <h1>Top Crypto Gainers And Losers Today</h1>\r\n    <p>\r\n        Which crypto coins and tokens with volume (24h) > US$50,000 have gained\r\n        or lost the most in the last 24 hours?\r\n    </p>\r\n    <div class=\"tables\">\r\n        <div class=\"table\">\r\n            <h2>Top Gainers</h2>\r\n            <ag-grid-angular\r\n                class=\"ag-theme-material\"\r\n                [rowData]=\"gainers$ | async\"\r\n                [columnDefs]=\"columnDefs\"\r\n                domLayout=\"autoHeight\"\r\n                [gridOptions]=\"gridOptions\"\r\n            >\r\n            </ag-grid-angular>\r\n        </div>\r\n        <div class=\"table\">\r\n            <h2>Top Losers</h2>\r\n            <ag-grid-angular\r\n                class=\"ag-theme-material\"\r\n                [rowData]=\"losers$ | async\"\r\n                [columnDefs]=\"columnDefs\"\r\n                domLayout=\"autoHeight\"\r\n                [gridOptions]=\"gridOptions\"\r\n            >\r\n            </ag-grid-angular>\r\n        </div>\r\n    </div>\r\n</section>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HistoricalDataComponent",
            "id": "component-HistoricalDataComponent-09f0dc71a677773e1cabfe2004301f4f",
            "file": "apps/coin-market/src/app/components/historical-data/historical-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-historical-data",
            "styleUrls": [
                "./historical-data.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./historical-data.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dateRange$",
                    "type": "Observable<CalendarDateRange>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n        'date_time',\r\n        'highest',\r\n        'lowest',\r\n        'opening',\r\n        'closing',\r\n        'volume',\r\n        'marketCap',\r\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "historicalData$",
                    "type": "Observable<HistoricalData[]>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "menu",
                    "type": "MatMenuTrigger",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatMenuTrigger"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "filterByDate",
                    "args": [
                        {
                            "name": "dates",
                            "type": "CalendarDateRange"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "dates",
                            "type": "CalendarDateRange",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { CalendarDateRange } from '@coin-market/data';\r\nimport { Observable } from 'rxjs';\r\nimport { HistoricalData } from '../../models/historical-data.model';\r\nimport { HistoricalDataService } from '../../shared/services/historical-data.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-historical-data',\r\n    templateUrl: './historical-data.component.html',\r\n    styleUrls: ['./historical-data.component.scss'],\r\n})\r\nexport class HistoricalDataComponent implements OnInit {\r\n    @ViewChild(MatMenuTrigger) menu: MatMenuTrigger;\r\n    historicalData$: Observable<HistoricalData[]>;\r\n    dateRange$: Observable<CalendarDateRange>;\r\n    displayedColumns = [\r\n        'date_time',\r\n        'highest',\r\n        'lowest',\r\n        'opening',\r\n        'closing',\r\n        'volume',\r\n        'marketCap',\r\n    ];\r\n\r\n    constructor(private historicalDataService: HistoricalDataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.historicalData$ = this.historicalDataService.historicalData$;\r\n        this.dateRange$ = this.historicalDataService.dateRange$;\r\n    }\r\n\r\n    loadMore() {\r\n        this.historicalDataService.loadMore();\r\n    }\r\n\r\n    filterByDate(dates: CalendarDateRange) {\r\n        this.historicalDataService.filterByDate(dates);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".historical-data {\r\n    margin-top: 2.5rem;\r\n    margin-bottom: 2.5rem;\r\n\r\n    &__header {\r\n        margin-bottom: 2.5rem;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n\r\n        &__datepicker {\r\n            cursor: pointer;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-evenly;\r\n            background-color: transparent;\r\n            border: 1px solid var(--border-color);\r\n            border-radius: 10px;\r\n            padding: 1.2rem;\r\n            width: 150px;\r\n            color: inherit;\r\n\r\n            &:hover {\r\n                background-color: var(--color-light-neutral-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    &__results {\r\n        font-size: 85%;\r\n        color: var(--color-light-neutral-6);\r\n    }\r\n\r\n    & > p {\r\n        font-size: 105%;\r\n    }\r\n}\r\n\r\n.mat-table {\r\n    width: 100%;\r\n    box-shadow: none !important;\r\n    background: var(--theme-background) !important;\r\n\r\n    .mat-header-cell,\r\n    .mat-cell {\r\n        background-color: var();\r\n        &:not(:first-child) {\r\n            text-align: right;\r\n        }\r\n    }\r\n\r\n    .mat-column-date_time {\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .mat-header-cell {\r\n        color: var(--theme-color);\r\n        font-weight: bold;\r\n    }\r\n\r\n    .mat-cell {\r\n        color: var(--theme-color);\r\n    }\r\n}\r\n",
                    "styleUrl": "./historical-data.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "historicalDataService",
                        "type": "HistoricalDataService"
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "historicalDataService",
                        "type": "HistoricalDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"historical-data container\">\r\n    <div class=\"historical-data__header\">\r\n        <h2>Historical Data for Bitcoin</h2>\r\n        <button\r\n            class=\"historical-data__header__datepicker\"\r\n            [matMenuTriggerFor]=\"dateRange\"\r\n        >\r\n            <mat-icon>calendar_today</mat-icon> Date Range\r\n            <mat-icon>expand_more</mat-icon>\r\n        </button>\r\n    </div>\r\n\r\n    <mat-menu #dateRange>\r\n        <ui-calendar\r\n            (dateRangeEvent)=\"filterByDate($event)\"\r\n            (closeMenuEvent)=\"menu.closeMenu()\"\r\n            [selectedRange]=\"dateRange$ | async\"\r\n        ></ui-calendar>\r\n    </mat-menu>\r\n\r\n    <ng-container *ngIf=\"historicalData$ | async as hd\">\r\n        <div class=\"historical-data__results\" *ngIf=\"dateRange$ | async as dr\">\r\n            Showing {{ hd.length }} results, between {{ dr.start | date }} ~\r\n            {{ dr.end | date }}\r\n        </div>\r\n        <div class=\"table-responsive\">\r\n            <table mat-table [dataSource]=\"hd\" class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"date_time\" sticky>\r\n                    <th mat-header-cell *matHeaderCellDef>Date</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.date_time | date: 'mediumDate' }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"opening\">\r\n                    <th mat-header-cell *matHeaderCellDef>Open*</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{\r\n                            element.opening.value\r\n                                | currency: 'USD':'symbol':'1.0-2'\r\n                        }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"highest\">\r\n                    <th mat-header-cell *matHeaderCellDef>High</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{\r\n                            element.highest.value\r\n                                | currency: 'USD':'symbol':'1.0-2'\r\n                        }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"lowest\">\r\n                    <th mat-header-cell *matHeaderCellDef>Low</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{\r\n                            element.lowest.value\r\n                                | currency: 'USD':'symbol':'1.0-2'\r\n                        }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"closing\">\r\n                    <th mat-header-cell *matHeaderCellDef>Close**</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{\r\n                            element.closing.value\r\n                                | currency: 'USD':'symbol':'1.0-2'\r\n                        }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"volume\">\r\n                    <th mat-header-cell *matHeaderCellDef>Volume</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{\r\n                            element.volume.value\r\n                                | currency: 'USD':'symbol':'1.0-2'\r\n                        }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"marketCap\">\r\n                    <th mat-header-cell *matHeaderCellDef>Market Cap</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{\r\n                            element.marketCap.value\r\n                                | currency: 'USD':'symbol':'1.0-2'\r\n                        }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                    mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n            </table>\r\n        </div>\r\n\r\n        <button class=\"large-gray-button\" (click)=\"loadMore()\">\r\n            Load More\r\n        </button>\r\n    </ng-container>\r\n    <p>* Earliest data in range (UTC time)</p>\r\n    <p>** Latest data in range (UTC time)</p>\r\n</div>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-e7eb946292e0c2750a6b001ac80c8df8",
            "file": "apps/coin-market/src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'coin-market-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"coin-list\"><coin-market-coin-list></coin-market-coin-list></div>\r\n"
        },
        {
            "name": "InfoParagraphComponent",
            "id": "component-InfoParagraphComponent-3dc8b1213a4d418cb20f49e96ebe3d47",
            "file": "apps/coin-market/src/app/components/overview/info-paragraph/info-paragraph.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-info-paragraph",
            "styleUrls": [
                "./info-paragraph.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./info-paragraph.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data$",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "expanded",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OverviewService } from '../../../shared/services/overview.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-info-paragraph',\r\n    templateUrl: './info-paragraph.component.html',\r\n    styleUrls: ['./info-paragraph.component.scss'],\r\n})\r\nexport class InfoParagraphComponent implements OnInit {\r\n    data$: Observable<any>;\r\n    expanded = false;\r\n\r\n    constructor(private overviewService: OverviewService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.data$ = combineLatest([\r\n            this.overviewService.coin$,\r\n            this.overviewService.coinStatistics$,\r\n        ]).pipe(map((obs) => ({ ...obs[0], ...obs[1] })));\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".info-paragraph {\r\n    margin: 2rem 0;\r\n\r\n    &__inner {\r\n        max-height: 320px;\r\n        overflow-y: hidden;\r\n        position: relative;\r\n\r\n        &:not(.expanded)::before {\r\n            content: '';\r\n            position: absolute;\r\n            left: 0;\r\n            bottom: 0;\r\n            width: 100%;\r\n            height: 14rem;\r\n            background: linear-gradient(\r\n                180deg,\r\n                rgba(255, 255, 255, 0),\r\n                var(--bg-color)\r\n            );\r\n        }\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n        font-size: 1.5rem;\r\n        font-family: inherit;\r\n        border: none;\r\n        background-color: transparent;\r\n\r\n        span {\r\n            display: flex;\r\n            align-items: center;\r\n            color: var(--color-primary-blue);\r\n            font-weight: bold;\r\n\r\n            mat-icon {\r\n                font-size: 2rem;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\np {\r\n    font-size: 1.6rem;\r\n    padding: 2rem 0;\r\n}\r\n\r\np,\r\nh3 {\r\n    color: var(--color-light-neutral-6);\r\n}\r\n",
                    "styleUrl": "./info-paragraph.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "overviewService",
                        "type": "OverviewService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"data$ | async as d\">\r\n    <section class=\"info-paragraph\">\r\n        <div\r\n            class=\"info-paragraph__inner\"\r\n            [ngStyle]=\"{ 'max-height': expanded ? 'unset' : '320px' }\"\r\n            [class.expanded]=\"expanded\"\r\n        >\r\n            <h2>{{ (d.coin_id | uppercase) + ' Price Live Data' }}</h2>\r\n            <p>\r\n                The live <strong>Bitcoin price today</strong> is\r\n                {{ d.price | currency: 'USD':'symbol':'1.0-6' }} USD with a\r\n                24-hour trading volume of\r\n                {{ d.volume.value | currency: 'USD':'symbol':'1.0-6' }} USD.\r\n                Bitcoin is down {{ d.price_change_percentage_yesterday }}% in\r\n                the last 24 hours. The current CoinMarketCap ranking is #{{\r\n                    d.market_rank\r\n                }}, with a live market cap of\r\n                {{ d.market_cap.value | currency: 'USD':'symbol':'1.0-6' }} USD.\r\n                It has a circulating supply of\r\n                {{ d.circulating_supply.circulating_supply | number }} BTC coins\r\n                and a max. supply of\r\n                {{ d.circulating_supply.max_supply | number }} BTC coins.\r\n            </p>\r\n            <h3>Crypto Wallets</h3>\r\n            <p>\r\n                The most popular wallets for cryptocurrency include both hot and\r\n                cold wallets. Cryptocurrency wallets vary from hot wallets and\r\n                cold wallets. Hot wallets are able to be connected to the web,\r\n                while cold wallets are used for keeping large amounts of coins\r\n                outside of the internet. Some of the top crypto cold wallets are\r\n                Trezor, Ledger and CoolBitX. Some of the top crypto hot wallets\r\n                include Exodus, Electrum and Mycelium.\r\n            </p>\r\n\r\n            <h3>What Is the Lightning Network?</h3>\r\n            <p>\r\n                The Lightning Network is an off-chain, layered payment protocol\r\n                that operates bidirectional payment channels which allows\r\n                instantaneous transfer with instant reconciliation. It enables\r\n                private, high volume and trustless transactions between any two\r\n                parties. The Lightning Network scales transaction capacity\r\n                without incurring the costs associated with transactions and\r\n                interventions on the underlying blockchain.\r\n            </p>\r\n        </div>\r\n        <button (click)=\"expanded = !expanded\">\r\n            <span *ngIf=\"!expanded; else expandedBtn\"\r\n                >Read more <mat-icon>expand_more</mat-icon></span\r\n            >\r\n        </button>\r\n    </section>\r\n</ng-container>\r\n\r\n<ng-template #expandedBtn>\r\n    <span>Read less <mat-icon>expand_less</mat-icon></span>\r\n</ng-template>\r\n"
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-59a0840b9b66b869d7c570181a78d84a",
            "file": "libs/ui/src/lib/line-chart/line-chart.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-line-chart",
            "styleUrls": [
                "./line-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./line-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 31,
                    "type": "ChartData"
                },
                {
                    "name": "selectedCalendarRange",
                    "line": 39,
                    "type": "CalendarDateRange"
                },
                {
                    "name": "selectedRange",
                    "line": 36,
                    "type": "ChartDateRange"
                },
                {
                    "name": "selectedTab",
                    "line": 33,
                    "type": "ChartDataTab"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedCalendarRangeChange",
                    "defaultValue": "new EventEmitter<CalendarDateRange>(\r\n        null\r\n    )",
                    "line": 40,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectedRangeChange",
                    "defaultValue": "new EventEmitter<ChartDateRange>(null)",
                    "line": 37,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectTabChange",
                    "defaultValue": "new EventEmitter<ChartDataTab>(null)",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chart",
                    "type": "Highcharts.Chart",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "chartOptions",
                    "type": "Highcharts.Options",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "highcharts",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "generateTooltipTemplate",
                    "args": [
                        {
                            "name": "val",
                            "type": "number"
                        },
                        {
                            "name": "headerColor",
                            "type": "string",
                            "defaultValue": "'rgb(207, 214, 228)'"
                        },
                        {
                            "name": "isCoin",
                            "type": "boolean",
                            "defaultValue": "false"
                        },
                        {
                            "name": "headerTitle",
                            "type": "string",
                            "defaultValue": "'Price'"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 66,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headerColor",
                            "type": "string",
                            "defaultValue": "'rgb(207, 214, 228)'",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isCoin",
                            "type": "boolean",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headerTitle",
                            "type": "string",
                            "defaultValue": "'Price'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getChartInstance",
                    "args": [
                        {
                            "name": "chart",
                            "type": "Highcharts.Chart"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "jsdoctags": [
                        {
                            "name": "chart",
                            "type": "Highcharts.Chart",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 234
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94
                },
                {
                    "name": "onCalendarDateChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "CalendarDateRange"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "CalendarDateRange",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDataTabChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "ChartDataTab"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "ChartDataTab",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRangeChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "ChartDateRange"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "ChartDateRange",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { CurrencyPipe, DecimalPipe } from '@angular/common';\r\nimport {\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    ViewEncapsulation,\r\n} from '@angular/core';\r\nimport * as Highcharts from 'highcharts/highstock';\r\nimport IndicatorsCore from 'highcharts/indicators/indicators';\r\nimport HC_exporting from 'highcharts/modules/exporting';\r\nimport {\r\n    CalendarDateRange,\r\n    ChartData,\r\n    ChartDataTab,\r\n    ChartDateRange,\r\n} from '@coin-market/data';\r\nHC_exporting(Highcharts);\r\nIndicatorsCore(Highcharts);\r\n\r\n@Component({\r\n    selector: 'ui-line-chart',\r\n    templateUrl: './line-chart.component.html',\r\n    styleUrls: ['./line-chart.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class LineChartComponent implements OnInit, AfterViewInit {\r\n    @Input() data: ChartData;\r\n\r\n    @Input() selectedTab: ChartDataTab;\r\n    @Output() selectTabChange = new EventEmitter<ChartDataTab>(null);\r\n\r\n    @Input() selectedRange: ChartDateRange;\r\n    @Output() selectedRangeChange = new EventEmitter<ChartDateRange>(null);\r\n\r\n    @Input() selectedCalendarRange: CalendarDateRange;\r\n    @Output() selectedCalendarRangeChange = new EventEmitter<CalendarDateRange>(\r\n        null\r\n    );\r\n\r\n    highcharts: typeof Highcharts;\r\n    chart: Highcharts.Chart;\r\n    chartOptions: Highcharts.Options;\r\n\r\n    constructor(\r\n        private decimalPipe: DecimalPipe,\r\n        private currencyPipe: CurrencyPipe,\r\n        private changeDetectorRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    onDataTabChange(val: ChartDataTab) {\r\n        this.selectTabChange.emit(val);\r\n    }\r\n\r\n    onRangeChange(val: ChartDateRange) {\r\n        this.selectedRangeChange.emit(val);\r\n    }\r\n\r\n    onCalendarDateChange(val: CalendarDateRange) {\r\n        this.selectedCalendarRangeChange.emit(val);\r\n    }\r\n\r\n    generateTooltipTemplate(\r\n        val: number,\r\n        headerColor: string = 'rgb(207, 214, 228)',\r\n        isCoin: boolean = false,\r\n        headerTitle: string = 'Price'\r\n    ) {\r\n        return `\r\n        <div class=\"highcharts-tooltip__line\">\r\n          <div class=\"highcharts-tooltip__line__header\">\r\n            <div class=\"highcharts-tooltip__line__header__color\" style=\"background:${headerColor}\">\r\n            </div>\r\n            ${headerTitle}${isCoin ? `(BTC)` : ''}: \r\n          </div>\r\n          <div class=\"highcharts-tooltip__line__body\">\r\n          ${\r\n              isCoin\r\n                  ? this.currencyPipe.transform(val, 'BTC', '', '1.0-6') +\r\n                    ' BTC'\r\n                  : this.currencyPipe.transform(val, 'USD', 'symbol', '1.0-6')\r\n          }\r\n          </div>\r\n        </div>`;\r\n    }\r\n\r\n    getChartInstance(chart: Highcharts.Chart) {\r\n        this.chart = chart;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.highcharts = Highcharts;\r\n        const _this = this;\r\n\r\n        const commonSeriesOptions = {\r\n            states: {\r\n                hover: { lineWidth: 2 },\r\n            },\r\n            label: { enabled: false },\r\n        };\r\n\r\n        this.chartOptions = {\r\n            rangeSelector: {\r\n                inputEnabled: false,\r\n                enabled: false,\r\n            },\r\n            tooltip: {\r\n                split: false,\r\n                shared: true,\r\n                useHTML: true,\r\n                headerFormat: `<div class=\"highcharts-tooltip__line\">\r\n      <div class=\"highcharts-tooltip__line__body\">{point.key}\r\n      </div>\r\n    </div>`,\r\n                borderColor: 'transparent',\r\n                shadow: {\r\n                    offsetX: 2,\r\n                    offsetY: 2,\r\n                    opacity: 0.05,\r\n                    color: '#000',\r\n                    width: 5,\r\n                },\r\n            },\r\n            yAxis: [\r\n                {\r\n                    id: 'usd',\r\n                    labels: {\r\n                        align: 'left',\r\n                        x: 0,\r\n                        formatter: function () {\r\n                            return (\r\n                                '$' + this.axis.defaultLabelFormatter.call(this)\r\n                            );\r\n                        },\r\n                    },\r\n                    gridLineColor: 'var(--color-light-neutral-2)',\r\n                    opposite: false,\r\n                    height: '80%',\r\n                },\r\n                {\r\n                    id: 'coin',\r\n                    labels: {\r\n                        align: 'right',\r\n                        x: 0,\r\n                        formatter: function () {\r\n                            const formattedValue = _this.decimalPipe.transform(\r\n                                this.value,\r\n                                '1.0-0'\r\n                            );\r\n                            return formattedValue + ' BTC';\r\n                        },\r\n                    },\r\n                    gridLineColor: '#eff2f5',\r\n                    height: '80%',\r\n                },\r\n                {\r\n                    id: 'volume',\r\n                    height: '20%',\r\n                    top: '80%',\r\n                    gridLineColor: '#eff2f5',\r\n                    visible: false,\r\n                },\r\n            ],\r\n            series: [\r\n                {\r\n                    name: 'USD',\r\n                    color: 'rgb(22, 199, 132)',\r\n                    type: 'line',\r\n                    visible: true,\r\n                    data: [...this.data.price.usd],\r\n                    yAxis: 'usd',\r\n                    tooltip: {\r\n                        pointFormatter: function () {\r\n                            return _this.generateTooltipTemplate(\r\n                                this.y,\r\n                                this.color as string\r\n                            );\r\n                        },\r\n                    },\r\n                    ...commonSeriesOptions,\r\n                },\r\n                {\r\n                    name: 'BTC',\r\n                    yAxis: 'coin',\r\n                    color: 'rgb(255, 187, 31)',\r\n                    type: 'line',\r\n                    data: [...this.data.price.coin],\r\n                    visible: false,\r\n                    tooltip: {\r\n                        pointFormatter: function () {\r\n                            return _this.generateTooltipTemplate(\r\n                                this.y,\r\n                                this.color as string,\r\n                                true\r\n                            );\r\n                        },\r\n                    },\r\n                    ...commonSeriesOptions,\r\n                },\r\n                {\r\n                    name: 'Vol 24h',\r\n                    type: 'column',\r\n                    data: [...this.data.volume],\r\n                    color: 'var(--chart-column-color)',\r\n                    yAxis: 'volume',\r\n                    groupPadding: 0,\r\n                    pointPadding: 0,\r\n                    tooltip: {\r\n                        pointFormatter: function () {\r\n                            const value = this.y;\r\n                            return _this.generateTooltipTemplate(\r\n                                value,\r\n                                this.color as string,\r\n                                false,\r\n                                'Vol 24h'\r\n                            );\r\n                        },\r\n                    },\r\n                    ...commonSeriesOptions,\r\n                },\r\n            ],\r\n            exporting: {\r\n                enabled: false,\r\n            },\r\n            plotOptions: {\r\n                column: { states: { hover: { enabled: false } } },\r\n            },\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".line-chart {\r\n    width: 100%;\r\n    height: 560px;\r\n    display: block;\r\n}\r\n.coin-chart {\r\n    &__header {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        h3 {\r\n            flex-grow: 1;\r\n            margin-bottom: 1rem;\r\n        }\r\n    }\r\n\r\n    &__options {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n    }\r\n\r\n    //override highcharts' default styles\r\n    .highcharts-credits {\r\n        display: none;\r\n    }\r\n\r\n    .highcharts-background {\r\n        fill: var(--theme-background);\r\n    }\r\n\r\n    .highcharts-navigator-outline {\r\n        stroke-width: 0;\r\n    }\r\n\r\n    .highcharts-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n    .highcharts-crosshair {\r\n        stroke: rgb(166, 176, 195);\r\n        stroke-dasharray: 4;\r\n    }\r\n\r\n    .highcharts-series-0 {\r\n        & path:last-child {\r\n            stroke-width: 1px;\r\n        }\r\n    }\r\n\r\n    .highcharts-navigator-mask-inside {\r\n        fill: rgb(56, 97, 251);\r\n        fill-opacity: 0.25;\r\n        //dm rgb(97, 136, 255)\r\n    }\r\n\r\n    .highcharts-tooltip {\r\n        &__line {\r\n            display: flex;\r\n\r\n            &__header {\r\n                display: flex;\r\n                align-items: center;\r\n\r\n                &__color {\r\n                    width: 7px;\r\n                    height: 7px;\r\n                    border-radius: 50%;\r\n                    margin-right: 5px;\r\n                }\r\n            }\r\n\r\n            &__body {\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./line-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "decimalPipe",
                        "type": "DecimalPipe"
                    },
                    {
                        "name": "currencyPipe",
                        "type": "CurrencyPipe"
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "decimalPipe",
                        "type": "DecimalPipe",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "currencyPipe",
                        "type": "CurrencyPipe",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"coin-chart\">\r\n    <div class=\"coin-chart__header\">\r\n        <h3>{{ data.coinName }} Chart</h3>\r\n        <ui-chart-fullscreen-button\r\n            [chart]=\"chart\"\r\n        ></ui-chart-fullscreen-button>\r\n        <ui-chart-exports-button\r\n            [chart]=\"chart\"\r\n            [chartData]=\"data\"\r\n            [selectedTab]=\"selectedTab\"\r\n        ></ui-chart-exports-button>\r\n    </div>\r\n\r\n    <div class=\"coin-chart__options\">\r\n        <ui-chart-data-tabs\r\n            [chart]=\"chart\"\r\n            [data]=\"data\"\r\n            [selected]=\"selectedTab\"\r\n            (selectedChange)=\"onDataTabChange($event)\"\r\n        ></ui-chart-data-tabs>\r\n        <ui-chart-range-selector\r\n            [chart]=\"chart\"\r\n            [selected]=\"selectedRange\"\r\n            (selectedChange)=\"onRangeChange($event)\"\r\n            [dateRange]=\"selectedCalendarRange\"\r\n            (dateRangeChange)=\"onCalendarDateChange($event)\"\r\n        ></ui-chart-range-selector>\r\n    </div>\r\n    <highcharts-chart\r\n        class=\"line-chart\"\r\n        [Highcharts]=\"highcharts\"\r\n        [options]=\"chartOptions\"\r\n        constructorType=\"stockChart\"\r\n        (chartInstance)=\"getChartInstance($event)\"\r\n    ></highcharts-chart>\r\n    <ui-coin-chart-legend [chart]=\"chart\"></ui-coin-chart-legend>\r\n</div>\r\n"
        },
        {
            "name": "LinkSectionComponent",
            "id": "component-LinkSectionComponent-8079de8c74869ea27b35c3ffb35c131a",
            "file": "apps/coin-market/src/app/components/details-section/link-section/link-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-link-section",
            "styleUrls": [
                "./link-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./link-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'coin-market-link-section',\r\n  templateUrl: './link-section.component.html',\r\n  styleUrls: ['./link-section.component.scss']\r\n})\r\nexport class LinkSectionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".link-section {\r\n    padding-right: 24px;\r\n    padding-top: 8px;\r\n\r\n    .container-first,\r\n    .container-second {\r\n        border-bottom: none;\r\n        margin-top: 0rem;\r\n        padding-bottom: 0.8rem;\r\n        display: block;\r\n    }\r\n\r\n    .container-first {\r\n        ul {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            list-style-type: none;\r\n            margin: 0rem;\r\n            padding: 0rem;\r\n\r\n            .link-tippy {\r\n                position: relative;\r\n                &:hover {\r\n                    .tippy-box {\r\n                        visibility: visible;\r\n                        opacity: 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            li {\r\n                .button-link {\r\n                    text-decoration: none;\r\n                    background-color: var(--control-dropdown-background-color);\r\n                    color: var(--color-primary-black);\r\n                    border: none;\r\n                    outline: none;\r\n                    border-radius: 8px;\r\n                    padding: 0.4rem 0.8rem;\r\n                    margin: 0 0.4rem 0.4rem 0;\r\n                    font-size: 1.1rem;\r\n                    font-weight: 600;\r\n                    line-height: 1.8rem;\r\n                    display: flex;\r\n                    align-items: center;\r\n                }\r\n\r\n                .button-name {\r\n                    margin: 0 0.6rem;\r\n                }\r\n\r\n                &:hover {\r\n                    .button-link {\r\n                        background-color: var(--color-light-neutral-5);\r\n                        cursor: pointer;\r\n                        color: var(--color-primary-white);\r\n                        .external-link-icon {\r\n                            color: var(--color-primary-white);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .container-second {\r\n        .heading {\r\n            color: var(--color-light-neutral-6);\r\n            font-size: 1.1rem;\r\n            line-height: 1.8rem;\r\n            margin-bottom: 0.4rem;\r\n            font-weight: 500;\r\n        }\r\n\r\n        .link-content {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            list-style-type: none;\r\n            margin: 0rem;\r\n            padding: 0rem;\r\n\r\n            li a {\r\n                text-decoration: none;\r\n            }\r\n\r\n            .tag-badge {\r\n                border-left: none;\r\n                margin-left: 0rem;\r\n                margin-right: 0.4rem;\r\n                background-color: var(--color-light-neutral-2);\r\n                color: var(--color-light-neutral-6);\r\n                border-radius: 4rem;\r\n                padding: 0.2rem 0.8rem;\r\n                font-size: 1.1rem;\r\n                font-weight: 600;\r\n                line-height: 1.8rem;\r\n                margin-bottom: 0.4rem;\r\n            }\r\n\r\n            .view-all {\r\n                display: initial;\r\n                color: #6188ff;\r\n                cursor: pointer;\r\n                font-size: 1.1rem;\r\n                font-weight: 500;\r\n                line-height: 1.8rem;\r\n                background-color: var(--theme-light-blue-color);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.external-link-icon {\r\n    color: var(--color-light-neutral-5);\r\n    height: 1.6rem;\r\n}\r\n\r\n.tippy-box {\r\n    position: absolute;\r\n    background-color: var(--control-background-color);\r\n    color: var(--text-color);\r\n    border-radius: 8px;\r\n    box-shadow: var(--shadow-normal);\r\n    font-size: 1.2rem;\r\n    line-height: 1.4;\r\n    outline: 0;\r\n    transition-property: transform, visibility, opacity;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    box-sizing: border-box;\r\n    transition: 250ms all;\r\n\r\n    .tippy-content {\r\n        padding: 0.8rem 0.9rem;\r\n        z-index: 1;\r\n\r\n        ul {\r\n            position: absolute;\r\n            display: flex;\r\n            flex-direction: column;\r\n            li {\r\n                :hover {\r\n                    background-color: var(--color-light-neutral-1);\r\n                    color: var(--color-primary-black);\r\n                }\r\n\r\n                a {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    border-radius: 8px;\r\n                    margin-bottom: 0.4rem;\r\n                    font-size: 1.2rem;\r\n                    font-weight: 600;\r\n                    line-height: 1.8rem;\r\n                    padding: 0.7rem;\r\n                    align-items: center;\r\n\r\n                    .external-link-icon {\r\n                        padding-left: 0.5rem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.tippy-community {\r\n    height: 8rem;\r\n    width: 14rem;\r\n    left: -1rem;\r\n}\r\n\r\n.tippy-explorers {\r\n    height: 19rem;\r\n    width: 23rem;\r\n    left: -6rem;\r\n}\r\n",
                    "styleUrl": "./link-section.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"link-section\">\r\n  <div class=\"container-first\">\r\n    <ul>\r\n      <li>\r\n        <a class=\"button-link\" rel=\"nofollow noopener\" href=\"https://bitcoin.org/\" target=\"_blank\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              d=\"M11.877 15.9787C11.8146 16.8242 11.4524 17.6196 10.8555 18.2217L9.94675 19.1305C9.27191 19.7958 8.36141 20.1672 7.41381 20.1638C6.46621 20.1604 5.5584 19.7825 4.88834 19.1124C4.21828 18.4423 3.84034 17.5345 3.83695 16.5868C3.83355 15.6392 4.20497 14.7287 4.87021 14.0538L5.779 13.145C6.38116 12.5483 7.1765 12.186 8.02192 12.1235L9.67229 10.4731C8.76285 10.2319 7.80611 10.2331 6.89728 10.4766C5.98845 10.72 5.15923 11.1973 4.49215 11.8608L3.58335 12.7697C2.56946 13.7837 1.99991 15.159 2 16.5929C2.00009 18.0269 2.5698 19.4021 3.5838 20.416C4.59781 21.43 5.97305 21.9995 7.40698 21.9994C8.84092 21.9994 10.2161 21.4296 11.23 20.4156L12.1388 19.5068C12.802 18.8395 13.279 18.0102 13.5225 17.1014C13.7659 16.1926 13.7673 15.236 13.5265 14.3265L11.877 15.9787Z\">\r\n            </path>\r\n            <path\r\n              d=\"M15.9793 11.8768C16.8248 11.8144 17.6202 11.4522 18.2222 10.8553L19.131 9.9465C19.7963 9.27163 20.1677 8.3611 20.1643 7.41348C20.1609 6.46585 19.783 5.55801 19.1129 4.88793C18.4429 4.21786 17.535 3.83991 16.5874 3.83651C15.6398 3.83312 14.7293 4.20455 14.0545 4.8698L13.1457 5.77863C12.549 6.3808 12.1868 7.17616 12.1242 8.02161L10.4738 9.67203C10.2327 8.76256 10.2339 7.80579 10.4773 6.89693C10.7208 5.98807 11.198 5.15883 11.8616 4.49173L12.7704 3.58291C13.7844 2.56899 15.1596 1.99943 16.5935 1.99951C18.0275 1.9996 19.4027 2.56932 20.4165 3.58336C21.4304 4.5974 22 5.97267 21.9999 7.40665C21.9998 8.84063 21.4301 10.2158 20.4161 11.2298L19.5073 12.1386C18.84 12.8018 18.0108 13.2789 17.102 13.5223C16.1932 13.7658 15.2366 13.7672 14.3271 13.5264L15.9793 11.8768Z\">\r\n            </path>\r\n            <path\r\n              d=\"M8.36434 16.5441C8.18462 16.5441 8.00895 16.4907 7.85954 16.3909C7.71012 16.291 7.59367 16.1491 7.5249 15.983C7.45613 15.817 7.43814 15.6343 7.47319 15.458C7.50824 15.2817 7.59476 15.1198 7.72182 14.9927L14.9922 7.72213C15.1636 7.55658 15.3932 7.46498 15.6315 7.46705C15.8697 7.46912 16.0977 7.5647 16.2662 7.7332C16.4347 7.9017 16.5302 8.12965 16.5323 8.36794C16.5344 8.60623 16.4428 8.8358 16.2772 9.00721L9.00686 16.2778C8.83646 16.4483 8.60535 16.544 8.36434 16.5441Z\">\r\n            </path>\r\n          </svg>\r\n          <div class=\"button-name\">bitcoin.org</div>\r\n          <div class=\"external-link-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\">\r\n              </path>\r\n            </svg>\r\n          </div>\r\n        </a>\r\n      </li>\r\n      <li class=\"link-tippy\">\r\n        <button class=\"button-link\" aria-expanded=\"false\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              d=\"M16.4153 16.4153L20 20M18.5455 11.2727C18.5455 15.2893 15.2894 18.5454 11.2728 18.5454C7.25612 18.5454 4 15.2893 4 11.2727C4 7.2561 7.25612 4 11.2728 4C15.2894 4 18.5455 7.2561 18.5455 11.2727Z\"\r\n              stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\">\r\n            </path>\r\n          </svg>\r\n          <div class=\"button-name\">Explorers</div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M6 9L12 15L18 9\" stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            </path>\r\n          </svg>\r\n        </button>\r\n        <div style=\"z-index: 9999; position: absolute;\">\r\n          <div class=\"tippy-box tippy-explorers\" style=\"max-width: 350px; transition-duration: 300ms;\">\r\n            <div class=\"tippy-content\" style=\"transition-duration: 300ms;\">\r\n              <div>\r\n                <ul>\r\n                  <li>\r\n                    <a class=\"dropdownItem\" rel=\"nofollow nooper\"\r\n                      href=\"https://blockchain.coinmarketcap.com/chain/bitcoin\" target=\"_blank\">\r\n                      blockchain.coinmarketcap.com\r\n                      <div class=\"external-link-icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\"\r\n                          viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                            stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\">\r\n                          </path>\r\n                        </svg>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdownItem\" rel=\"nofollow nooper\" href=\"https://blockchain.info/\" target=\"_blank\">\r\n                      blockchain.info\r\n                      <div class=\"external-link-icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\"\r\n                          viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                            stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\">\r\n                          </path>\r\n                        </svg>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdownItem\" rel=\"nofollow nooper\" href=\"https://live.blockcypher.com/btc/\"\r\n                      target=\"_blank\">\r\n                      live.blockcypher.com\r\n                      <div class=\"external-link-icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\"\r\n                          viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                            stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\">\r\n                          </path>\r\n                        </svg>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdownItem\" rel=\"nofollow nooper\" href=\"https://blockchair.com/bitcoin\" target=\"_blank\">\r\n                      blockchair.com\r\n                      <div class=\"external-link-icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\"\r\n                          viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                            stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\">\r\n                          </path>\r\n                        </svg>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdownItem\" rel=\"nofollow nooper\" href=\"https://explorer.viabtc.com/btc\"\r\n                      target=\"_blank\">\r\n                      explorer.viabtc.com\r\n                      <div class=\"external-link-icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\"\r\n                          viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                            stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\">\r\n                          </path>\r\n                        </svg>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"link-tippy\">\r\n        <button class=\"button-link\" aria-expanded=\"false\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              d=\"M12 12C9.7912 12 8 10.1681 8 7.90909V7.09091C8 4.83191 9.7912 3 12 3C14.2088 3 16 4.83191 16 7.09091V7.90909C16 10.1681 14.2088 12 12 12Z\"\r\n              stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\">\r\n            </path>\r\n            <path\r\n              d=\"M20 19.2884C20 17.8156 19.0424 16.5205 17.6528 16.1335C16.1376 15.7105 14.0688 15.2727 12 15.2727C9.9312 15.2727 7.8624 15.7105 6.3472 16.1335C4.9576 16.5205 4 17.8156 4 19.2884V21H20V19.2884Z\"\r\n              stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\">\r\n            </path>\r\n          </svg>\r\n          <div class=\"button-name\">Community</div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M6 9L12 15L18 9\" stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            </path>\r\n          </svg>\r\n        </button>\r\n        <div style=\"z-index: 9999; position: absolute;\">\r\n          <div class=\"tippy-box tippy-community\">\r\n            <div class=\"tippy-content\" style=\"transition-duration: 300ms;\">\r\n              <div>\r\n                <ul>\r\n                  <li>\r\n                    <a class=\"dropdownItem\" rel=\"nofollow nooper\" href=\"https://bitcointalk.org\" target=\"_blank\">\r\n                      bitcointalk.org\r\n                      <div class=\"external-link-icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\"\r\n                          viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                            stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\">\r\n                          </path>\r\n                        </svg>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdownItem\" rel=\"nofollow nooper\" href=\"https://reddit.com/r/bitcoin\" target=\"_blank\">\r\n                      reddit.com\r\n                      <div class=\"external-link-icon\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\"\r\n                          viewBox=\"0 0 24 24\">\r\n                          <path\r\n                            d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                            stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\">\r\n                          </path>\r\n                        </svg>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li></li>\r\n      <li>\r\n        <a class=\"button-link\" rel=\"nofollow noopener\" href=\"https://bitcoin.org/\" target=\"_blank\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M7 8L3 12L7 16M17 8L21 12L17 16\" stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\"\r\n              stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            </path>\r\n            <path d=\"M10 19L14 5\" stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\">\r\n            </path>\r\n          </svg>\r\n          <div class=\"button-name\">Source code</div>\r\n          <div class=\"external-link-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\">\r\n              </path>\r\n            </svg>\r\n          </div>\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a class=\"button-link\" rel=\"nofollow noopener\" href=\"https://bitcoin.org/\" target=\"_blank\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              d=\"M13.75 3H6.75C6.28587 3 5.84075 3.18964 5.51256 3.52721C5.18437 3.86477 5 4.32261 5 4.8V19.2C5 19.6774 5.18437 20.1352 5.51256 20.4728C5.84075 20.8104 6.28587 21 6.75 21H17.25C17.7141 21 18.1592 20.8104 18.4874 20.4728C18.8156 20.1352 19 19.6774 19 19.2V8.4M13.75 3L19 8.4M13.75 3V8.4H19M15.5 12.9H8.5M15.5 16.5H8.5M10.25 9.3H8.5\"\r\n              stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\">\r\n            </path>\r\n          </svg>\r\n          <div class=\"button-name\">Whitepaper</div>\r\n          <div class=\"external-link-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                d=\"M 12 11.9998 L 20 4 M 20 4 H 14.1817 M 20 4 L 19.9999 9.81802 M 9.81819 6.90946 H 5.77777 C 4.79594 6.90946 4 7.70537 4 8.68718 V 18.2223 C 4 19.2041 4.79594 20 5.77778 20 H 15.3131 C 16.295 20 17.0909 19.2041 17.0909 18.2223 V 14.182\"\r\n                stroke=\"currentcolor\" stroke-width:=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\">\r\n              </path>\r\n            </svg>\r\n          </div>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"container-second\">\r\n    <div class=\"heading\">Tags:</div>\r\n    <ul class=\"link-content\">\r\n      <li>\r\n        <a href=\"/view/mineable/\">\r\n          <div class=\"tag-badge\">Mineable</div>\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/view/pow/\">\r\n          <div class=\"tag-badge\">PoW</div>\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/view/sha-256/\">\r\n          <div class=\"tag-badge\">SHA-256</div>\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/view/store-of-value/\">\r\n          <div class=\"tag-badge\">Store of Value</div>\r\n        </a>\r\n      </li>\r\n      <li class=\"tag-badge view-all\">View all</li>\r\n    </ul>\r\n  </div>\r\n</div>"
        },
        {
            "name": "LoadingBarComponent",
            "id": "component-LoadingBarComponent-f82bec4c53924a893abac874b8452170",
            "file": "apps/coin-market/src/app/components/loading-bar/loading-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-loading-bar",
            "styleUrls": [
                "./loading-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loading-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "elementClass",
                    "defaultValue": "'loading-progress-bar__bar'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component } from '@angular/core';\r\nimport {\r\n    RouteConfigLoadEnd,\r\n    RouteConfigLoadStart,\r\n    Router,\r\n} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'coin-market-loading-bar',\r\n    templateUrl: './loading-bar.component.html',\r\n    styleUrls: ['./loading-bar.component.scss'],\r\n})\r\nexport class LoadingBarComponent implements AfterViewInit {\r\n    element: Element;\r\n    elementClass = 'loading-progress-bar__bar';\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    ngAfterViewInit(): void {\r\n        this.element = document.querySelector('.' + this.elementClass);\r\n\r\n        this.router.events.subscribe((event) => {\r\n            if (event instanceof RouteConfigLoadStart) {\r\n                this.element.classList.add('start');\r\n            } else if (event instanceof RouteConfigLoadEnd) {\r\n                this.element.classList.add('end');\r\n                setTimeout(\r\n                    () => (this.element.className = this.elementClass),\r\n                    500\r\n                );\r\n            }\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loading-progress-bar {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 5px;\r\n    background-color: transparent;\r\n\r\n    &__bar {\r\n        height: 100%;\r\n        width: 0;\r\n        background-color: var(--color-primary-blue);\r\n\r\n        &.start {\r\n            animation: barStart 2s linear 0s 1 normal forwards;\r\n        }\r\n\r\n        &.end {\r\n            animation: barEnd 0.4s linear 0s 1 normal forwards;\r\n        }\r\n    }\r\n}\r\n\r\n@keyframes barStart {\r\n    100% {\r\n        width: 40%;\r\n    }\r\n}\r\n\r\n@keyframes barEnd {\r\n    0% {\r\n        width: 40%;\r\n    }\r\n    100% {\r\n        width: 100%;\r\n        opacity: 0;\r\n    }\r\n}\r\n",
                    "styleUrl": "./loading-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"loading-progress-bar\">\r\n    <div class=\"loading-progress-bar__bar\"></div>\r\n</div>\r\n"
        },
        {
            "name": "MarketsComponent",
            "id": "component-MarketsComponent-56834dedf5f6b265830c6114e3e12b32",
            "file": "apps/coin-market/src/app/components/markets/markets.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-markets",
            "styleUrls": [
                "./markets.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./markets.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataLength$",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "dataSource",
                    "type": "MarketsDataSource",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "'All'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "table",
                    "type": "TableComponent",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TableComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadMarketsPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "onSelectChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MarketList } from '../../models/market';\r\nimport { MarketsService } from '../../shared/services/markets.service';\r\nimport { TableComponent } from '../../shared/table/table.component';\r\nimport { MarketsDataSource } from '../../../assets/data/market-datasource';\r\n\r\n@Component({\r\n    selector: 'coin-market-markets',\r\n    templateUrl: './markets.component.html',\r\n    styleUrls: ['./markets.component.scss'],\r\n})\r\nexport class MarketsComponent implements OnInit, AfterViewInit {\r\n    @ViewChild(TableComponent) table: TableComponent;\r\n    selectedValue = 'All';\r\n    dataLength$: Observable<number>;\r\n    dataSource: MarketsDataSource;\r\n\r\n    constructor(private marketsService: MarketsService) {\r\n        this.dataLength$ = marketsService.dataLength$;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataSource = new MarketsDataSource(this.marketsService);\r\n        this.dataSource.loadMarkets();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.table.paginator.page\r\n            .pipe(\r\n                tap(() => {\r\n                    this.marketsService.pageNumber.next(\r\n                        this.table.paginator.pageIndex\r\n                    );\r\n                    this.marketsService.pageSize.next(\r\n                        this.table.paginator.pageSize\r\n                    );\r\n\r\n                    this.loadMarketsPage();\r\n                })\r\n            )\r\n            .subscribe();\r\n\r\n        this.table.paginator._intl.itemsPerPageLabel = 'Show Rows';\r\n\r\n        this.table.select.selectionChange\r\n            .pipe(\r\n                tap(() => {\r\n                    this.marketsService.selection.next(this.selectedValue);\r\n                    this.table.paginator.firstPage();\r\n                    this.loadMarketsPage();\r\n                })\r\n            )\r\n            .subscribe();\r\n\r\n        this.table.sort.sortChange\r\n            .pipe(\r\n                tap(() => {\r\n                    this.marketsService.sortOrder.next(\r\n                        this.table.sort.direction\r\n                    );\r\n                    this.marketsService.sortEvent.next(this.table.sort.active);\r\n                    this.loadMarketsPage();\r\n                })\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    loadMarketsPage() {\r\n        this.dataSource.loadMarkets();\r\n    }\r\n\r\n    onSelectChange(val: string) {\r\n        this.selectedValue = val;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./markets.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "marketsService",
                        "type": "MarketsService"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "marketsService",
                        "type": "MarketsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<coin-market-table\r\n    [dataSource]=\"dataSource\"\r\n    (selectedEvent)=\"onSelectChange($event)\"\r\n    [dataLength]=\"dataLength$ | async\"\r\n></coin-market-table>\r\n"
        },
        {
            "name": "NameSectionComponent",
            "id": "component-NameSectionComponent-8ae31abb35452401515ebf1d2ce012d8",
            "file": "apps/coin-market/src/app/components/details-section/name-section/name-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CoinDetailsService"
                }
            ],
            "selector": "coin-market-name-section",
            "styleUrls": [
                "./name-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./name-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coin$",
                    "type": "Observable<Coin>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Coin } from '../../../models/coin';\r\nimport { CoinDetailsService } from '../../../shared/services/coin-details.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-name-section',\r\n    templateUrl: './name-section.component.html',\r\n    styleUrls: ['./name-section.component.scss'],\r\n    providers: [CoinDetailsService],\r\n})\r\nexport class NameSectionComponent implements OnInit {\r\n    coin$: Observable<Coin>;\r\n\r\n    constructor(private coinDetailsService: CoinDetailsService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.coin$ = this.coinDetailsService.coinItems$;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nameSection {\r\n    padding-top: 0.8rem;\r\n    padding-right: 2.4rem;\r\n    padding-bottom: 0.8rem;\r\n    margin-top: 0.5rem;\r\n\r\n    .nameHeader {\r\n        display: flex;\r\n        margin: 0rem 0rem 1.6rem;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        word-break: break-word;\r\n\r\n        img {\r\n            margin-right: 1.2rem;\r\n        }\r\n\r\n        h2 {\r\n            font-size: 3.2rem;\r\n            line-height: 4.2rem;\r\n            margin-right: 0.8rem;\r\n            margin-bottom: 0rem;\r\n            display: flex;\r\n            align-items: center;\r\n            font-weight: 700;\r\n            color: var(--color-primary-black);\r\n\r\n            small {\r\n                word-break: initial;\r\n                background-color: var(--color-light-neutral-2);\r\n                color: var(--color-light-neutral-6);\r\n                border-radius: 4px;\r\n                padding: 0.2rem 0.6rem;\r\n                font-size: 1.2rem;\r\n                font-weight: 600;\r\n                line-height: 1.8rem;\r\n                margin-left: 1.2rem;\r\n                margin-right: 0.6rem;\r\n            }\r\n        }\r\n\r\n        .header-span .header-button {\r\n            width: auto;\r\n            padding: 0rem 0.8rem;\r\n            border-radius: 8px;\r\n            -webkit-box-align: center;\r\n            align-items: center;\r\n            background: transparent;\r\n            border: 1px solid var(--color-light-neutral-2);\r\n            display: inline-flex;\r\n            color: var(--color-primary-black);\r\n            cursor: pointer;\r\n            -webkit-box-pack: center;\r\n            justify-content: center;\r\n            outline: 0px;\r\n            font-weight: 600;\r\n            width: auto;\r\n            height: 3.2rem;\r\n            font-size: 1.2rem;\r\n            padding: 0rem 1.6rem;\r\n            line-height: 1.8rem;\r\n\r\n            .material-icons {\r\n                font-size: 1.8rem;\r\n                line-height: 100%;\r\n                color: var(--color-light-neutral-4);\r\n\r\n                &:hover {\r\n                    color: #f6b882;\r\n                }\r\n            }\r\n        }\r\n\r\n        .header-span {\r\n            position: relative;\r\n            .tippy-header {\r\n                position: absolute;\r\n                visibility: hidden;\r\n                opacity: 0;\r\n                background-color: black;\r\n                color: #fff;\r\n                font-size: 1.2rem;\r\n                padding: 0.5rem;\r\n                border-radius: 10px;\r\n                width: 13.6rem;\r\n                top: -32px;\r\n                left: -50px;\r\n            }\r\n            &:hover {\r\n                .tippy-header {\r\n                    visibility: visible;\r\n                    opacity: 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .namePill-box {\r\n        display: flex;\r\n\r\n        .namePill__3p {\r\n            margin-right: 0.8rem;\r\n            background-color: var(--color-light-neutral-2);\r\n            color: var(--color-light-neutral-6);\r\n            border-radius: 4px;\r\n            padding: 0.2rem 0.6rem;\r\n            font-size: 1.1rem;\r\n            font-weight: 500;\r\n            line-height: 1.8rem;\r\n            white-space: nowrap;\r\n        }\r\n\r\n        .namePill-rank {\r\n            background-color: var(--color-light-neutral-5);\r\n            color: #fff;\r\n        }\r\n    }\r\n}\r\n\r\n@media (min-width: 1300px) {\r\n    .nameSection {\r\n        flex: 0 0 36%;\r\n    }\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    .nameSection {\r\n        flex: 0 0 50%;\r\n    }\r\n}\r\n\r\n@media screen and (min-width: 768px) {\r\n    .nameSection {\r\n        padding-top: 0.8rem;\r\n        padding-right: 2.4rem;\r\n        padding-bottom: 0.8rem;\r\n    }\r\n}\r\n\r\n.login-page {\r\n    max-height: 100vh;\r\n    transition: height 0.3s ease-in-out;\r\n    max-width: 100vw;\r\n    position: absolute;\r\n    padding: 2.4rem 3.2rem;\r\n    background: var(--control-background-color);\r\n    border-radius: 16px;\r\n    visibility: hidden;\r\n    top: 20vh;\r\n    left: 35vw;\r\n    box-shadow: 1200px 1200px 1200px rgba(128, 138, 157, 0.12),\r\n        0px 8px 32px rgba(128, 138, 157, 0.24);\r\n\r\n    .titleWrapper {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        svg {\r\n            color: #a6b0c3;\r\n            font-size: 1.2rem;\r\n            cursor: pointer;\r\n            margin: 0rem;\r\n        }\r\n    }\r\n\r\n    .popup-content {\r\n        padding: 0.8rem 0rem;\r\n\r\n        .login {\r\n            font-size: 2.4rem;\r\n            line-height: 3.4rem;\r\n            font-weight: 700;\r\n            color: var(--color-primary-black);\r\n        }\r\n        .qua {\r\n            font-size: 1.4rem;\r\n            margin-top: 0.4rem;\r\n            margin-bottom: 2.4rem;\r\n            color: var(--color-neutral-6);\r\n\r\n            .create-account {\r\n                cursor: pointer;\r\n                color: var(--color-primary-blue);\r\n            }\r\n        }\r\n\r\n        .email-adress {\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin-bottom: 14px;\r\n            .label {\r\n                display: flex;\r\n                -webkit-box-pack: justify;\r\n                justify-content: space-between;\r\n                font-size: 1.2rem;\r\n                font-weight: 600;\r\n                margin-bottom: 0.4rem;\r\n            }\r\n\r\n            .input-email {\r\n                background-color: rgb(255, 255, 255);\r\n                border: 1px solid rgb(207, 214, 228);\r\n                border-radius: 8px;\r\n                box-sizing: border-box;\r\n                color: rgb(0, 0, 0);\r\n                max-width: 100%;\r\n                outline: 0px;\r\n                padding: 0px 1.6rem;\r\n                width: 100%;\r\n                font-size: 1.4rem;\r\n                height: 4.8rem;\r\n                line-height: 2.1rem;\r\n            }\r\n        }\r\n\r\n        .password-box {\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin-bottom: 0rem;\r\n\r\n            .label {\r\n                display: flex;\r\n                -webkit-box-pack: justify;\r\n                justify-content: space-between;\r\n                font-size: 1.2rem;\r\n                font-weight: 600;\r\n                margin-bottom: 0.4rem;\r\n                .label-pwd {\r\n                    color: var(--color-neutral-5);\r\n                    cursor: pointer;\r\n                }\r\n            }\r\n            .input-password {\r\n                position: relative;\r\n                .input-pwd {\r\n                    background-color: rgb(255, 255, 255);\r\n                    border: 1px solid rgb(207, 214, 228);\r\n                    border-radius: 8px;\r\n                    box-sizing: border-box;\r\n                    color: rgb(0, 0, 0);\r\n                    max-width: 100%;\r\n                    outline: 0px;\r\n                    padding: 0px 1.6rem;\r\n                    width: 100%;\r\n                    font-size: 1.4rem;\r\n                    height: 4.8rem;\r\n                    line-height: 2.1rem;\r\n                }\r\n\r\n                span {\r\n                    position: absolute;\r\n                    cursor: pointer;\r\n                    top: 15px;\r\n                    right: 12px;\r\n                    svg {\r\n                        fill: var(--info-icon-color);\r\n                        width: 1.5rem;\r\n                        height: 1.5rem;\r\n                        margin: 0rem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .login-button {\r\n            margin-top: 2.4rem;\r\n\r\n            .login-btn:disabled {\r\n                background: rgb(239, 242, 245);\r\n                color: rgb(0, 0, 0);\r\n                opacity: 0.5;\r\n                cursor: not-allowed;\r\n            }\r\n\r\n            .login-btn {\r\n                -webkit-box-align: center;\r\n                align-items: center;\r\n                border: 0px;\r\n                border-radius: 8px;\r\n                display: inline-flex;\r\n                color: rgb(255, 255, 255);\r\n                cursor: pointer;\r\n                -webkit-box-pack: center;\r\n                justify-content: center;\r\n                outline: 0px;\r\n                font-weight: 600;\r\n                width: 100%;\r\n                height: 4.8rem;\r\n                font-size: 1.4rem;\r\n                padding: 0rem 2.4rem;\r\n                line-height: 2.4rem;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./name-section.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "coinDetailsService",
                        "type": "CoinDetailsService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "coinDetailsService",
                        "type": "CoinDetailsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nameSection\" *ngIf=\"coin$ | async as coin\">\r\n  <div class=\"nameHeader\">\r\n    <img src=\"assets/img/Bitcoin.png\" height=\"32\" width=\"32\" />\r\n    <h2>\r\n      {{ coin.name }}\r\n      <small>{{ coin.shortName }}</small>\r\n    </h2>\r\n\r\n    <span class=\"header-span\">\r\n      <div class=\"tippy-header\">Add to Main Watchlist</div>\r\n      <button class=\"header-button\" style=\"width: auto; padding: 0px 8px\">\r\n        &nbsp;\r\n        <span class=\"material-icons\">star_border</span>\r\n      </button>\r\n    </span>\r\n    <div class=\"login-page\" style=\"width: 496px; height: 383px;\">\r\n      <div (click)=\"popupDisplay()\" class=\"titleWrapper\"\r\n        style=\"position: absolute; z-index: 100000; top: 38px; right: 38px;\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"24px\" width=\"24px\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M18 6L6 18M18 18L6 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n        </svg>\r\n      </div>\r\n      <div class=\"popup-content\">\r\n        <div class=\"login\">Log In</div>\r\n        <div class=\"qua\">\r\n          New to CoinMarketCap?\r\n          <span class=\"create-account\">Create an account</span>\r\n        </div>\r\n        <div class=\"email-adress\">\r\n          <div class=\"label\">Email Adress</div>\r\n          <input type=\"email\" placeholder=\"Enter your email address...\" class=\"input-email\" />\r\n        </div>\r\n        <div class=\"password-box\">\r\n          <div class=\"label\">\r\n            <span>Password</span>\r\n            <span class=\"label-pwd\">Forgot password?</span>\r\n          </div>\r\n          <div class=\"input-password\">\r\n            <input type=\"password\" placeholder=\"Enter your password...\" value=\"\" class=\"input-pwd\">\r\n            <span><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"24px\" width=\"24px\"\r\n                viewBox=\"0 0 24 24\" class=\"sc-AxjAm ginwex\">\r\n                <path\r\n                  d=\"M22.7934 19.5586L2.2378 3.1234C2.18142 3.07723 2.1167 3.04287 2.04733 3.02229C1.97797 3.0017 1.90532 2.99529 1.83354 3.00342C1.76175 3.01154 1.69223 3.03406 1.62895 3.06966C1.56567 3.10527 1.50987 3.15327 1.46473 3.21094L1.12099 3.65004C1.07574 3.70772 1.04206 3.77397 1.02187 3.84498C1.00168 3.91599 0.995384 3.99037 1.00333 4.06388C1.01128 4.13738 1.03333 4.20856 1.0682 4.27334C1.10308 4.33812 1.1501 4.39523 1.20658 4.44141L21.7622 20.8766C21.8186 20.9228 21.8833 20.9571 21.9527 20.9777C22.022 20.9983 22.0947 21.0047 22.1665 20.9966C22.2382 20.9885 22.3078 20.9659 22.371 20.9303C22.4343 20.8947 22.4901 20.8467 22.5353 20.7891L22.879 20.35C22.9243 20.2923 22.9579 20.226 22.9781 20.155C22.9983 20.084 23.0046 20.0096 22.9967 19.9361C22.9887 19.8626 22.9667 19.7914 22.9318 19.7267C22.8969 19.6619 22.8499 19.6048 22.7934 19.5586ZM11.2022 8.14934L15.8354 11.8541C15.7591 9.74684 14.0789 8.0625 12 8.0625C11.7318 8.06301 11.4644 8.09212 11.2022 8.14934ZM12.7978 15.851L8.16455 12.1462C8.24121 14.2532 9.92141 15.9375 12 15.9375C12.2681 15.9369 12.5355 15.9079 12.7978 15.851ZM12 6.9375C15.391 6.9375 18.4998 8.87109 20.1786 12C19.7671 12.7701 19.2586 13.4816 18.6661 14.1164L19.9634 15.1535C20.6857 14.3633 21.2976 13.4747 21.7818 12.5129C21.8604 12.3538 21.9014 12.1781 21.9014 11.9998C21.9014 11.8216 21.8604 11.6458 21.7818 11.4867C19.916 7.76684 16.2256 5.25 12 5.25C10.7385 5.25 9.53504 5.49609 8.40345 5.91129L9.99875 7.18711C10.6498 7.03594 11.3166 6.9375 12 6.9375ZM12 17.0625C8.60901 17.0625 5.50057 15.1289 3.82141 12C4.23347 11.23 4.74254 10.5185 5.33558 9.88395L4.03831 8.84684C3.31616 9.63697 2.70435 10.5255 2.22027 11.4871C2.14163 11.6462 2.10066 11.8219 2.10066 12.0002C2.10066 12.1784 2.14163 12.3542 2.22027 12.5133C4.08437 16.2332 7.77475 18.75 12 18.75C13.2615 18.75 14.465 18.5021 15.5965 18.0887L14.0013 16.8132C13.3502 16.9641 12.6837 17.0625 12 17.0625Z\">\r\n                </path>\r\n              </svg>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"login-button\"><button disabled class=\"login-btn\">Log In</button></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"namePill-box\">\r\n    <div class=\"namePill__3p namePill-rank\">Rank #{{ coin.rank }}</div>\r\n    <div class=\"namePill__3p\">Coin</div>\r\n    <div class=\"namePill__3p\">\r\n      On {{ coin.watchlists | number: \"0.0-0\" }} watchlists\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-4e7726cd3172a1ec503ecfd066400c68",
            "file": "apps/coin-market/src/app/components/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "expandMenu",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'expandMenu'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "hamburgerToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'coin-market-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.scss'],\r\n})\r\nexport class NavbarComponent {\r\n    @ViewChild('expandMenu') expandMenu: ElementRef;\r\n\r\n    hamburgerToggle() {\r\n        this.expandMenu.nativeElement.classList.toggle('expanded');\r\n\r\n        document.body.classList.toggle('overflow-hidden');\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".navbar {\r\n    background-color: var(--theme-background);\r\n    border-bottom: 1px solid var(--nav-border);\r\n}\r\n\r\n.expand-nav-btn {\r\n    font-size: 2.4rem;\r\n    cursor: pointer;\r\n\r\n    &:first-child {\r\n        flex-grow: 1;\r\n    }\r\n}\r\n\r\n@media (min-width: 567px) {\r\n    .navbar-items {\r\n        display: block !important;\r\n    }\r\n\r\n    .expand-nav-btn {\r\n        display: none !important;\r\n    }\r\n\r\n    .expand-menu {\r\n        display: none;\r\n    }\r\n\r\n    coin-market-switch-theme-btn {\r\n        display: block !important;\r\n    }\r\n}\r\n\r\n.expand-menu {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: var(--theme-background);\r\n    z-index: 999999;\r\n    transform: translateX(100%);\r\n    transition: transform 0.6s;\r\n\r\n    .navbar-items {\r\n        display: block !important;\r\n        font-size: 3rem;\r\n        padding-bottom: 4rem;\r\n        padding-top: 5rem;\r\n    }\r\n\r\n    coin-market-switch-theme-btn {\r\n        display: block !important;\r\n    }\r\n    .expand-nav-btn {\r\n        justify-content: flex-end;\r\n        margin-left: auto;\r\n        float: right;\r\n    }\r\n\r\n    &.expanded {\r\n        transform: translateX(0);\r\n    }\r\n\r\n    .container {\r\n        flex-direction: column;\r\n    }\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    padding: 2.4rem 1.5rem;\r\n\r\n    & > .expand-nav-btn {\r\n        flex-grow: 1;\r\n        justify-content: flex-end !important;\r\n    }\r\n}\r\n.coin-market-cap {\r\n    min-width: 16.8rem;\r\n    height: 2.8rem;\r\n    position: relative;\r\n    color: var(--theme-color);\r\n    display: inline-block;\r\n    background-image: var(--logo-src);\r\n    background-position: center center;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n}\r\n\r\n.navbar-items {\r\n    display: none;\r\n    color: var(--theme-color);\r\n    line-height: 2rem;\r\n    font-size: 1.4rem;\r\n    font-weight: 600;\r\n    margin: 0rem;\r\n    padding-left: 3rem;\r\n\r\n    &:hover {\r\n        color: var(--link-color);\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\ncoin-market-switch-theme-btn {\r\n    flex-grow: 1;\r\n    display: none;\r\n    text-align: right;\r\n}\r\n",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav class=\"navbar\">\r\n    <div class=\"container\">\r\n        <div class=\"coin-market-cap\"></div>\r\n        <a class=\"navbar-items\" routerLink=\"\">Cryptocurrencies</a>\r\n        <a class=\"navbar-items\" routerLink=\"/gainers-losers\"\r\n            >Gainers & Losers</a\r\n        >\r\n        <coin-market-switch-theme-btn></coin-market-switch-theme-btn>\r\n        <mat-icon class=\"expand-nav-btn\" (click)=\"hamburgerToggle()\"\r\n            >menu</mat-icon\r\n        >\r\n    </div>\r\n    <div #expandMenu class=\"expand-menu\" (click)=\"hamburgerToggle()\">\r\n        <div class=\"container\">\r\n            <mat-icon class=\"expand-nav-btn\">close</mat-icon>\r\n            <a class=\"navbar-items\" routerLink=\"\">Cryptocurrencies</a>\r\n            <a class=\"navbar-items\" routerLink=\"/gainers-losers\"\r\n                >Gainers & Losers</a\r\n            >\r\n\r\n            <coin-market-switch-theme-btn\r\n                class=\"navbar-items\"\r\n            ></coin-market-switch-theme-btn>\r\n        </div>\r\n    </div>\r\n</nav>\r\n"
        },
        {
            "name": "OverviewComponent",
            "id": "component-OverviewComponent-04834f1f38ddf6d03f6ae317ac6761d6",
            "file": "apps/coin-market/src/app/components/overview/overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-overview",
            "styleUrls": [
                "./overview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "type": "MatTableDataSource<MarketList>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "table",
                    "type": "TableComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TableComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MarketList } from '../../models/market';\r\nimport { MarketsService } from '../../shared/services/markets.service';\r\nimport { TableComponent } from '../../shared/table/table.component';\r\n\r\n@Component({\r\n    selector: 'coin-market-overview',\r\n    templateUrl: './overview.component.html',\r\n    styleUrls: ['./overview.component.scss'],\r\n})\r\nexport class OverviewComponent implements OnInit, AfterViewInit {\r\n    @ViewChild(TableComponent) table: TableComponent;\r\n\r\n    dataSource: MatTableDataSource<MarketList>;\r\n\r\n    constructor(private marketService: MarketsService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.marketService.marketItems$.subscribe((m) => {\r\n            this.dataSource = new MatTableDataSource<MarketList>();\r\n            this.dataSource.data = m.slice(0, 5);\r\n            this.dataSource.sort = this.table?.sort;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dataSource.sort = this.table?.sort;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".coin-page {\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 100%;\r\n    gap: 1.5rem;\r\n    margin-top: 2.5rem;\r\n    margin-bottom: 2.5rem;\r\n\r\n    @media (min-width: 1100px) {\r\n        grid-template-columns: 70% 30%;\r\n    }\r\n\r\n    &__sidebar {\r\n        display: grid;\r\n        grid-template-columns: 100%;\r\n        row-gap: 1.5rem;\r\n    }\r\n\r\n    &__markets-table {\r\n        grid-column: 1/-1;\r\n    }\r\n}\r\n",
                    "styleUrl": "./overview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "marketService",
                        "type": "MarketsService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "marketService",
                        "type": "MarketsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"coin-page container\">\r\n    <div class=\"coin-page__chart\">\r\n        <coin-market-coin-chart style=\"width: 100%\"></coin-market-coin-chart>\r\n        <coin-market-info-paragraph></coin-market-info-paragraph>\r\n        <coin-market-vote-coin></coin-market-vote-coin>\r\n    </div>\r\n    <div class=\"coin-page__sidebar\">\r\n        <coin-market-coin-converter></coin-market-coin-converter>\r\n        <coin-market-coin-statistics></coin-market-coin-statistics>\r\n        <coin-market-trending></coin-market-trending>\r\n    </div>\r\n    <div class=\"coin-page__markets-table\">\r\n        <coin-market-table\r\n            [dataSource]=\"dataSource\"\r\n            [showPairs]=\"false\"\r\n            [showPaginator]=\"false\"\r\n        ></coin-market-table>\r\n        <a routerLink=\"./markets\" class=\"large-gray-button\">See All Markets</a>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 64,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PredefinedDatesComponent",
            "id": "component-PredefinedDatesComponent-745903bfed8060eedf2a5f7d7e4ccdef",
            "file": "libs/ui/src/lib/calendar/predefined-dates/predefined-dates.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-predefined-dates",
            "styleUrls": [
                "./predefined-dates.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./predefined-dates.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "predefinedDates",
                    "line": 10,
                    "type": "number[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "predefinedDateEvent",
                    "defaultValue": "new EventEmitter<number>(null)",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "val",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ui-predefined-dates',\r\n    templateUrl: './predefined-dates.component.html',\r\n    styleUrls: ['./predefined-dates.component.scss'],\r\n})\r\nexport class PredefinedDatesComponent {\r\n    @Output() predefinedDateEvent = new EventEmitter<number>(null);\r\n    @Input() predefinedDates: number[];\r\n\r\n    onClick(val: number) {\r\n        this.predefinedDateEvent.emit(val);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    p {\r\n        color: var(--color-light-neutral-6);\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    .predefined-dates-list {\r\n        &__item {\r\n            padding: 0.6rem 1rem;\r\n            cursor: pointer;\r\n            white-space: nowrap;\r\n\r\n            &:hover {\r\n                background-color: var(--color-light-neutral-2);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./predefined-dates.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>Predefined dates</p>\r\n<ul class=\"predefined-dates-list\">\r\n    <li\r\n        class=\"predefined-dates-list__item\"\r\n        *ngFor=\"let d of predefinedDates\"\r\n        (click)=\"onClick(d)\"\r\n    >\r\n        Last {{ d }} days\r\n    </li>\r\n</ul>\r\n"
        },
        {
            "name": "PriceSectionComponent",
            "id": "component-PriceSectionComponent-e1a2443657b951765de114a5650a5ade",
            "file": "apps/coin-market/src/app/components/details-section/price-section/price-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-price-section",
            "styleUrls": [
                "./price-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./price-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coinPrice$",
                    "type": "Observable<CoinPrices>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isDisplay",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "isDisplayTime",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CoinPrices } from '../../../models/coin-prices';\r\nimport { CoinDetailsService } from '../../../shared/services/coin-details.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-price-section',\r\n    templateUrl: './price-section.component.html',\r\n    styleUrls: ['./price-section.component.scss'],\r\n})\r\nexport class PriceSectionComponent implements OnInit {\r\n    coinPrice$: Observable<CoinPrices>;\r\n    isDisplay = false;\r\n\r\n    isDisplayTime() {\r\n        this.isDisplay = !this.isDisplay;\r\n    }\r\n\r\n    constructor(private coinDetailsService: CoinDetailsService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.coinPrice$ = this.coinDetailsService.coinPrice$;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".price-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n\r\n    margin: 0px;\r\n    @media (min-width: 768px) and (max-width: 1300px) {\r\n        text-align: right;\r\n    }\r\n\r\n    .price-heading {\r\n        color: var(--text-color-sub);\r\n        font-size: 1.2rem;\r\n        font-weight: 500;\r\n        line-height: 1.8rem;\r\n\r\n        small {\r\n            color: var(--color-light-neutral-5);\r\n            font-weight: inherit;\r\n            font-size: inherit;\r\n        }\r\n    }\r\n\r\n    .price-title {\r\n        @media (min-width: 768px) and (max-width: 1300px) {\r\n            justify-content: flex-end;\r\n        }\r\n        margin: 0rem;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        .price-value {\r\n            font-size: 3.2rem;\r\n            font-weight: 700;\r\n            line-height: 4.2rem;\r\n            margin-right: 1.6rem;\r\n        }\r\n    }\r\n\r\n    .alternate-prices {\r\n        margin-top: 0.6rem;\r\n        margin-bottom: 1.4rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        p {\r\n            margin: 0;\r\n            margin-top: 0.4rem;\r\n            line-height: 1;\r\n            font-size: 1.4rem;\r\n            color: var(--color-light-neutral-5);\r\n\r\n            span {\r\n                margin-right: 0.4rem;\r\n                margin-left: 1.2rem;\r\n\r\n                .my-svg {\r\n                    margin: 0rem 0rem 0rem 0.4rem;\r\n                    height: 1.4rem;\r\n                    width: 1.4rem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .slider-section {\r\n        margin: 1rem 0rem 0.8rem 0rem;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        @media (min-width: 768px) and (max-width: 1300px) {\r\n            justify-content: flex-end;\r\n        }\r\n\r\n        .nowrap-low,\r\n        .nowrap-high {\r\n            margin: 0rem 1.6rem 0rem 0rem;\r\n            white-space: nowrap;\r\n\r\n            .high-low-label {\r\n                color: var(--color-light-neutral-6);\r\n                font-size: 1.2rem;\r\n                font-weight: 400;\r\n                line-height: 1.8rem;\r\n            }\r\n\r\n            .high-low-value {\r\n                color: var(--color-primary-black);\r\n                font-size: 1.2rem;\r\n                font-weight: 600;\r\n                line-height: 2.2rem;\r\n            }\r\n        }\r\n\r\n        .slider-pill {\r\n            margin: 0rem;\r\n            width: 100%;\r\n            max-width: 170px;\r\n\r\n            .slider-full {\r\n                height: 0.6rem;\r\n                display: inline-block;\r\n                position: relative;\r\n                background-color: var(--control-dropdown-background-color);\r\n                border-radius: 4px;\r\n                line-height: 5;\r\n\r\n                span {\r\n                    display: inherit;\r\n                    background-color: var(--color-light-neutral-4);\r\n                    height: 100%;\r\n                    position: absolute;\r\n                    left: 0rem;\r\n                    top: 0rem;\r\n                    border-top-left-radius: inherit;\r\n                    border-bottom-left-radius: inherit;\r\n                    color: var(--theme-light-color);\r\n                    border-top-right-radius: 0px;\r\n                    border-bottom-right-radius: 0px;\r\n                    transition: width 3s ease-in-out 0s;\r\n\r\n                    svg {\r\n                        position: absolute;\r\n                        top: -0.1rem;\r\n                        right: -0.8rem;\r\n                        width: 1.6rem;\r\n                        margin: 0rem;\r\n                        color: var(--color-light-neutral-4);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .nowrap-high {\r\n            margin: 0rem 0rem 0rem 1.6rem;\r\n        }\r\n\r\n        .name-pill-base {\r\n            margin: 0rem 0rem 0rem 0.8rem;\r\n            cursor: pointer;\r\n            background-color: var(--color-light-neutral-2);\r\n            color: var(--color-light-neutral-6);\r\n            border-radius: 4px;\r\n            padding: 0.2rem 0.6rem;\r\n            font-size: 1.1rem;\r\n            font-weight: 500;\r\n            line-height: 1.8rem;\r\n            white-space: nowrap;\r\n        }\r\n    }\r\n}\r\n\r\n.tippy-box {\r\n    background-color: var(--color-tippy-arrow);\r\n    box-shadow: var(--shadow-normal);\r\n    color: var(--color-text-1);\r\n    border-radius: 0.8rem;\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    outline: 0;\r\n    transition-property: transform, visibility, opacity;\r\n\r\n    .tippy-content {\r\n        padding: 0.5rem 0.9rem;\r\n        z-index: 1;\r\n    }\r\n\r\n    .slider-list {\r\n        li {\r\n            cursor: pointer;\r\n            pointer-events: auto;\r\n            padding: 1rem 1rem 1rem 0.8rem;\r\n            font-weight: 600;\r\n\r\n            &:hover {\r\n                background-color: var(--color-light-neutral-1);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./price-section.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "coinDetailsService",
                        "type": "CoinDetailsService"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "coinDetailsService",
                        "type": "CoinDetailsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"price-section\" *ngIf=\"coinPrice$ | async as coinPrice\">\r\n    <h1 class=\"price-heading\">\r\n        {{ coinPrice.name }} Price\r\n        <small>({{ coinPrice.shortName }})</small>\r\n    </h1>\r\n    <div class=\"price-title\">\r\n        <div class=\"price-value\">\r\n            {{ coinPrice.price | currency: 'USD':'$':'0.2-2' }}\r\n        </div>\r\n        <span\r\n            style=\"\r\n                background-color: var(--up-color);\r\n                color: #fff;\r\n                padding: 5px 8px;\r\n                border-radius: 8px;\r\n                font-size: 14px;\r\n                font-weight: 600;\r\n            \"\r\n            class=\"price-span\"\r\n        >\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"currentColor\"\r\n                height=\"12px\"\r\n                width=\"12px\"\r\n                viewBox=\"5 0 20 16\"\r\n                style=\"margin: 0\"\r\n            >\r\n                <path\r\n                    d=\"M18.0566 16H5.94336C5.10459 16 4.68455 14.9782 5.27763 14.3806L11.3343 8.27783C11.7019 7.90739 12.2981 7.90739 12.6657 8.27783L18.7223 14.3806C19.3155 14.9782 18.8954 16 18.0566 16Z\"\r\n                ></path></svg\r\n            >{{ coinPrice.priceStatus }}%\r\n        </span>\r\n    </div>\r\n    <div class=\"alternate-prices\">\r\n        <p>\r\n            {{ coinPrice.priceSideValue }} {{ coinPrice.priceSideName }}\r\n            <span\r\n                style=\"\r\n                    color: var(--down-color);\r\n                    padding: 0px;\r\n                    border-radius: 8px;\r\n                \"\r\n            >\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"currentColor\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    style=\"height: 12px; width: 12px\"\r\n                    class=\"my-svg\"\r\n                >\r\n                    <path\r\n                        d=\"M18.0566 8H5.94336C5.10459 8 4.68455 9.02183 5.27763 9.61943L11.3343 15.7222C11.7019 16.0926 12.2981 16.0926 12.6657 15.7222L18.7223 9.61943C19.3155 9.02183 18.8954 8 18.0566 8Z\"\r\n                    ></path>\r\n                </svg>\r\n                {{ coinPrice.pricePercentage }}%</span\r\n            >\r\n        </p>\r\n    </div>\r\n    <div class=\"slider-section\">\r\n        <div class=\"nowrap-low\">\r\n            <span class=\"high-low-label\">Low:</span>\r\n            <span class=\"high-low-value\">{{\r\n                coinPrice.priceLow | currency: 'USD':'$':'0.2-2'\r\n            }}</span>\r\n        </div>\r\n        <div class=\"slider-pill\">\r\n            <span style=\"width: 100%\" class=\"slider-full\">\r\n                <span style=\"width: 92%\">\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"currentColor\"\r\n                        height=\"24px\"\r\n                        width=\"24px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                    >\r\n                        <path\r\n                            d=\"M18.0566 16H5.94336C5.10459 16 4.68455 14.9782 5.27763 14.3806L11.3343 8.27783C11.7019 7.90739 12.2981 7.90739 12.6657 8.27783L18.7223 14.3806C19.3155 14.9782 18.8954 16 18.0566 16Z\"\r\n                        ></path>\r\n                    </svg>\r\n                </span>\r\n            </span>\r\n        </div>\r\n        <div class=\"nowrap-high\">\r\n            <span class=\"high-low-label\">High:</span>\r\n            <span class=\"high-low-value\">{{\r\n                coinPrice.priceHigh | currency: 'USD':'$':'0.2-2'\r\n            }}</span>\r\n        </div>\r\n        <button\r\n            mat-button\r\n            [matMenuTriggerFor]=\"menuTime\"\r\n            class=\"name-pill-base\"\r\n        >\r\n            24h\r\n            <span style=\"width: 92%\">\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    height=\"12px\"\r\n                    width=\"12px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    style=\"height: 10px; margin-left: -2px\"\r\n                >\r\n                    <path\r\n                        d=\"M 6 9 L 12 15 L 18 9\"\r\n                        stroke=\"currentcolor\"\r\n                        stroke-width=\"2\"\r\n                        stroke-miterlimit=\"10\"\r\n                        stroke-linecap=\"round\"\r\n                        stroke-linejoin=\"round\"\r\n                    ></path>\r\n                </svg>\r\n            </span>\r\n        </button>\r\n        <mat-menu #menuTime=\"matMenu\">\r\n            <div style=\"pointer-events: none; z-index: 9999\">\r\n                <div\r\n                    class=\"tippy-box\"\r\n                    tabindex=\"-1\"\r\n                    style=\"max-width: 350px; transition-duration: 300ms\"\r\n                >\r\n                    <div\r\n                        class=\"tippy-content\"\r\n                        style=\"transition-duration: 300ms\"\r\n                    >\r\n                        <div>\r\n                            <ul class=\"slider-list\">\r\n                                <li>24h Low / High</li>\r\n                                <li>1m Low / High</li>\r\n                                <li>1y Low / High</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-menu>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ScrollTopComponent",
            "id": "component-ScrollTopComponent-b7f318ba2dc4fd8f67067fd7bb8d5310",
            "file": "apps/coin-market/src/app/components/scroll-top/scroll-top.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-scroll-top",
            "styleUrls": [
                "./scroll-top.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scroll-top.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "windowScrolled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "scrollToTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:scroll",
                    "args": [],
                    "argsDecorator": [],
                    "line": 13
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Component, HostListener, Inject, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'coin-market-scroll-top',\n    templateUrl: './scroll-top.component.html',\n    styleUrls: ['./scroll-top.component.scss'],\n})\nexport class ScrollTopComponent implements OnInit {\n    windowScrolled: boolean;\n    constructor(@Inject(DOCUMENT) private document: Document) {}\n    @HostListener('window:scroll', [])\n    onWindowScroll() {\n        if (\n            window.pageYOffset ||\n            document.documentElement.scrollTop ||\n            document.body.scrollTop > 500\n        ) {\n            this.windowScrolled = true;\n        } else if (\n            (this.windowScrolled && window.pageYOffset) ||\n            document.documentElement.scrollTop ||\n            document.body.scrollTop < 10\n        ) {\n            this.windowScrolled = false;\n        }\n    }\n    scrollToTop() {\n        (function smoothscroll() {\n            var currentScroll =\n                document.documentElement.scrollTop || document.body.scrollTop;\n            if (currentScroll > 100) {\n                window.requestAnimationFrame(smoothscroll);\n                window.scrollTo(0, currentScroll - currentScroll / 8);\n            }\n        })();\n    }\n\n    ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".scroll-to-top {\r\n    position: fixed;\r\n    bottom: 1.5rem;\r\n    right: 1.5rem;\r\n    opacity: 0;\r\n    transition: all 0.2s ease-in-out;\r\n\r\n    button {\r\n        border: none;\r\n        &:hover {\r\n            background-color: rgb(16, 112, 224);\r\n        }\r\n    }\r\n}\r\n.show-scrollTop {\r\n    opacity: 1;\r\n    transition: all 0.2s ease-in-out;\r\n}\r\n.keyboard-up {\r\n    display: inline-flex !important;\r\n    width: 4rem !important;\r\n    height: 3.4rem !important;\r\n    -webkit-box-pack: center !important;\r\n    justify-content: center !important;\r\n    -webkit-box-align: center !important;\r\n    align-items: center !important;\r\n    background: rgba(23, 24, 27, 0.85) !important;\r\n    color: rgb(255, 255, 255) !important;\r\n    user-select: none !important;\r\n    cursor: pointer !important;\r\n    visibility: visible !important;\r\n    font-weight: bold;\r\n}\r\n",
                    "styleUrl": "./scroll-top.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"scroll-to-top\" [ngClass]=\"{ 'show-scrollTop': windowScrolled }\">\n    <button (click)=\"scrollToTop()\">\n        <mat-icon class=\"keyboard-up\">arrow_upward</mat-icon>\n    </button>\n</div>\n"
        },
        {
            "name": "StatsSectionComponent",
            "id": "component-StatsSectionComponent-beaa5300e54cfbe9bbe6ba155c13e281",
            "file": "apps/coin-market/src/app/components/details-section/stats-section/stats-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CoinDetailsService"
                }
            ],
            "selector": "coin-market-stats-section",
            "styleUrls": [
                "./stats-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stats-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coinStatistics$",
                    "type": "Observable<CoinStatistics>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CoinStatistics } from '../../../models/coin-statistics.model';\r\nimport { CoinDetailsService } from '../../../shared/services/coin-details.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-stats-section',\r\n    templateUrl: './stats-section.component.html',\r\n    styleUrls: ['./stats-section.component.scss'],\r\n    providers: [CoinDetailsService],\r\n})\r\nexport class StatsSectionComponent implements OnInit {\r\n    coinStatistics$: Observable<CoinStatistics>;\r\n\r\n    constructor(private coinDetailsService: CoinDetailsService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.coinStatistics$ = this.coinDetailsService.coinStatistics$;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".stats-section {\r\n    margin-bottom: 1.6rem;\r\n\r\n    .stats-container {\r\n        margin-top: 1.2rem;\r\n        display: grid;\r\n        grid-template-columns: repeat(12, 1fr);\r\n        border-top: 1px solid var(--control-dropdown-background-color);\r\n        padding-top: 2.4rem;\r\n        padding-bottom: 0.4rem;\r\n\r\n        .stats-block {\r\n            grid-column: span 3;\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            .stats-block-inner {\r\n                .stats-label {\r\n                    height: 2.3rem;\r\n                    margin: 0rem 0rem 0.4rem;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    color: var(--text-color-sub);\r\n                    font-size: 1.2rem;\r\n                    font-weight: 500;\r\n                    line-height: 1.8rem;\r\n                }\r\n\r\n                .stats-item-below {\r\n                    align-items: center;\r\n\r\n                    .stats-value {\r\n                        color: var(--color-primary-black);\r\n                        font-size: 1.2rem;\r\n                        font-weight: 600;\r\n                        line-height: 1.8rem;\r\n                        margin-right: 0.8rem;\r\n                        margin-bottom: 0.4rem;\r\n                        display: flex;\r\n                        justify-content: space-between;\r\n                        align-items: center;\r\n                    }\r\n                }\r\n            }\r\n            .stats-block-inner:nth-child(2) {\r\n                margin-top: 2.8rem;\r\n            }\r\n        }\r\n\r\n        .stats-supply-block {\r\n            grid-column: span 3;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            flex-wrap: wrap;\r\n            max-width: 100%;\r\n            padding-left: 2rem;\r\n\r\n            .stats-label {\r\n                margin: 0px 0px 0.4rem;\r\n                display: flex;\r\n                align-items: center;\r\n                color: var(--text-color-sub);\r\n                font-size: 1.2rem;\r\n                font-weight: 500;\r\n                line-height: 1.8rem;\r\n            }\r\n\r\n            .stats-second {\r\n                margin: 0rem;\r\n                display: flex;\r\n                -webkit-box-pack: justify;\r\n                justify-content: space-between;\r\n                -webkit-box-align: baseline;\r\n                align-items: baseline;\r\n\r\n                .stats-value {\r\n                    color: var(--color-primary-black);\r\n                    font-size: 1.2rem;\r\n                    font-weight: 600;\r\n                    line-height: 1.8rem;\r\n                    margin-right: 0.8rem;\r\n                    margin-bottom: 0.4rem;\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                }\r\n\r\n                .stats-block-percentage {\r\n                    color: var(--text-color-sub);\r\n                    font-size: 1.2rem;\r\n                    font-weight: 500;\r\n                    line-height: 1.8rem;\r\n                }\r\n            }\r\n\r\n            .stats-third {\r\n                margin: 0px 0px 0.4rem;\r\n                flex: 0 0 100%;\r\n\r\n                .span-first {\r\n                    height: 0.6rem;\r\n                    display: inline-block;\r\n                    position: relative;\r\n                    background-color: var(--control-dropdown-background-color);\r\n                    border-radius: 4px;\r\n                    line-height: 5;\r\n\r\n                    span {\r\n                        display: inherit;\r\n                        background-color: var(--color-light-neutral-4);\r\n                        height: 100%;\r\n                        position: absolute;\r\n                        left: 0rem;\r\n                        top: 0rem;\r\n                        border-top-left-radius: inherit;\r\n                        border-bottom-left-radius: inherit;\r\n                        color: var(--theme-light-color);\r\n                        border-top-right-radius: 0rem;\r\n                        border-bottom-right-radius: 0rem;\r\n                        transition: width 3s ease-in-out 0s;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .max-supply,\r\n            .total-supply {\r\n                display: flex;\r\n                justify-content: space-between;\r\n\r\n                .supply-value {\r\n                    color: var(--color-primary-black);\r\n                    font-size: 1.2rem;\r\n                    font-weight: 500;\r\n                    line-height: 1.8rem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.name-pill-base {\r\n    margin: 0px 0px 0px 0.8rem;\r\n    cursor: pointer;\r\n\r\n    background-color: var(--control-dropdown-background-color);\r\n    color: var(--text-color-sub);\r\n    border-radius: 0.4rem;\r\n    padding: 0.2rem 0.6rem;\r\n    font-size: 1.1rem;\r\n    font-weight: 500;\r\n    line-height: 1.8rem;\r\n    white-space: nowrap;\r\n}\r\n\r\n.my-cap-svg {\r\n    height: 1.4rem;\r\n    width: 1.4rem;\r\n    border-radius: 0.9rem;\r\n}\r\n\r\n.cap-svg {\r\n    margin-left: 0.3rem;\r\n    vertical-align: middle;\r\n    line-height: 0;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    .stats-block:first-of-type {\r\n        padding-left: 0;\r\n    }\r\n}\r\n\r\n@media (min-width: 1000px) and (max-width: 1376px) {\r\n    .stats-block {\r\n        grid-column: span 3;\r\n        padding-top: 1.2rem;\r\n    }\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    .stats-block {\r\n        grid-column: span 4;\r\n        border-bottom: none;\r\n        border-right: 1px solid var(--control-dropdown-background-color);\r\n        padding-left: 2.4rem;\r\n        padding-top: 0.8rem;\r\n    }\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    .stats-item-below {\r\n        display: block;\r\n    }\r\n}\r\n\r\n@media (min-width: 1000px) {\r\n    .stats-supply-block {\r\n        grid-column: span 3;\r\n        padding-left: 2.4rem;\r\n    }\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    .stats-supply-block {\r\n        grid-column: span 12;\r\n        display: block;\r\n        padding-left: 0;\r\n        margin-top: 1.2rem;\r\n        margin-bottom: 0.8rem;\r\n    }\r\n}\r\n",
                    "styleUrl": "./stats-section.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "coinDetailsService",
                        "type": "CoinDetailsService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "coinDetailsService",
                        "type": "CoinDetailsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"stats-section\" *ngIf=\"coinStatistics$ | async as coinStatistics\">\r\n  <div class=\"stats-container\">\r\n    <div class=\"stats-block\">\r\n      <div class=\"stats-block-inner\">\r\n        <div class=\"stats-label\">\r\n          Market Cap\r\n          <div class=\"cap-svg\" aria-expanded=\"false\">\r\n            <img src=\"assets/img/myinfo.png\" class=\"my-cap-svg\">\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"stats-item-below\">\r\n          <div class=\"stats-value\">\r\n            {{ coinStatistics.marketCapPrice | currency: \"USD\":\"$\":\"0.0-0\" }}\r\n          </div>\r\n          <span style=\"\r\n              color: #16c784;\r\n              padding: 0;\r\n              border-radius: 8px;\r\n              display: block;\r\n              margin-top: 0;\r\n              font-size: 12px;\r\n              font-weight: 600;\r\n            \">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"12px\" width=\"12px\" viewBox=\"0 0 22 16\">\r\n              <path\r\n                d=\"M18.0566 16H5.94336C5.10459 16 4.68455 14.9782 5.27763 14.3806L11.3343 8.27783C11.7019 7.90739 12.2981 7.90739 12.6657 8.27783L18.7223 14.3806C19.3155 14.9782 18.8954 16 18.0566 16Z\">\r\n              </path>\r\n            </svg>\r\n            {{ coinStatistics.marketCapPercentage + \"%\" }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"stats-block\">\r\n      <div class=\"stats-block-inner\">\r\n        <div class=\"stats-label\">\r\n          Fully Diluted Market Cap\r\n          <div class=\"cap-svg\" aria-expanded=\"false\">\r\n            <img src=\"assets/img/myinfo.png\" class=\"my-cap-svg\">\r\n          </div>\r\n        </div>\r\n        <div class=\"stats-item-below\">\r\n          <div class=\"stats-value\">\r\n            {{\r\n            coinStatistics.fullyMarketCapPrice | currency: \"USD\":\"$\":\"0.0-0\"\r\n            }}\r\n          </div>\r\n          <span style=\"\r\n              color: #16c784;\r\n              padding: 0;\r\n              border-radius: 8px;\r\n              display: block;\r\n              margin-top: 0;\r\n              font-size: 12px;\r\n              font-weight: 600;\r\n            \">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"12px\" width=\"12px\" viewBox=\"0 0 22 16\">\r\n              <path\r\n                d=\"M18.0566 16H5.94336C5.10459 16 4.68455 14.9782 5.27763 14.3806L11.3343 8.27783C11.7019 7.90739 12.2981 7.90739 12.6657 8.27783L18.7223 14.3806C19.3155 14.9782 18.8954 16 18.0566 16Z\">\r\n              </path>\r\n            </svg>\r\n            {{ coinStatistics.fullyMarketCapPercentage}}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"stats-block\">\r\n      <div class=\"stats-block-inner\">\r\n        <div class=\"stats-label\">\r\n          Volume\r\n          <div class=\"name-pill-base\">24h</div>\r\n          <div class=\"cap-svg\" aria-expanded=\"false\">\r\n            <img src=\"assets/img/myinfo.png\" class=\"my-cap-svg\">\r\n          </div>\r\n        </div>\r\n        <div class=\"stats-item-below\">\r\n          <div class=\"stats-value\">\r\n            {{ coinStatistics.volumePrice | currency: \"USD\":\"$\":\"0.0-0\" }}\r\n          </div>\r\n          <span style=\"\r\n              color: #16c784;\r\n              padding: 0;\r\n              border-radius: 8px;\r\n              display: block;\r\n              margin-top: 0;\r\n              font-size: 12px;\r\n              font-weight: 600;\r\n            \">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height=\"12px\" width=\"12px\" viewBox=\"0 0 22 16\">\r\n              <path\r\n                d=\"M18.0566 16H5.94336C5.10459 16 4.68455 14.9782 5.27763 14.3806L11.3343 8.27783C11.7019 7.90739 12.2981 7.90739 12.6657 8.27783L18.7223 14.3806C19.3155 14.9782 18.8954 16 18.0566 16Z\">\r\n              </path>\r\n            </svg>\r\n            {{ coinStatistics.volumePercentage}}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"stats-block-inner\">\r\n        <div class=\"stats-label\">Volume / Market Cap</div>\r\n        <div class=\"stats-item-below\">\r\n          <div class=\"stats-value\">\r\n            {{ coinStatistics.volumeMarketCapNumber }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"stats-supply-block\">\r\n      <div class=\"stats-label\">\r\n        Circulating Supply\r\n        <div class=\"cap-svg\" aria-expanded=\"false\">\r\n          <img src=\"assets/img/myinfo.png\" class=\"my-cap-svg\">\r\n        </div>\r\n      </div>\r\n      <div display=\"flex\" class=\"stats-second\">\r\n        <div class=\"stats-value\">\r\n          {{ coinStatistics.circulatingSupplyNumber | number: \"0.0-0\" }}\r\n          {{ coinStatistics.shortName }}\r\n        </div>\r\n        <div class=\"stats-block-percentage\">\r\n          {{ coinStatistics.circulatingSupplyPercentage}}%\r\n        </div>\r\n      </div>\r\n      <div class=\"stats-third\">\r\n        <span style=\"width: 100%\" class=\"span-first\">\r\n          <span style=\"width: 88.88577142857143%\"></span>\r\n        </span>\r\n      </div>\r\n      <div style=\"margin-top: 32px\" class=\"max-supply\">\r\n        <div class=\"stats-label\">\r\n          Max Supply\r\n          <div class=\"cap-svg\" aria-expanded=\"false\">\r\n            <img src=\"assets/img/myinfo.png\" class=\"my-cap-svg\">\r\n          </div>\r\n        </div>\r\n        <div class=\"supply-value\">\r\n          {{ coinStatistics.maxSupplyNumber | number: \"0.0-0\" }}\r\n        </div>\r\n      </div>\r\n      <div class=\"total-supply\">\r\n        <div class=\"stats-label\">\r\n          Total Supply\r\n          <div class=\"cap-svg\" aria-expanded=\"false\">\r\n            <img src=\"assets/img/myinfo.png\" class=\"my-cap-svg\">\r\n          </div>\r\n        </div>\r\n        <div class=\"supply-value\">\r\n          {{ coinStatistics.totalSupplyNumber | number: \"0.0-0\" }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "SwitchThemeBtnComponent",
            "id": "component-SwitchThemeBtnComponent-15d233015714476e96d0f78bfc017136",
            "file": "apps/coin-market/src/app/components/switch-theme-btn/switch-theme-btn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-switch-theme-btn",
            "styleUrls": [
                "./switch-theme-btn.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./switch-theme-btn.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "CLASS_DARK_MODE",
                    "defaultValue": "'dark-theme'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "KEY_DARK_MODE",
                    "defaultValue": "'dark-mode'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "switchTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { LocalStorageService } from '../../shared/services/local-storage.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-switch-theme-btn',\r\n    templateUrl: './switch-theme-btn.component.html',\r\n    styleUrls: ['./switch-theme-btn.component.scss'],\r\n})\r\nexport class SwitchThemeBtnComponent implements OnInit {\r\n    KEY_DARK_MODE = 'dark-mode';\r\n    CLASS_DARK_MODE = 'dark-theme';\r\n\r\n    constructor(private localStorage: LocalStorageService) {}\r\n\r\n    ngOnInit(): void {\r\n        const result = this.localStorage.getItem(this.KEY_DARK_MODE);\r\n\r\n        if (result) document.body.classList.add(this.CLASS_DARK_MODE);\r\n    }\r\n\r\n    switchTheme() {\r\n        document.body.classList.toggle(this.CLASS_DARK_MODE);\r\n\r\n        const result = this.localStorage.getItem(this.KEY_DARK_MODE);\r\n\r\n        if (result) this.localStorage.removeItem(this.KEY_DARK_MODE);\r\n        else this.localStorage.setItem(this.KEY_DARK_MODE, 'true');\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dark-mode {\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    border-radius: 5px;\r\n    border: none;\r\n    color: var(--theme-color);\r\n    cursor: pointer;\r\n    display: inline-flex;\r\n    font-size: 12px;\r\n    line-height: 12px;\r\n    margin: 0px;\r\n    padding: 5px;\r\n    vertical-align: baseline;\r\n    white-space: nowrap;\r\n    height: 27px;\r\n    width: 22px;\r\n\r\n    .dark-mode-moon {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-weight: normal !important;\r\n        transform: rotate(-45deg);\r\n    }\r\n}\r\n",
                    "styleUrl": "./switch-theme-btn.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "localStorage",
                        "type": "LocalStorageService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "localStorage",
                        "type": "LocalStorageService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"dark-mode\" (click)=\"switchTheme()\">\r\n    <mat-icon class=\"dark-mode-moon\">nightlight_round</mat-icon>\r\n</button>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-b497ceb2adcfc468eb85c0634e76d3bc",
            "file": "apps/coin-market/src/app/shared/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dataLength",
                    "line": 26,
                    "type": "number"
                },
                {
                    "name": "dataSource",
                    "line": 25,
                    "type": "any"
                },
                {
                    "name": "showPaginator",
                    "defaultValue": "true",
                    "line": 23
                },
                {
                    "name": "showPairs",
                    "defaultValue": "true",
                    "line": 24
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedEvent",
                    "defaultValue": "new EventEmitter<string>(null)",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n        'market_id',\r\n        'market_name',\r\n        'pairs',\r\n        'price',\r\n        'volume',\r\n        'volume_percentage',\r\n        'liquidity',\r\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "matTable",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'marketsTable'"
                        }
                    ]
                },
                {
                    "name": "paginator",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "pairs",
                    "defaultValue": "[\r\n        { viewValue: 'All' },\r\n        { viewValue: 'USDT' },\r\n        { viewValue: 'BUSD' },\r\n        { viewValue: 'USD' },\r\n        { viewValue: 'BTC' },\r\n        { viewValue: 'JPY' },\r\n        { viewValue: 'KRW' },\r\n        { viewValue: 'EUR' },\r\n        { viewValue: 'USDC' },\r\n        { viewValue: 'UST' },\r\n        { viewValue: 'GBP' },\r\n        { viewValue: 'TRY' },\r\n    ]",
                    "type": "Pair[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "select",
                    "type": "MatSelect",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSelect"
                        }
                    ]
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "'All'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "sort",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "onSelectChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\r\n    AfterViewChecked,\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material//paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Pair } from '../../models/pair';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatTable } from '@angular/material/table';\r\n\r\n@Component({\r\n    selector: 'coin-market-table',\r\n    templateUrl: './table.component.html',\r\n    styleUrls: ['./table.component.scss'],\r\n})\r\nexport class TableComponent implements AfterViewChecked {\r\n    @ViewChild('marketsTable') matTable: any;\r\n    @Input() showPaginator = true;\r\n    @Input() showPairs = true;\r\n    @Input() dataSource: any;\r\n    @Input() dataLength: number;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatSelect) select: MatSelect;\r\n    @Output() selectedEvent = new EventEmitter<string>(null);\r\n\r\n    displayedColumns = [\r\n        'market_id',\r\n        'market_name',\r\n        'pairs',\r\n        'price',\r\n        'volume',\r\n        'volume_percentage',\r\n        'liquidity',\r\n    ];\r\n    selectedValue = 'All';\r\n\r\n    pairs: Pair[] = [\r\n        { viewValue: 'All' },\r\n        { viewValue: 'USDT' },\r\n        { viewValue: 'BUSD' },\r\n        { viewValue: 'USD' },\r\n        { viewValue: 'BTC' },\r\n        { viewValue: 'JPY' },\r\n        { viewValue: 'KRW' },\r\n        { viewValue: 'EUR' },\r\n        { viewValue: 'USDC' },\r\n        { viewValue: 'UST' },\r\n        { viewValue: 'GBP' },\r\n        { viewValue: 'TRY' },\r\n    ];\r\n\r\n    onSelectChange(val: string) {\r\n        this.selectedEvent.emit(val);\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.matTable.updateStickyColumnStyles();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "p {\r\n    display: block;\r\n    margin-block-start: 1rem;\r\n    margin-block-end: 1rem;\r\n    margin-inline-start: 0rem;\r\n    margin-inline-end: 0rem;\r\n}\r\n\r\n.elements-above-table {\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    -webkit-box-pack: justify;\r\n    justify-content: space-between;\r\n    padding-top: 2rem;\r\n    padding-bottom: 2rem;\r\n\r\n    h2 {\r\n        margin: 0rem;\r\n        font-weight: 700;\r\n        font-size: 2.4rem;\r\n        line-height: 3.4rem;\r\n        color: var(--theme-color);\r\n    }\r\n\r\n    .pair-select {\r\n        box-sizing: border-box;\r\n        margin: 0rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        -webkit-box-align: center;\r\n        align-items: center;\r\n\r\n        .pair-text {\r\n            line-height: 1.5;\r\n            margin: 0rem 0.8rem 0rem 0rem;\r\n            color: var(--text-color-sub);\r\n            font-weight: 500;\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n}\r\ntable {\r\n    margin: auto;\r\n    font-size: 1.4rem;\r\n    width: 100%;\r\n    box-shadow: none !important;\r\n    background: var(--theme-background) !important;\r\n\r\n    th {\r\n        color: var(--theme-color);\r\n        display: table-cell;\r\n        vertical-align: inherit;\r\n        font-weight: bold;\r\n    }\r\n    tr:hover {\r\n        background-color: var(--table-row-hover-background-color);\r\n    }\r\n\r\n    .mat-cell {\r\n        color: var(--theme-color);\r\n    }\r\n}\r\n\r\n.market-icon-name {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n.market-icon {\r\n    height: 2.4rem;\r\n    width: 2.4rem;\r\n    border-radius: 1.2rem;\r\n    margin-right: 0.5rem;\r\n}\r\n\r\n.market-name {\r\n    margin: 0rem 0rem 0rem 0.5rem;\r\n    line-height: 2.4rem;\r\n    font-weight: bold;\r\n}\r\n\r\n.table-pairs {\r\n    color: var(--link-color) !important;\r\n    font-weight: 500;\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n.icon-liquidity {\r\n    display: flex;\r\n    flex-direction: row;\r\n    font-weight: bold;\r\n    align-items: center;\r\n}\r\n.icon-liquidity-info {\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    border-radius: 0.9rem;\r\n    margin-left: 0.3rem;\r\n}\r\n\r\n.icon-info {\r\n    box-sizing: border-box;\r\n    padding: 1.2rem;\r\n    font-weight: 600;\r\n    font-size: 1.2rem;\r\n    width: 30rem;\r\n    text-align: left;\r\n\r\n    .icon-info-header {\r\n        display: flex;\r\n        flex-direction: row;\r\n        -webkit-box-pack: justify;\r\n        justify-content: space-between;\r\n        -webkit-box-align: center;\r\n        align-items: center;\r\n\r\n        p {\r\n            line-height: 1.5;\r\n            margin: 0px;\r\n            color: rgb(34, 37, 49);\r\n            font-size: 1.2rem;\r\n            font-weight: bold;\r\n        }\r\n\r\n        a {\r\n            font-size: 1.2rem;\r\n            color: var(--link-color);\r\n        }\r\n    }\r\n\r\n    p {\r\n        line-height: 1.5;\r\n        margin: 0.8rem 0rem 0rem;\r\n        color: var(--color-gray);\r\n        font-size: 1.2rem;\r\n    }\r\n}\r\n\r\n@media screen and (min-width: 768px) {\r\n    h1 {\r\n        font-size: 2.4rem;\r\n        line-height: 3.4rem;\r\n    }\r\n}\r\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewChecked"
            ],
            "templateData": "<div class=\"container\">\r\n    <div class=\"elements-above-table\">\r\n        <h2>Bitcoin Markets</h2>\r\n        <div class=\"pair-select\" *ngIf=\"showPairs\">\r\n            <p class=\"pair-text\">Pair</p>\r\n            <mat-select\r\n                [(ngModel)]=\"selectedValue\"\r\n                (ngModelChange)=\"onSelectChange($event)\"\r\n                name=\"pair\"\r\n            >\r\n                <mat-option *ngFor=\"let pair of pairs\" [value]=\"pair.viewValue\">\r\n                    {{ pair.viewValue }}\r\n                </mat-option>\r\n            </mat-select>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"table-responsive\">\r\n        <table\r\n        #marketsTable\r\n            mat-table\r\n            [dataSource]=\"dataSource\"\r\n            matSort\r\n            class=\"mat-elevation-z8\"\r\n        >\r\n            <ng-container matColumnDef=\"market_id\" sticky>\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                <td\r\n                    mat-cell\r\n                    style=\"color: rgb(88, 102, 126)\"\r\n                    *matCellDef=\"let market\"\r\n                >\r\n                    {{ market.market_id }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"market_name\" sticky>\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    Source\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let market\">\r\n                    <div class=\"market-icon-name\">\r\n                        <img class=\"market-icon\" [src]=\"market.market_icon\" />\r\n                        <p class=\"market-name\">{{ market.market_name }}</p>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"pairs\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Pairs</th>\r\n                <td mat-cell class=\"table-pairs\" *matCellDef=\"let market\">\r\n                    {{ market.pairs }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\r\n                <td mat-cell style=\"font-weight: bold\" *matCellDef=\"let market\">\r\n                    {{ market.price | currency: 'USD':'$':'1.2-2' }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"volume\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    Volume\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let market\">\r\n                    {{ market.volume | currency: 'USD':'$':'4.0-2' }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"volume_percentage\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    Volume %\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let market\">\r\n                    {{ market.volume_percentage }}%\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"liquidity\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span class=\"icon-liquidity\"\r\n                        >Liquidity\r\n                        <img\r\n                            class=\"icon-liquidity-info\"\r\n                            nz-popover\r\n                            [nzPopoverContent]=\"liquidityInfo\"\r\n                            nzPopoverPlacement=\"bottom\"\r\n                            src=\"assets/img/myinfo.png\"\r\n                        />\r\n                    </span>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let market\">\r\n                    {{ market.liquidity }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr\r\n                mat-header-row\r\n                *matHeaderRowDef=\"displayedColumns; sticky: true\"\r\n            ></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n        </table>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"showPaginator\"\r\n        ><mat-paginator\r\n            #myPaginator\r\n            [length]=\"dataLength\"\r\n            [pageSize]=\"20\"\r\n            [pageSizeOptions]=\"[20, 40, 50, 100]\"\r\n        >\r\n        </mat-paginator\r\n    ></ng-container>\r\n</div>\r\n\r\n<ng-template #liquidityInfo>\r\n    <div class=\"icon-info\">\r\n        <div class=\"icon-info-header\">\r\n            <p>Liquidity Score</p>\r\n            <a href=\"_blank\">Read More</a>\r\n        </div>\r\n        <p>\r\n            Liquidity scores a market pair from 0 to 1000 based on the slippage\r\n            incurred by various order sizes. A higher score indicates a more\r\n            liquid market.\r\n        </p>\r\n    </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "TrendingComponent",
            "id": "component-TrendingComponent-090b81e519a8eca82aae9bfe4b578aba",
            "file": "apps/coin-market/src/app/components/overview/trending/trending.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-trending",
            "styleUrls": [
                "./trending.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./trending.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "trendingCoins$",
                    "type": "Observable<Coin[]>",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Coin } from '../../../models/coin.model';\r\nimport { TrendingListService } from '../../../shared/services/trending-list.service';\r\n\r\n@Component({\r\n    selector: 'coin-market-trending',\r\n    templateUrl: './trending.component.html',\r\n    styleUrls: ['./trending.component.scss'],\r\n})\r\nexport class TrendingComponent {\r\n    trendingCoins$: Observable<Coin[]>;\r\n\r\n    constructor(private trendingListService: TrendingListService) {\r\n        this.trendingCoins$ = trendingListService.trendingCoins$;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".trending {\r\n    &__list {\r\n        li:not(:last-child) {\r\n            border-bottom: 1px solid var(--theme-border-color);\r\n        }\r\n\r\n        &__item {\r\n            display: flex;\r\n            align-items: center;\r\n            padding: 1.2rem 0 1.2rem 0.8rem;\r\n\r\n            &:hover {\r\n                background-color: var(--color-light-neutral-2);\r\n            }\r\n\r\n            &__logo {\r\n                width: 2.4rem;\r\n                height: 2.4rem;\r\n                object-fit: contain;\r\n            }\r\n\r\n            &__sponsored {\r\n                flex-grow: 1;\r\n                margin-left: 1rem;\r\n                display: flex;\r\n                align-items: center;\r\n                & > div:first-child {\r\n                    flex-grow: 1;\r\n                }\r\n                &__title {\r\n                    font-weight: bold;\r\n                }\r\n\r\n                &__desc {\r\n                    color: var(--color-light-neutral-6);\r\n                    font-weight: 500;\r\n                }\r\n\r\n                &__footer {\r\n                    a {\r\n                        display: block;\r\n                        text-align: center;\r\n                        background-color: rgb(56, 97, 251);\r\n                        padding: 0.8rem 1.6rem;\r\n                        color: #fff;\r\n                        font-size: 1.2rem;\r\n                        text-decoration: none;\r\n                        border-radius: 10px;\r\n\r\n                        &:hover {\r\n                            background-color: darken(\r\n                                $color: rgb(56, 97, 251),\r\n                                $amount: 5\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    small {\r\n                        margin-top: 0.5rem;\r\n                        display: flex;\r\n                        align-items: center;\r\n                        font-size: 1.1rem;\r\n                        color: var(--color-light-neutral-6);\r\n\r\n                        img {\r\n                            margin-right: 0.5rem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            &__name--full {\r\n                font-weight: bold;\r\n                margin: 0 0.5rem 0 1rem;\r\n            }\r\n\r\n            &__name--shorten {\r\n                color: var(--color-light-neutral-6);\r\n                font-weight: 500;\r\n                font-size: 1.1rem;\r\n                flex-grow: 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./trending.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "trendingListService",
                        "type": "TrendingListService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "trendingListService",
                        "type": "TrendingListService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section class=\"trending bg-gray-card\">\r\n    <h2>Trending Coins and Tokens 🔥</h2>\r\n    <ul class=\"trending__list\">\r\n        <li>\r\n            <a href=\"#\" class=\"trending__list__item\">\r\n                <img\r\n                    class=\"trending__list__item__logo\"\r\n                    src=\"https://s2.coinmarketcap.com/static/cloud/img/bnb_logo_64x64.png\"\r\n                    alt=\"...\"\r\n                />\r\n                <div class=\"trending__list__item__sponsored\">\r\n                    <div>\r\n                        <p class=\"trending__list__item__sponsored__title\">\r\n                            Hold BNB on Binance\r\n                        </p>\r\n                        <small class=\"trending__list__item__sponsored__desc\"\r\n                            >And Get 25% Off Trading Fees.</small\r\n                        >\r\n                    </div>\r\n                    <div class=\"trending__list__item__sponsored__footer\">\r\n                        <a href=\"#\">Trade Now</a>\r\n\r\n                        <small\r\n                            ><img\r\n                                src=\"assets/img/logo/coinmarket.svg\"\r\n                                alt=\"...\"\r\n                            />\r\n                            Sponsored</small\r\n                        >\r\n                    </div>\r\n                </div></a\r\n            >\r\n        </li>\r\n        <li *ngFor=\"let coin of trendingCoins$ | async\">\r\n            <a href=\"#\" class=\"trending__list__item\">\r\n                <img\r\n                    class=\"trending__list__item__logo\"\r\n                    [src]=\"coin.icon\"\r\n                    alt=\"...\"\r\n                />\r\n                <p class=\"trending__list__item__name--full\">\r\n                    {{ coin.coin_name }}\r\n                </p>\r\n                <p class=\"trending__list__item__name--shorten\">\r\n                    {{ coin.coin_id }}\r\n                </p>\r\n                <small class=\"trending__list__item__rank badge-gray\"\r\n                    >#{{ coin.rank }}</small\r\n                ></a\r\n            >\r\n        </li>\r\n    </ul>\r\n</section>\r\n"
        },
        {
            "name": "VoteCoinComponent",
            "id": "component-VoteCoinComponent-b45ba428d67901382fb3576d85690113",
            "file": "apps/coin-market/src/app/components/overview/vote-coin/vote-coin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "coin-market-vote-coin",
            "styleUrls": [
                "./vote-coin.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vote-coin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coinName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "coinSubscription",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "voted",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "votes$",
                    "type": "Observable<VoteCoinData>",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "checkVote",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "isVoteValid",
                    "args": [
                        {
                            "name": "obj",
                            "type": "VoteCoin"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 61,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "VoteCoin",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "vote",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { VoteCoin } from '../../../models/voteCoin.model';\r\nimport { VoteCoinData } from '../../../models/voteCoinData.model';\r\nimport { OverviewService } from '../../../shared/services/overview.service';\r\nimport { LocalStorageService } from '../../../shared/services/local-storage.service';\r\nimport { isValid } from 'date-fns';\r\n\r\n@Component({\r\n    selector: 'coin-market-vote-coin',\r\n    templateUrl: './vote-coin.component.html',\r\n    styleUrls: ['./vote-coin.component.scss'],\r\n})\r\nexport class VoteCoinComponent implements OnInit, OnDestroy {\r\n    coinSubscription: Subscription;\r\n    coinName: string;\r\n    votes$: Observable<VoteCoinData>;\r\n\r\n    voted: number;\r\n\r\n    constructor(\r\n        private localStorageService: LocalStorageService,\r\n        private overviewService: OverviewService\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.coinSubscription = this.overviewService.coin$.subscribe(\r\n            (s) => (this.coinName = s.coin_name)\r\n        );\r\n\r\n        this.votes$ = this.overviewService.coinVotes$;\r\n        this.checkVote();\r\n    }\r\n\r\n    checkVote() {\r\n        const vote = this.localStorageService.getItem(`${this.coinName}_vote`);\r\n\r\n        if (vote) {\r\n            const voteObj: VoteCoin = JSON.parse(vote);\r\n\r\n            if (\r\n                !this.isVoteValid(voteObj) ||\r\n                voteObj.expireDate < new Date().getTime()\r\n            )\r\n                this.localStorageService.removeItem(`${this.coinName}_vote`);\r\n            else {\r\n                this.voted = voteObj.value;\r\n            }\r\n        }\r\n    }\r\n\r\n    vote(value: number) {\r\n        this.voted = value;\r\n\r\n        this.localStorageService.setItem(\r\n            `${this.coinName}_vote`,\r\n            JSON.stringify(new VoteCoin(value, new Date().setHours(24)))\r\n        );\r\n    }\r\n\r\n    isVoteValid(obj: VoteCoin): boolean {\r\n        const { value, expireDate } = obj;\r\n\r\n        if (typeof value !== 'number' || (value !== 1 && value !== -1))\r\n            return false;\r\n\r\n        if (!isValid(new Date(expireDate))) return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.coinSubscription.unsubscribe();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".vote-coin {\r\n    background-color: var(--theme-section-background);\r\n    border-radius: 16px;\r\n    padding: 1.8rem 2.4rem;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    &__text {\r\n        margin-right: 1rem;\r\n        &__question {\r\n            font-size: 120%;\r\n        }\r\n\r\n        &__briefing {\r\n            color: var(--color-light-neutral-6);\r\n            margin: 0.8rem 0;\r\n        }\r\n    }\r\n\r\n    &__button-group {\r\n        &__button {\r\n            padding: 0.8rem 1.6rem;\r\n            background-color: transparent;\r\n            border: none;\r\n            border-radius: 10px;\r\n            font-weight: bolder;\r\n            font-family: inherit;\r\n            border: 1px solid var(--button-border-color);\r\n            cursor: pointer;\r\n            font-size: inherit;\r\n            color: inherit;\r\n\r\n            &:first-child {\r\n                margin-right: 0.8rem;\r\n            }\r\n\r\n            &:hover {\r\n                background-color: var(--control-background-color);\r\n            }\r\n        }\r\n    }\r\n\r\n    &__progress-bar {\r\n        width: 100%;\r\n        position: relative;\r\n        margin: 1rem 0 2rem 0;\r\n\r\n        &__count {\r\n            &--good,\r\n            &--bad {\r\n                position: absolute;\r\n                top: 0;\r\n                transform: translateY(80%);\r\n                font-size: 1.2rem;\r\n                color: var(--color-light-neutral-6);\r\n            }\r\n\r\n            &--good {\r\n                left: 0;\r\n            }\r\n\r\n            &--bad {\r\n                right: 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./vote-coin.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "localStorageService",
                        "type": "LocalStorageService"
                    },
                    {
                        "name": "overviewService",
                        "type": "OverviewService"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "localStorageService",
                        "type": "LocalStorageService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "overviewService",
                        "type": "OverviewService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"vote-coin\">\r\n    <div class=\"vote-coin__text\">\r\n        <p class=\"vote-coin__text__question\">\r\n            <strong *ngIf=\"!voted; else votedTitle\"\r\n                >How do you feel about {{ coinName }} today?</strong\r\n            >\r\n        </p>\r\n        <p class=\"vote-coin__text__briefing\">\r\n            <span *ngIf=\"!voted; else votedDesc\"\r\n                >Vote to see community results</span\r\n            >\r\n        </p>\r\n    </div>\r\n    <div class=\"vote-coin__button-group\" *ngIf=\"!voted; else bar\">\r\n        <button class=\"vote-coin__button-group__button\" (click)=\"vote(1)\">\r\n            👍 Good\r\n        </button>\r\n        <button class=\"vote-coin__button-group__button\" (click)=\"vote(-1)\">\r\n            👎 Bad\r\n        </button>\r\n    </div>\r\n</section>\r\n\r\n<ng-template #votedTitle>\r\n    <strong\r\n        >You voted - <span *ngIf=\"voted > 0; then goodVote; else badVote\"></span\r\n    ></strong>\r\n</ng-template>\r\n\r\n<ng-template #votedDesc>\r\n    <span\r\n        >Your vote is for 24 hours. In order to update how you feel about\r\n        {{ coinName }}, come back tomorrow!\r\n    </span>\r\n</ng-template>\r\n\r\n<ng-template #goodVote> 👍 Good </ng-template>\r\n<ng-template #badVote> 👎 Bad </ng-template>\r\n\r\n<ng-template #bar>\r\n    <div class=\"vote-coin__progress-bar\" *ngIf=\"votes$ | async as votes\">\r\n        <mat-progress-bar\r\n            [color]=\"primary\"\r\n            mode=\"determinate\"\r\n            [value]=\"votes.good\"\r\n        >\r\n        </mat-progress-bar>\r\n        <div class=\"vote-coin__progress-bar__count\">\r\n            <div class=\"vote-coin__progress-bar__count--good\">\r\n                {{ votes.good }}% Good 👍\r\n            </div>\r\n        </div>\r\n        <div class=\"vote-coin__progress-bar__count\">\r\n            <div class=\"vote-coin__progress-bar__count--bad\">\r\n                {{ votes.bad }}% Bad 👎\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AntModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "ScrollTopComponent"
                        },
                        {
                            "name": "SwitchThemeBtnComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CurrencyModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BuyAddButtonSectionComponent"
                        },
                        {
                            "name": "CoinDetailBarComponent"
                        },
                        {
                            "name": "CurrencyComponent"
                        },
                        {
                            "name": "CurrencyTabsComponent"
                        },
                        {
                            "name": "DetailsSectionComponent"
                        },
                        {
                            "name": "LinkSectionComponent"
                        },
                        {
                            "name": "LoadingBarComponent"
                        },
                        {
                            "name": "NameSectionComponent"
                        },
                        {
                            "name": "PriceSectionComponent"
                        },
                        {
                            "name": "StatsSectionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AntModule"
                        },
                        {
                            "name": "CurrencyRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CurrencyComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CurrencyRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GainersLosersModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GainersLosersComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "GainersLosersRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GainersLosersComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GainersLosersRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HistoricalDataModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HistoricalDataComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HistoricalDataRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "UiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HistoricalDataComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HistoricalDataRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CoinListComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "MinusPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MarketsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MarketsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AntModule"
                        },
                        {
                            "name": "MarketsRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "TableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MarketsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MarketsRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OverviewModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CoinChartComponent"
                        },
                        {
                            "name": "CoinConverterComponent"
                        },
                        {
                            "name": "CoinStatisticRowComponent"
                        },
                        {
                            "name": "CoinStatisticsComponent"
                        },
                        {
                            "name": "InfoParagraphComponent"
                        },
                        {
                            "name": "OverviewComponent"
                        },
                        {
                            "name": "TrendingComponent"
                        },
                        {
                            "name": "VoteCoinComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "OverviewRoutingModule"
                        },
                        {
                            "name": "TableModule"
                        },
                        {
                            "name": "UiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OverviewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OverviewRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CalendarComponent"
                        },
                        {
                            "name": "ChartDataTabsComponent"
                        },
                        {
                            "name": "ChartExportsButtonComponent"
                        },
                        {
                            "name": "ChartFullscreenButtonComponent"
                        },
                        {
                            "name": "ChartRangeSelectorComponent"
                        },
                        {
                            "name": "CoinChartLegendComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "PredefinedDatesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CalendarComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "coinListData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coinListData.ts",
                "type": "CoinList[]",
                "defaultValue": "[\r\n    {\r\n        coin_rank: 1,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n        name: 'Bitcoin',\r\n        price: 43495.85,\r\n        trend_24h: 3.29,\r\n        trend_7d: 22.72,\r\n        market_cap: 811361887199,\r\n        circulating_supply: 18713050,\r\n    },\r\n    {\r\n        coin_rank: 2,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\r\n        coin_id: 'ETH',\r\n        name: 'Ethereum',\r\n        price: 3437.15,\r\n        trend_24h: -7.62,\r\n        trend_7d: 14.59,\r\n        market_cap: 384949668693,\r\n        circulating_supply: 115925121,\r\n    },\r\n    {\r\n        coin_rank: 3,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png',\r\n        coin_id: 'BNB',\r\n        name: 'Binance Coin',\r\n        price: 521.61,\r\n        trend_24h: 3.87,\r\n        trend_7d: -21.33,\r\n        market_cap: 77614672368,\r\n        circulating_supply: 153432897,\r\n    },\r\n    {\r\n        coin_rank: 4,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png',\r\n        coin_id: 'ADA',\r\n        name: 'Cardano',\r\n        price: 2.09,\r\n        trend_24h: 5.06,\r\n        trend_7d: 18.44,\r\n        market_cap: 64251880752,\r\n        circulating_supply: 31948309441,\r\n    },\r\n    {\r\n        coin_rank: 5,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/74.png',\r\n        coin_id: 'DOGE',\r\n        name: 'Dogecoin',\r\n        price: 0.4826,\r\n        trend_24h: 1.15,\r\n        trend_7d: 3.83,\r\n        market_cap: 62334443585,\r\n        circulating_supply: 129652801779,\r\n    },\r\n    {\r\n        coin_rank: 6,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\r\n        coin_id: 'USDT',\r\n        name: 'Tether',\r\n        price: 1.0,\r\n        trend_24h: -0.18,\r\n        trend_7d: -0.19,\r\n        market_cap: 58276515642,\r\n        circulating_supply: 58174298199,\r\n    },\r\n    {\r\n        coin_rank: 7,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/52.png',\r\n        coin_id: 'XRP',\r\n        name: 'XRP',\r\n        price: 1.61,\r\n        trend_24h: -7.98,\r\n        trend_7d: -9.59,\r\n        market_cap: 54752888984,\r\n        circulating_supply: 35108326973,\r\n    },\r\n    {\r\n        coin_rank: 8,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png',\r\n        coin_id: 'DOT',\r\n        name: 'Polkadot',\r\n        price: 39.78,\r\n        trend_24h: 4.99,\r\n        trend_7d: 5.95,\r\n        market_cap: 36099397958,\r\n        circulating_supply: 938838911,\r\n    },\r\n    {\r\n        coin_rank: 9,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/8916.png',\r\n        coin_id: 'ICP',\r\n        name: 'Internet Computer',\r\n        price: 178.63,\r\n        trend_24h: -7.67,\r\n        trend_7d: 51.14,\r\n        market_cap: 21323515710,\r\n        circulating_supply: 123949678,\r\n    },\r\n    {\r\n        coin_rank: 10,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1831.png',\r\n        coin_id: 'BHC',\r\n        name: 'Bitcoin Cash',\r\n        price: 1114.26,\r\n        trend_24h: -7.22,\r\n        trend_7d: 23.43,\r\n        market_cap: 20153902224,\r\n        circulating_supply: 5229380689,\r\n    },\r\n    {\r\n        coin_rank: 11,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2.png',\r\n        coin_id: 'LTC',\r\n        name: 'Litecoin',\r\n        price: 305.05,\r\n        trend_24h: 13.88,\r\n        trend_7d: -17.36,\r\n        market_cap: 19719510173,\r\n        circulating_supply: 66752415,\r\n    },\r\n    {\r\n        coin_rank: 12,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/7083.png',\r\n        coin_id: 'UNI',\r\n        name: 'Uniswap',\r\n        price: 35.56,\r\n        trend_24h: -8.77,\r\n        trend_7d: 4.68,\r\n        market_cap: 19077916997,\r\n        circulating_supply: 559616278,\r\n    },\r\n    {\r\n        coin_rank: 13,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1975.png',\r\n        coin_id: 'LINK',\r\n        name: 'Chainlink',\r\n        price: 41.14,\r\n        trend_24h: 13.34,\r\n        trend_7d: 12.88,\r\n        market_cap: 16691887010,\r\n        circulating_supply: 426509554,\r\n    },\r\n    {\r\n        coin_rank: 14,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/512.png',\r\n        coin_id: 'XLM',\r\n        name: 'Stellar',\r\n        price: 0.6591,\r\n        trend_24h: 1.05,\r\n        trend_7d: 8.07,\r\n        market_cap: 15153643945,\r\n        circulating_supply: 23136887514,\r\n    },\r\n    {\r\n        coin_rank: 15,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\r\n        coin_id: 'USDC',\r\n        name: 'USD Coin',\r\n        price: 1.0,\r\n        trend_24h: 0.11,\r\n        trend_7d: -0.11,\r\n        market_cap: 14389382655,\r\n        circulating_supply: 14380157844,\r\n    },\r\n    {\r\n        coin_rank: 16,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/5426.png',\r\n        coin_id: 'SOL',\r\n        name: 'Solana',\r\n        price: 55.96,\r\n        trend_24h: -19.08,\r\n        trend_7d: -33.15,\r\n        market_cap: 14312058889,\r\n        circulating_supply: 272637428,\r\n    },\r\n    {\r\n        coin_rank: 17,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png',\r\n        coin_id: 'MATIC',\r\n        name: 'Polygon',\r\n        price: 2.47,\r\n        trend_24h: 50.14,\r\n        trend_7d: 163.3,\r\n        market_cap: 12683266216,\r\n        circulating_supply: 6145590937,\r\n    },\r\n    {\r\n        coin_rank: 18,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3077.png',\r\n        coin_id: 'VET',\r\n        name: 'VeChain',\r\n        price: 0.1664,\r\n        trend_24h: 8.52,\r\n        trend_7d: -20.05,\r\n        market_cap: 10347177063,\r\n        circulating_supply: 64315576989,\r\n    },\r\n    {\r\n        coin_rank: 19,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1321.png',\r\n        coin_id: 'ETC',\r\n        name: 'Ethereum Classic',\r\n        price: 88.78,\r\n        trend_24h: 1.83,\r\n        trend_7d: 18.87,\r\n        market_cap: 10203517789,\r\n        circulating_supply: 116313299,\r\n    },\r\n    {\r\n        coin_rank: 20,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2416.png',\r\n        coin_id: 'THETA',\r\n        name: 'THETA',\r\n        price: 9.77,\r\n        trend_24h: -0.79,\r\n        trend_7d: -9.3,\r\n        market_cap: 9658606819,\r\n        circulating_supply: 1000000000,\r\n    },\r\n    {\r\n        coin_rank: 1,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n        name: 'Bitcoin',\r\n        price: 43495.85,\r\n        trend_24h: 3.29,\r\n        trend_7d: 22.72,\r\n        market_cap: 811361887199,\r\n        circulating_supply: 18713050,\r\n    },\r\n    {\r\n        coin_rank: 2,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\r\n        coin_id: 'ETH',\r\n        name: 'Ethereum',\r\n        price: 3437.15,\r\n        trend_24h: -7.62,\r\n        trend_7d: 14.59,\r\n        market_cap: 384949668693,\r\n        circulating_supply: 115925121,\r\n    },\r\n    {\r\n        coin_rank: 3,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png',\r\n        coin_id: 'BNB',\r\n        name: 'Binance Coin',\r\n        price: 521.61,\r\n        trend_24h: 3.87,\r\n        trend_7d: -21.33,\r\n        market_cap: 77614672368,\r\n        circulating_supply: 153432897,\r\n    },\r\n    {\r\n        coin_rank: 4,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png',\r\n        coin_id: 'ADA',\r\n        name: 'Cardano',\r\n        price: 2.09,\r\n        trend_24h: 5.06,\r\n        trend_7d: 18.44,\r\n        market_cap: 64251880752,\r\n        circulating_supply: 31948309441,\r\n    },\r\n    {\r\n        coin_rank: 5,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/74.png',\r\n        coin_id: 'DOGE',\r\n        name: 'Dogecoin',\r\n        price: 0.4826,\r\n        trend_24h: 1.15,\r\n        trend_7d: 3.83,\r\n        market_cap: 62334443585,\r\n        circulating_supply: 129652801779,\r\n    },\r\n    {\r\n        coin_rank: 6,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\r\n        coin_id: 'USDT',\r\n        name: 'Tether',\r\n        price: 1.0,\r\n        trend_24h: -0.18,\r\n        trend_7d: -0.19,\r\n        market_cap: 58276515642,\r\n        circulating_supply: 58174298199,\r\n    },\r\n    {\r\n        coin_rank: 7,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/52.png',\r\n        coin_id: 'XRP',\r\n        name: 'XRP',\r\n        price: 1.61,\r\n        trend_24h: -7.98,\r\n        trend_7d: -9.59,\r\n        market_cap: 54752888984,\r\n        circulating_supply: 35108326973,\r\n    },\r\n    {\r\n        coin_rank: 8,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png',\r\n        coin_id: 'DOT',\r\n        name: 'Polkadot',\r\n        price: 39.78,\r\n        trend_24h: 4.99,\r\n        trend_7d: 5.95,\r\n        market_cap: 36099397958,\r\n        circulating_supply: 938838911,\r\n    },\r\n    {\r\n        coin_rank: 9,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/8916.png',\r\n        coin_id: 'ICP',\r\n        name: 'Internet Computer',\r\n        price: 178.63,\r\n        trend_24h: -7.67,\r\n        trend_7d: 51.14,\r\n        market_cap: 21323515710,\r\n        circulating_supply: 123949678,\r\n    },\r\n    {\r\n        coin_rank: 10,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1831.png',\r\n        coin_id: 'BHC',\r\n        name: 'Bitcoin Cash',\r\n        price: 1114.26,\r\n        trend_24h: -7.22,\r\n        trend_7d: 23.43,\r\n        market_cap: 20153902224,\r\n        circulating_supply: 5229380689,\r\n    },\r\n    {\r\n        coin_rank: 11,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2.png',\r\n        coin_id: 'LTC',\r\n        name: 'Litecoin',\r\n        price: 305.05,\r\n        trend_24h: 13.88,\r\n        trend_7d: -17.36,\r\n        market_cap: 19719510173,\r\n        circulating_supply: 66752415,\r\n    },\r\n    {\r\n        coin_rank: 12,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/7083.png',\r\n        coin_id: 'UNI',\r\n        name: 'Uniswap',\r\n        price: 35.56,\r\n        trend_24h: -8.77,\r\n        trend_7d: 4.68,\r\n        market_cap: 19077916997,\r\n        circulating_supply: 559616278,\r\n    },\r\n    {\r\n        coin_rank: 13,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1975.png',\r\n        coin_id: 'LINK',\r\n        name: 'Chainlink',\r\n        price: 41.14,\r\n        trend_24h: 13.34,\r\n        trend_7d: 12.88,\r\n        market_cap: 16691887010,\r\n        circulating_supply: 426509554,\r\n    },\r\n    {\r\n        coin_rank: 14,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/512.png',\r\n        coin_id: 'XLM',\r\n        name: 'Stellar',\r\n        price: 0.6591,\r\n        trend_24h: 1.05,\r\n        trend_7d: 8.07,\r\n        market_cap: 15153643945,\r\n        circulating_supply: 23136887514,\r\n    },\r\n    {\r\n        coin_rank: 15,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\r\n        coin_id: 'USDC',\r\n        name: 'USD Coin',\r\n        price: 1.0,\r\n        trend_24h: 0.11,\r\n        trend_7d: -0.11,\r\n        market_cap: 14389382655,\r\n        circulating_supply: 14380157844,\r\n    },\r\n    {\r\n        coin_rank: 16,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/5426.png',\r\n        coin_id: 'SOL',\r\n        name: 'Solana',\r\n        price: 55.96,\r\n        trend_24h: -19.08,\r\n        trend_7d: -33.15,\r\n        market_cap: 14312058889,\r\n        circulating_supply: 272637428,\r\n    },\r\n    {\r\n        coin_rank: 17,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png',\r\n        coin_id: 'MATIC',\r\n        name: 'Polygon',\r\n        price: 2.47,\r\n        trend_24h: 50.14,\r\n        trend_7d: 163.3,\r\n        market_cap: 12683266216,\r\n        circulating_supply: 6145590937,\r\n    },\r\n    {\r\n        coin_rank: 18,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3077.png',\r\n        coin_id: 'VET',\r\n        name: 'VeChain',\r\n        price: 0.1664,\r\n        trend_24h: 8.52,\r\n        trend_7d: -20.05,\r\n        market_cap: 10347177063,\r\n        circulating_supply: 64315576989,\r\n    },\r\n    {\r\n        coin_rank: 19,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1321.png',\r\n        coin_id: 'ETC',\r\n        name: 'Ethereum Classic',\r\n        price: 88.78,\r\n        trend_24h: 1.83,\r\n        trend_7d: 18.87,\r\n        market_cap: 10203517789,\r\n        circulating_supply: 116313299,\r\n    },\r\n    {\r\n        coin_rank: 20,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2416.png',\r\n        coin_id: 'THETA',\r\n        name: 'THETA',\r\n        price: 9.77,\r\n        trend_24h: -0.79,\r\n        trend_7d: -9.3,\r\n        market_cap: 9658606819,\r\n        circulating_supply: 1000000000,\r\n    },\r\n    {\r\n        coin_rank: 1,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n        name: 'Bitcoin',\r\n        price: 43495.85,\r\n        trend_24h: 3.29,\r\n        trend_7d: 22.72,\r\n        market_cap: 811361887199,\r\n        circulating_supply: 18713050,\r\n    },\r\n    {\r\n        coin_rank: 2,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\r\n        coin_id: 'ETH',\r\n        name: 'Ethereum',\r\n        price: 3437.15,\r\n        trend_24h: -7.62,\r\n        trend_7d: 14.59,\r\n        market_cap: 384949668693,\r\n        circulating_supply: 115925121,\r\n    },\r\n    {\r\n        coin_rank: 3,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png',\r\n        coin_id: 'BNB',\r\n        name: 'Binance Coin',\r\n        price: 521.61,\r\n        trend_24h: 3.87,\r\n        trend_7d: -21.33,\r\n        market_cap: 77614672368,\r\n        circulating_supply: 153432897,\r\n    },\r\n    {\r\n        coin_rank: 4,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png',\r\n        coin_id: 'ADA',\r\n        name: 'Cardano',\r\n        price: 2.09,\r\n        trend_24h: 5.06,\r\n        trend_7d: 18.44,\r\n        market_cap: 64251880752,\r\n        circulating_supply: 31948309441,\r\n    },\r\n    {\r\n        coin_rank: 5,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/74.png',\r\n        coin_id: 'DOGE',\r\n        name: 'Dogecoin',\r\n        price: 0.4826,\r\n        trend_24h: 1.15,\r\n        trend_7d: 3.83,\r\n        market_cap: 62334443585,\r\n        circulating_supply: 129652801779,\r\n    },\r\n    {\r\n        coin_rank: 6,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\r\n        coin_id: 'USDT',\r\n        name: 'Tether',\r\n        price: 1.0,\r\n        trend_24h: -0.18,\r\n        trend_7d: -0.19,\r\n        market_cap: 58276515642,\r\n        circulating_supply: 58174298199,\r\n    },\r\n    {\r\n        coin_rank: 7,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/52.png',\r\n        coin_id: 'XRP',\r\n        name: 'XRP',\r\n        price: 1.61,\r\n        trend_24h: -7.98,\r\n        trend_7d: -9.59,\r\n        market_cap: 54752888984,\r\n        circulating_supply: 35108326973,\r\n    },\r\n    {\r\n        coin_rank: 8,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png',\r\n        coin_id: 'DOT',\r\n        name: 'Polkadot',\r\n        price: 39.78,\r\n        trend_24h: 4.99,\r\n        trend_7d: 5.95,\r\n        market_cap: 36099397958,\r\n        circulating_supply: 938838911,\r\n    },\r\n    {\r\n        coin_rank: 9,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/8916.png',\r\n        coin_id: 'ICP',\r\n        name: 'Internet Computer',\r\n        price: 178.63,\r\n        trend_24h: -7.67,\r\n        trend_7d: 51.14,\r\n        market_cap: 21323515710,\r\n        circulating_supply: 123949678,\r\n    },\r\n    {\r\n        coin_rank: 10,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1831.png',\r\n        coin_id: 'BHC',\r\n        name: 'Bitcoin Cash',\r\n        price: 1114.26,\r\n        trend_24h: -7.22,\r\n        trend_7d: 23.43,\r\n        market_cap: 20153902224,\r\n        circulating_supply: 5229380689,\r\n    },\r\n    {\r\n        coin_rank: 11,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2.png',\r\n        coin_id: 'LTC',\r\n        name: 'Litecoin',\r\n        price: 305.05,\r\n        trend_24h: 13.88,\r\n        trend_7d: -17.36,\r\n        market_cap: 19719510173,\r\n        circulating_supply: 66752415,\r\n    },\r\n    {\r\n        coin_rank: 12,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/7083.png',\r\n        coin_id: 'UNI',\r\n        name: 'Uniswap',\r\n        price: 35.56,\r\n        trend_24h: -8.77,\r\n        trend_7d: 4.68,\r\n        market_cap: 19077916997,\r\n        circulating_supply: 559616278,\r\n    },\r\n    {\r\n        coin_rank: 13,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1975.png',\r\n        coin_id: 'LINK',\r\n        name: 'Chainlink',\r\n        price: 41.14,\r\n        trend_24h: 13.34,\r\n        trend_7d: 12.88,\r\n        market_cap: 16691887010,\r\n        circulating_supply: 426509554,\r\n    },\r\n    {\r\n        coin_rank: 14,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/512.png',\r\n        coin_id: 'XLM',\r\n        name: 'Stellar',\r\n        price: 0.6591,\r\n        trend_24h: 1.05,\r\n        trend_7d: 8.07,\r\n        market_cap: 15153643945,\r\n        circulating_supply: 23136887514,\r\n    },\r\n    {\r\n        coin_rank: 15,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\r\n        coin_id: 'USDC',\r\n        name: 'USD Coin',\r\n        price: 1.0,\r\n        trend_24h: 0.11,\r\n        trend_7d: -0.11,\r\n        market_cap: 14389382655,\r\n        circulating_supply: 14380157844,\r\n    },\r\n    {\r\n        coin_rank: 16,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/5426.png',\r\n        coin_id: 'SOL',\r\n        name: 'Solana',\r\n        price: 55.96,\r\n        trend_24h: -19.08,\r\n        trend_7d: -33.15,\r\n        market_cap: 14312058889,\r\n        circulating_supply: 272637428,\r\n    },\r\n    {\r\n        coin_rank: 17,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png',\r\n        coin_id: 'MATIC',\r\n        name: 'Polygon',\r\n        price: 2.47,\r\n        trend_24h: 50.14,\r\n        trend_7d: 163.3,\r\n        market_cap: 12683266216,\r\n        circulating_supply: 6145590937,\r\n    },\r\n    {\r\n        coin_rank: 18,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3077.png',\r\n        coin_id: 'VET',\r\n        name: 'VeChain',\r\n        price: 0.1664,\r\n        trend_24h: 8.52,\r\n        trend_7d: -20.05,\r\n        market_cap: 10347177063,\r\n        circulating_supply: 64315576989,\r\n    },\r\n    {\r\n        coin_rank: 19,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1321.png',\r\n        coin_id: 'ETC',\r\n        name: 'Ethereum Classic',\r\n        price: 88.78,\r\n        trend_24h: 1.83,\r\n        trend_7d: 18.87,\r\n        market_cap: 10203517789,\r\n        circulating_supply: 116313299,\r\n    },\r\n    {\r\n        coin_rank: 20,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2416.png',\r\n        coin_id: 'THETA',\r\n        name: 'THETA',\r\n        price: 9.77,\r\n        trend_24h: -0.79,\r\n        trend_7d: -9.3,\r\n        market_cap: 9658606819,\r\n        circulating_supply: 1000000000,\r\n    },\r\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n}"
            },
            {
                "name": "fakeCoin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "Coin",
                "defaultValue": "{\r\n    coin_id: 'btc',\r\n    price: 56201.17,\r\n    coin_name: 'Bitcoin',\r\n    market_cap: { value: 1028360948721, change_percentage: 3.27 },\r\n    fully_diluted_market_cap: {\r\n        value: 1156036894571,\r\n        change_percentage: -3.54,\r\n    },\r\n    volume: { value: 1028360948, change_percentage: 0.88 },\r\n    circulating_supply: {\r\n        circulating_supply: 18666012,\r\n        max_supply: 21000000,\r\n        total_supply: 18666012,\r\n    },\r\n    price_high_low: { high: 58429.22, low: 55889.15, interval: '24h' },\r\n    icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n}"
            },
            {
                "name": "fakeCoin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                "type": "Coin",
                "defaultValue": "new Coin({\r\n    name: 'Bitcoin',\r\n    shortName: 'BTC',\r\n    rank: 1,\r\n    watchlists: 834727,\r\n})"
            },
            {
                "name": "fakeCoinPrice",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                "type": "CoinPrices",
                "defaultValue": "{\r\n    name: 'Bitcoin',\r\n    shortName: 'BTC',\r\n    price: 59959.44,\r\n    pricePercentage: 1.24,\r\n    priceStatus: 2.16,\r\n    priceSideValue: 33.49,\r\n    priceSideName: 'ETH',\r\n    priceLow: 50870.59,\r\n    priceHigh: 55210.15,\r\n}"
            },
            {
                "name": "fakeCoinStatistics",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "OverviewPriceStatistics",
                "defaultValue": "{\r\n    price: 57695.06,\r\n    price_change_24h: 653.45,\r\n    price_low_high_24h: { low: 57695.06, high: 58937.05 },\r\n    trading_volume_24h: 48568674778.31,\r\n    market_dominance: 54.95,\r\n    market_cap: 1093359164333.68,\r\n    market_rank: 1,\r\n    fully_diluted_market_cap: 1229276128246.84,\r\n    price_low_high_yesterday: { low: 55879.08, high: 58338.74 },\r\n    price_open_close_yesterday: { open: 56099.91, close: 58323.95 },\r\n    price_change_percentage_yesterday: 3.96,\r\n    price_low_high_7d: { low: 55604.02, high: 60110.27 },\r\n    price_low_high_30d: { low: 50856.02, high: 61683.27 },\r\n    price_low_high_90d: { low: 28953.02, high: 61683.27 },\r\n    price_low_high_52w: { low: 6555.02, high: 61683.27 },\r\n    price_low_high_all: {\r\n        high: { date_time: new Date().toISOString(), high_price: 61683.86 },\r\n        low: { date_time: new Date().toISOString(), low_price: 65.53 },\r\n    },\r\n}"
            },
            {
                "name": "fakeCoinStatistics",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                "type": "CoinStatistics",
                "defaultValue": "{\r\n    marketCapPrice: 1028360948721,\r\n    marketCapPercentage: 3.27,\r\n    fullyMarketCapPrice: 1156036894571,\r\n    fullyMarketCapPercentage: 3.28,\r\n    volumePrice: 1028360948,\r\n    volumePercentage: 8.27,\r\n    volumeMarketCapNumber: 0.04989,\r\n    circulatingSupplyNumber: 18666012,\r\n    circulatingSupplyPercentage: 89,\r\n    maxSupplyNumber: 21000000,\r\n    totalSupplyNumber: 18666012,\r\n}"
            },
            {
                "name": "fakeCoinVotes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "VoteCoinData",
                "defaultValue": "{\r\n    coinId: 1,\r\n    good: 82,\r\n    bad: 18,\r\n}"
            },
            {
                "name": "fakeTrendingCoinList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "Coin[]",
                "defaultValue": "[\r\n    new Coin({\r\n        coin_name: 'Bitcoin',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'SHD CASH',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/8740.png',\r\n        coin_id: 'SHDC',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'Alaya',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7814.png',\r\n        coin_id: 'ATP',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'Bitcashpay',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7867.png',\r\n        coin_id: 'BCP',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'RAMP',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7463.png',\r\n        coin_id: 'RAMP',\r\n    }),\r\n]"
            },
            {
                "name": "getGreeting",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market-e2e/src/support/app.po.ts",
                "type": "",
                "defaultValue": "() => cy.get('h1')"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/app/shared/material.module.ts",
                "type": "any[]",
                "defaultValue": "[\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    LayoutModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatProgressBarModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n]"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/coin-market/src/app/shared/ng-zorro-antd.module.ts",
                "type": "any[]",
                "defaultValue": "[NzButtonModule, NzPopoverModule]"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ui/src/lib/line-chart/material.module.ts",
                "type": "any[]",
                "defaultValue": "[\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatNativeDateModule,\r\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "apps/coin-market/src/assets/data/coinListData.ts": [
                {
                    "name": "coinListData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coinListData.ts",
                    "type": "CoinList[]",
                    "defaultValue": "[\r\n    {\r\n        coin_rank: 1,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n        name: 'Bitcoin',\r\n        price: 43495.85,\r\n        trend_24h: 3.29,\r\n        trend_7d: 22.72,\r\n        market_cap: 811361887199,\r\n        circulating_supply: 18713050,\r\n    },\r\n    {\r\n        coin_rank: 2,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\r\n        coin_id: 'ETH',\r\n        name: 'Ethereum',\r\n        price: 3437.15,\r\n        trend_24h: -7.62,\r\n        trend_7d: 14.59,\r\n        market_cap: 384949668693,\r\n        circulating_supply: 115925121,\r\n    },\r\n    {\r\n        coin_rank: 3,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png',\r\n        coin_id: 'BNB',\r\n        name: 'Binance Coin',\r\n        price: 521.61,\r\n        trend_24h: 3.87,\r\n        trend_7d: -21.33,\r\n        market_cap: 77614672368,\r\n        circulating_supply: 153432897,\r\n    },\r\n    {\r\n        coin_rank: 4,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png',\r\n        coin_id: 'ADA',\r\n        name: 'Cardano',\r\n        price: 2.09,\r\n        trend_24h: 5.06,\r\n        trend_7d: 18.44,\r\n        market_cap: 64251880752,\r\n        circulating_supply: 31948309441,\r\n    },\r\n    {\r\n        coin_rank: 5,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/74.png',\r\n        coin_id: 'DOGE',\r\n        name: 'Dogecoin',\r\n        price: 0.4826,\r\n        trend_24h: 1.15,\r\n        trend_7d: 3.83,\r\n        market_cap: 62334443585,\r\n        circulating_supply: 129652801779,\r\n    },\r\n    {\r\n        coin_rank: 6,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\r\n        coin_id: 'USDT',\r\n        name: 'Tether',\r\n        price: 1.0,\r\n        trend_24h: -0.18,\r\n        trend_7d: -0.19,\r\n        market_cap: 58276515642,\r\n        circulating_supply: 58174298199,\r\n    },\r\n    {\r\n        coin_rank: 7,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/52.png',\r\n        coin_id: 'XRP',\r\n        name: 'XRP',\r\n        price: 1.61,\r\n        trend_24h: -7.98,\r\n        trend_7d: -9.59,\r\n        market_cap: 54752888984,\r\n        circulating_supply: 35108326973,\r\n    },\r\n    {\r\n        coin_rank: 8,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png',\r\n        coin_id: 'DOT',\r\n        name: 'Polkadot',\r\n        price: 39.78,\r\n        trend_24h: 4.99,\r\n        trend_7d: 5.95,\r\n        market_cap: 36099397958,\r\n        circulating_supply: 938838911,\r\n    },\r\n    {\r\n        coin_rank: 9,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/8916.png',\r\n        coin_id: 'ICP',\r\n        name: 'Internet Computer',\r\n        price: 178.63,\r\n        trend_24h: -7.67,\r\n        trend_7d: 51.14,\r\n        market_cap: 21323515710,\r\n        circulating_supply: 123949678,\r\n    },\r\n    {\r\n        coin_rank: 10,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1831.png',\r\n        coin_id: 'BHC',\r\n        name: 'Bitcoin Cash',\r\n        price: 1114.26,\r\n        trend_24h: -7.22,\r\n        trend_7d: 23.43,\r\n        market_cap: 20153902224,\r\n        circulating_supply: 5229380689,\r\n    },\r\n    {\r\n        coin_rank: 11,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2.png',\r\n        coin_id: 'LTC',\r\n        name: 'Litecoin',\r\n        price: 305.05,\r\n        trend_24h: 13.88,\r\n        trend_7d: -17.36,\r\n        market_cap: 19719510173,\r\n        circulating_supply: 66752415,\r\n    },\r\n    {\r\n        coin_rank: 12,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/7083.png',\r\n        coin_id: 'UNI',\r\n        name: 'Uniswap',\r\n        price: 35.56,\r\n        trend_24h: -8.77,\r\n        trend_7d: 4.68,\r\n        market_cap: 19077916997,\r\n        circulating_supply: 559616278,\r\n    },\r\n    {\r\n        coin_rank: 13,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1975.png',\r\n        coin_id: 'LINK',\r\n        name: 'Chainlink',\r\n        price: 41.14,\r\n        trend_24h: 13.34,\r\n        trend_7d: 12.88,\r\n        market_cap: 16691887010,\r\n        circulating_supply: 426509554,\r\n    },\r\n    {\r\n        coin_rank: 14,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/512.png',\r\n        coin_id: 'XLM',\r\n        name: 'Stellar',\r\n        price: 0.6591,\r\n        trend_24h: 1.05,\r\n        trend_7d: 8.07,\r\n        market_cap: 15153643945,\r\n        circulating_supply: 23136887514,\r\n    },\r\n    {\r\n        coin_rank: 15,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\r\n        coin_id: 'USDC',\r\n        name: 'USD Coin',\r\n        price: 1.0,\r\n        trend_24h: 0.11,\r\n        trend_7d: -0.11,\r\n        market_cap: 14389382655,\r\n        circulating_supply: 14380157844,\r\n    },\r\n    {\r\n        coin_rank: 16,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/5426.png',\r\n        coin_id: 'SOL',\r\n        name: 'Solana',\r\n        price: 55.96,\r\n        trend_24h: -19.08,\r\n        trend_7d: -33.15,\r\n        market_cap: 14312058889,\r\n        circulating_supply: 272637428,\r\n    },\r\n    {\r\n        coin_rank: 17,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png',\r\n        coin_id: 'MATIC',\r\n        name: 'Polygon',\r\n        price: 2.47,\r\n        trend_24h: 50.14,\r\n        trend_7d: 163.3,\r\n        market_cap: 12683266216,\r\n        circulating_supply: 6145590937,\r\n    },\r\n    {\r\n        coin_rank: 18,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3077.png',\r\n        coin_id: 'VET',\r\n        name: 'VeChain',\r\n        price: 0.1664,\r\n        trend_24h: 8.52,\r\n        trend_7d: -20.05,\r\n        market_cap: 10347177063,\r\n        circulating_supply: 64315576989,\r\n    },\r\n    {\r\n        coin_rank: 19,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1321.png',\r\n        coin_id: 'ETC',\r\n        name: 'Ethereum Classic',\r\n        price: 88.78,\r\n        trend_24h: 1.83,\r\n        trend_7d: 18.87,\r\n        market_cap: 10203517789,\r\n        circulating_supply: 116313299,\r\n    },\r\n    {\r\n        coin_rank: 20,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2416.png',\r\n        coin_id: 'THETA',\r\n        name: 'THETA',\r\n        price: 9.77,\r\n        trend_24h: -0.79,\r\n        trend_7d: -9.3,\r\n        market_cap: 9658606819,\r\n        circulating_supply: 1000000000,\r\n    },\r\n    {\r\n        coin_rank: 1,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n        name: 'Bitcoin',\r\n        price: 43495.85,\r\n        trend_24h: 3.29,\r\n        trend_7d: 22.72,\r\n        market_cap: 811361887199,\r\n        circulating_supply: 18713050,\r\n    },\r\n    {\r\n        coin_rank: 2,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\r\n        coin_id: 'ETH',\r\n        name: 'Ethereum',\r\n        price: 3437.15,\r\n        trend_24h: -7.62,\r\n        trend_7d: 14.59,\r\n        market_cap: 384949668693,\r\n        circulating_supply: 115925121,\r\n    },\r\n    {\r\n        coin_rank: 3,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png',\r\n        coin_id: 'BNB',\r\n        name: 'Binance Coin',\r\n        price: 521.61,\r\n        trend_24h: 3.87,\r\n        trend_7d: -21.33,\r\n        market_cap: 77614672368,\r\n        circulating_supply: 153432897,\r\n    },\r\n    {\r\n        coin_rank: 4,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png',\r\n        coin_id: 'ADA',\r\n        name: 'Cardano',\r\n        price: 2.09,\r\n        trend_24h: 5.06,\r\n        trend_7d: 18.44,\r\n        market_cap: 64251880752,\r\n        circulating_supply: 31948309441,\r\n    },\r\n    {\r\n        coin_rank: 5,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/74.png',\r\n        coin_id: 'DOGE',\r\n        name: 'Dogecoin',\r\n        price: 0.4826,\r\n        trend_24h: 1.15,\r\n        trend_7d: 3.83,\r\n        market_cap: 62334443585,\r\n        circulating_supply: 129652801779,\r\n    },\r\n    {\r\n        coin_rank: 6,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\r\n        coin_id: 'USDT',\r\n        name: 'Tether',\r\n        price: 1.0,\r\n        trend_24h: -0.18,\r\n        trend_7d: -0.19,\r\n        market_cap: 58276515642,\r\n        circulating_supply: 58174298199,\r\n    },\r\n    {\r\n        coin_rank: 7,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/52.png',\r\n        coin_id: 'XRP',\r\n        name: 'XRP',\r\n        price: 1.61,\r\n        trend_24h: -7.98,\r\n        trend_7d: -9.59,\r\n        market_cap: 54752888984,\r\n        circulating_supply: 35108326973,\r\n    },\r\n    {\r\n        coin_rank: 8,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png',\r\n        coin_id: 'DOT',\r\n        name: 'Polkadot',\r\n        price: 39.78,\r\n        trend_24h: 4.99,\r\n        trend_7d: 5.95,\r\n        market_cap: 36099397958,\r\n        circulating_supply: 938838911,\r\n    },\r\n    {\r\n        coin_rank: 9,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/8916.png',\r\n        coin_id: 'ICP',\r\n        name: 'Internet Computer',\r\n        price: 178.63,\r\n        trend_24h: -7.67,\r\n        trend_7d: 51.14,\r\n        market_cap: 21323515710,\r\n        circulating_supply: 123949678,\r\n    },\r\n    {\r\n        coin_rank: 10,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1831.png',\r\n        coin_id: 'BHC',\r\n        name: 'Bitcoin Cash',\r\n        price: 1114.26,\r\n        trend_24h: -7.22,\r\n        trend_7d: 23.43,\r\n        market_cap: 20153902224,\r\n        circulating_supply: 5229380689,\r\n    },\r\n    {\r\n        coin_rank: 11,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2.png',\r\n        coin_id: 'LTC',\r\n        name: 'Litecoin',\r\n        price: 305.05,\r\n        trend_24h: 13.88,\r\n        trend_7d: -17.36,\r\n        market_cap: 19719510173,\r\n        circulating_supply: 66752415,\r\n    },\r\n    {\r\n        coin_rank: 12,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/7083.png',\r\n        coin_id: 'UNI',\r\n        name: 'Uniswap',\r\n        price: 35.56,\r\n        trend_24h: -8.77,\r\n        trend_7d: 4.68,\r\n        market_cap: 19077916997,\r\n        circulating_supply: 559616278,\r\n    },\r\n    {\r\n        coin_rank: 13,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1975.png',\r\n        coin_id: 'LINK',\r\n        name: 'Chainlink',\r\n        price: 41.14,\r\n        trend_24h: 13.34,\r\n        trend_7d: 12.88,\r\n        market_cap: 16691887010,\r\n        circulating_supply: 426509554,\r\n    },\r\n    {\r\n        coin_rank: 14,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/512.png',\r\n        coin_id: 'XLM',\r\n        name: 'Stellar',\r\n        price: 0.6591,\r\n        trend_24h: 1.05,\r\n        trend_7d: 8.07,\r\n        market_cap: 15153643945,\r\n        circulating_supply: 23136887514,\r\n    },\r\n    {\r\n        coin_rank: 15,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\r\n        coin_id: 'USDC',\r\n        name: 'USD Coin',\r\n        price: 1.0,\r\n        trend_24h: 0.11,\r\n        trend_7d: -0.11,\r\n        market_cap: 14389382655,\r\n        circulating_supply: 14380157844,\r\n    },\r\n    {\r\n        coin_rank: 16,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/5426.png',\r\n        coin_id: 'SOL',\r\n        name: 'Solana',\r\n        price: 55.96,\r\n        trend_24h: -19.08,\r\n        trend_7d: -33.15,\r\n        market_cap: 14312058889,\r\n        circulating_supply: 272637428,\r\n    },\r\n    {\r\n        coin_rank: 17,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png',\r\n        coin_id: 'MATIC',\r\n        name: 'Polygon',\r\n        price: 2.47,\r\n        trend_24h: 50.14,\r\n        trend_7d: 163.3,\r\n        market_cap: 12683266216,\r\n        circulating_supply: 6145590937,\r\n    },\r\n    {\r\n        coin_rank: 18,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3077.png',\r\n        coin_id: 'VET',\r\n        name: 'VeChain',\r\n        price: 0.1664,\r\n        trend_24h: 8.52,\r\n        trend_7d: -20.05,\r\n        market_cap: 10347177063,\r\n        circulating_supply: 64315576989,\r\n    },\r\n    {\r\n        coin_rank: 19,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1321.png',\r\n        coin_id: 'ETC',\r\n        name: 'Ethereum Classic',\r\n        price: 88.78,\r\n        trend_24h: 1.83,\r\n        trend_7d: 18.87,\r\n        market_cap: 10203517789,\r\n        circulating_supply: 116313299,\r\n    },\r\n    {\r\n        coin_rank: 20,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2416.png',\r\n        coin_id: 'THETA',\r\n        name: 'THETA',\r\n        price: 9.77,\r\n        trend_24h: -0.79,\r\n        trend_7d: -9.3,\r\n        market_cap: 9658606819,\r\n        circulating_supply: 1000000000,\r\n    },\r\n    {\r\n        coin_rank: 1,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n        name: 'Bitcoin',\r\n        price: 43495.85,\r\n        trend_24h: 3.29,\r\n        trend_7d: 22.72,\r\n        market_cap: 811361887199,\r\n        circulating_supply: 18713050,\r\n    },\r\n    {\r\n        coin_rank: 2,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\r\n        coin_id: 'ETH',\r\n        name: 'Ethereum',\r\n        price: 3437.15,\r\n        trend_24h: -7.62,\r\n        trend_7d: 14.59,\r\n        market_cap: 384949668693,\r\n        circulating_supply: 115925121,\r\n    },\r\n    {\r\n        coin_rank: 3,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png',\r\n        coin_id: 'BNB',\r\n        name: 'Binance Coin',\r\n        price: 521.61,\r\n        trend_24h: 3.87,\r\n        trend_7d: -21.33,\r\n        market_cap: 77614672368,\r\n        circulating_supply: 153432897,\r\n    },\r\n    {\r\n        coin_rank: 4,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png',\r\n        coin_id: 'ADA',\r\n        name: 'Cardano',\r\n        price: 2.09,\r\n        trend_24h: 5.06,\r\n        trend_7d: 18.44,\r\n        market_cap: 64251880752,\r\n        circulating_supply: 31948309441,\r\n    },\r\n    {\r\n        coin_rank: 5,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/74.png',\r\n        coin_id: 'DOGE',\r\n        name: 'Dogecoin',\r\n        price: 0.4826,\r\n        trend_24h: 1.15,\r\n        trend_7d: 3.83,\r\n        market_cap: 62334443585,\r\n        circulating_supply: 129652801779,\r\n    },\r\n    {\r\n        coin_rank: 6,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\r\n        coin_id: 'USDT',\r\n        name: 'Tether',\r\n        price: 1.0,\r\n        trend_24h: -0.18,\r\n        trend_7d: -0.19,\r\n        market_cap: 58276515642,\r\n        circulating_supply: 58174298199,\r\n    },\r\n    {\r\n        coin_rank: 7,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/52.png',\r\n        coin_id: 'XRP',\r\n        name: 'XRP',\r\n        price: 1.61,\r\n        trend_24h: -7.98,\r\n        trend_7d: -9.59,\r\n        market_cap: 54752888984,\r\n        circulating_supply: 35108326973,\r\n    },\r\n    {\r\n        coin_rank: 8,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png',\r\n        coin_id: 'DOT',\r\n        name: 'Polkadot',\r\n        price: 39.78,\r\n        trend_24h: 4.99,\r\n        trend_7d: 5.95,\r\n        market_cap: 36099397958,\r\n        circulating_supply: 938838911,\r\n    },\r\n    {\r\n        coin_rank: 9,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/8916.png',\r\n        coin_id: 'ICP',\r\n        name: 'Internet Computer',\r\n        price: 178.63,\r\n        trend_24h: -7.67,\r\n        trend_7d: 51.14,\r\n        market_cap: 21323515710,\r\n        circulating_supply: 123949678,\r\n    },\r\n    {\r\n        coin_rank: 10,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1831.png',\r\n        coin_id: 'BHC',\r\n        name: 'Bitcoin Cash',\r\n        price: 1114.26,\r\n        trend_24h: -7.22,\r\n        trend_7d: 23.43,\r\n        market_cap: 20153902224,\r\n        circulating_supply: 5229380689,\r\n    },\r\n    {\r\n        coin_rank: 11,\r\n        coin_icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2.png',\r\n        coin_id: 'LTC',\r\n        name: 'Litecoin',\r\n        price: 305.05,\r\n        trend_24h: 13.88,\r\n        trend_7d: -17.36,\r\n        market_cap: 19719510173,\r\n        circulating_supply: 66752415,\r\n    },\r\n    {\r\n        coin_rank: 12,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/7083.png',\r\n        coin_id: 'UNI',\r\n        name: 'Uniswap',\r\n        price: 35.56,\r\n        trend_24h: -8.77,\r\n        trend_7d: 4.68,\r\n        market_cap: 19077916997,\r\n        circulating_supply: 559616278,\r\n    },\r\n    {\r\n        coin_rank: 13,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1975.png',\r\n        coin_id: 'LINK',\r\n        name: 'Chainlink',\r\n        price: 41.14,\r\n        trend_24h: 13.34,\r\n        trend_7d: 12.88,\r\n        market_cap: 16691887010,\r\n        circulating_supply: 426509554,\r\n    },\r\n    {\r\n        coin_rank: 14,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/512.png',\r\n        coin_id: 'XLM',\r\n        name: 'Stellar',\r\n        price: 0.6591,\r\n        trend_24h: 1.05,\r\n        trend_7d: 8.07,\r\n        market_cap: 15153643945,\r\n        circulating_supply: 23136887514,\r\n    },\r\n    {\r\n        coin_rank: 15,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\r\n        coin_id: 'USDC',\r\n        name: 'USD Coin',\r\n        price: 1.0,\r\n        trend_24h: 0.11,\r\n        trend_7d: -0.11,\r\n        market_cap: 14389382655,\r\n        circulating_supply: 14380157844,\r\n    },\r\n    {\r\n        coin_rank: 16,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/5426.png',\r\n        coin_id: 'SOL',\r\n        name: 'Solana',\r\n        price: 55.96,\r\n        trend_24h: -19.08,\r\n        trend_7d: -33.15,\r\n        market_cap: 14312058889,\r\n        circulating_supply: 272637428,\r\n    },\r\n    {\r\n        coin_rank: 17,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png',\r\n        coin_id: 'MATIC',\r\n        name: 'Polygon',\r\n        price: 2.47,\r\n        trend_24h: 50.14,\r\n        trend_7d: 163.3,\r\n        market_cap: 12683266216,\r\n        circulating_supply: 6145590937,\r\n    },\r\n    {\r\n        coin_rank: 18,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/3077.png',\r\n        coin_id: 'VET',\r\n        name: 'VeChain',\r\n        price: 0.1664,\r\n        trend_24h: 8.52,\r\n        trend_7d: -20.05,\r\n        market_cap: 10347177063,\r\n        circulating_supply: 64315576989,\r\n    },\r\n    {\r\n        coin_rank: 19,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/1321.png',\r\n        coin_id: 'ETC',\r\n        name: 'Ethereum Classic',\r\n        price: 88.78,\r\n        trend_24h: 1.83,\r\n        trend_7d: 18.87,\r\n        market_cap: 10203517789,\r\n        circulating_supply: 116313299,\r\n    },\r\n    {\r\n        coin_rank: 20,\r\n        coin_icon:\r\n            'https://s2.coinmarketcap.com/static/img/coins/64x64/2416.png',\r\n        coin_id: 'THETA',\r\n        name: 'THETA',\r\n        price: 9.77,\r\n        trend_24h: -0.79,\r\n        trend_7d: -9.3,\r\n        market_cap: 9658606819,\r\n        circulating_supply: 1000000000,\r\n    },\r\n]"
                }
            ],
            "apps/coin-market/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n}"
                }
            ],
            "apps/coin-market/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n}"
                }
            ],
            "apps/coin-market/src/assets/data/coinData.ts": [
                {
                    "name": "fakeCoin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coinData.ts",
                    "type": "Coin",
                    "defaultValue": "{\r\n    coin_id: 'btc',\r\n    price: 56201.17,\r\n    coin_name: 'Bitcoin',\r\n    market_cap: { value: 1028360948721, change_percentage: 3.27 },\r\n    fully_diluted_market_cap: {\r\n        value: 1156036894571,\r\n        change_percentage: -3.54,\r\n    },\r\n    volume: { value: 1028360948, change_percentage: 0.88 },\r\n    circulating_supply: {\r\n        circulating_supply: 18666012,\r\n        max_supply: 21000000,\r\n        total_supply: 18666012,\r\n    },\r\n    price_high_low: { high: 58429.22, low: 55889.15, interval: '24h' },\r\n    icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n}"
                },
                {
                    "name": "fakeCoinStatistics",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coinData.ts",
                    "type": "OverviewPriceStatistics",
                    "defaultValue": "{\r\n    price: 57695.06,\r\n    price_change_24h: 653.45,\r\n    price_low_high_24h: { low: 57695.06, high: 58937.05 },\r\n    trading_volume_24h: 48568674778.31,\r\n    market_dominance: 54.95,\r\n    market_cap: 1093359164333.68,\r\n    market_rank: 1,\r\n    fully_diluted_market_cap: 1229276128246.84,\r\n    price_low_high_yesterday: { low: 55879.08, high: 58338.74 },\r\n    price_open_close_yesterday: { open: 56099.91, close: 58323.95 },\r\n    price_change_percentage_yesterday: 3.96,\r\n    price_low_high_7d: { low: 55604.02, high: 60110.27 },\r\n    price_low_high_30d: { low: 50856.02, high: 61683.27 },\r\n    price_low_high_90d: { low: 28953.02, high: 61683.27 },\r\n    price_low_high_52w: { low: 6555.02, high: 61683.27 },\r\n    price_low_high_all: {\r\n        high: { date_time: new Date().toISOString(), high_price: 61683.86 },\r\n        low: { date_time: new Date().toISOString(), low_price: 65.53 },\r\n    },\r\n}"
                },
                {
                    "name": "fakeCoinVotes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coinData.ts",
                    "type": "VoteCoinData",
                    "defaultValue": "{\r\n    coinId: 1,\r\n    good: 82,\r\n    bad: 18,\r\n}"
                },
                {
                    "name": "fakeTrendingCoinList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coinData.ts",
                    "type": "Coin[]",
                    "defaultValue": "[\r\n    new Coin({\r\n        coin_name: 'Bitcoin',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\r\n        coin_id: 'BTC',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'SHD CASH',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/8740.png',\r\n        coin_id: 'SHDC',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'Alaya',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7814.png',\r\n        coin_id: 'ATP',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'Bitcashpay',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7867.png',\r\n        coin_id: 'BCP',\r\n    }),\r\n    new Coin({\r\n        coin_name: 'RAMP',\r\n        price: 52556.41,\r\n        icon: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7463.png',\r\n        coin_id: 'RAMP',\r\n    }),\r\n]"
                }
            ],
            "apps/coin-market/src/assets/data/coin-detail.data.ts": [
                {
                    "name": "fakeCoin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                    "type": "Coin",
                    "defaultValue": "new Coin({\r\n    name: 'Bitcoin',\r\n    shortName: 'BTC',\r\n    rank: 1,\r\n    watchlists: 834727,\r\n})"
                },
                {
                    "name": "fakeCoinPrice",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                    "type": "CoinPrices",
                    "defaultValue": "{\r\n    name: 'Bitcoin',\r\n    shortName: 'BTC',\r\n    price: 59959.44,\r\n    pricePercentage: 1.24,\r\n    priceStatus: 2.16,\r\n    priceSideValue: 33.49,\r\n    priceSideName: 'ETH',\r\n    priceLow: 50870.59,\r\n    priceHigh: 55210.15,\r\n}"
                },
                {
                    "name": "fakeCoinStatistics",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                    "type": "CoinStatistics",
                    "defaultValue": "{\r\n    marketCapPrice: 1028360948721,\r\n    marketCapPercentage: 3.27,\r\n    fullyMarketCapPrice: 1156036894571,\r\n    fullyMarketCapPercentage: 3.28,\r\n    volumePrice: 1028360948,\r\n    volumePercentage: 8.27,\r\n    volumeMarketCapNumber: 0.04989,\r\n    circulatingSupplyNumber: 18666012,\r\n    circulatingSupplyPercentage: 89,\r\n    maxSupplyNumber: 21000000,\r\n    totalSupplyNumber: 18666012,\r\n}"
                }
            ],
            "apps/coin-market-e2e/src/support/app.po.ts": [
                {
                    "name": "getGreeting",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market-e2e/src/support/app.po.ts",
                    "type": "",
                    "defaultValue": "() => cy.get('h1')"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "apps/coin-market/src/app/shared/material.module.ts": [
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/app/shared/material.module.ts",
                    "type": "any[]",
                    "defaultValue": "[\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    LayoutModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatProgressBarModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n]"
                }
            ],
            "apps/coin-market/src/app/shared/ng-zorro-antd.module.ts": [
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/coin-market/src/app/shared/ng-zorro-antd.module.ts",
                    "type": "any[]",
                    "defaultValue": "[NzButtonModule, NzPopoverModule]"
                }
            ],
            "libs/ui/src/lib/line-chart/material.module.ts": [
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ui/src/lib/line-chart/material.module.ts",
                    "type": "any[]",
                    "defaultValue": "[\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatNativeDateModule,\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "apps/coin-market/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "apps/coin-market-e2e/src/support/app.po.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getGreeting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market-e2e/src/support/commands.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/coin-detail-bar/coin-detail-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinDetailBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/coin-list/coin-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/currency-tabs/currency-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CurrencyTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/details-section/buy-add-button-section/buy-add-button-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BuyAddButtonSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/details-section/details-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/details-section/link-section/link-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/details-section/name-section/name-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NameSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/details-section/price-section/price-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PriceSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/details-section/stats-section/stats-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatsSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/historical-data/historical-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistoricalDataComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/loading-bar/loading-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/markets/markets.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarketsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/coin-chart/coin-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/coin-converter/coin-converter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinConverterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/coin-statistics/coin-statistic-row/coin-statistic-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinStatisticRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/coin-statistics/coin-statistic-row/coin-statistic-row.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Comparison",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/coin-statistics/coin-statistics.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinStatisticsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/info-paragraph/info-paragraph.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InfoParagraphComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/trending/trending.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrendingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/overview/vote-coin/vote-coin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VoteCoinComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/scroll-top/scroll-top.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScrollTopComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/components/switch-theme-btn/switch-theme-btn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchThemeBtnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/mocks/localStorage.mock.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocalStorageMock",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/mocks/overview-service.mock.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OverviewServiceMock",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin-list.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CoinList",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin-price-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CoinPriceStatistics",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin-price-statistics.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PriceChange",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin-prices.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CoinPrices",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CoinStatistics",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin-supply-numbers.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CoinSupplyNumbers",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Coin",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PriceHighLow",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ValuePercentage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/coin.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Coin",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/gainers-losers-response.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GainersLosersResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/gainers-losers.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GainersLosers",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/historical-data.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HistoricalData",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/market.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MarketList",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OverviewPriceStatistics",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PriceAllTime",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PriceAllTimeHigh",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PriceAllTimeLow",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PriceHighLow",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/overview-price-statistics.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PriceOpenClose",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/pair.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Pair",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/voteCoin.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "VoteCoin",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/models/voteCoinData.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "VoteCoinData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/pages/currency/currency.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CurrencyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/pages/gainers-losers/gainers-losers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GainersLosersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/ng-zorro-antd.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/pipes/minus.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "MinusPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/coin-details.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CoinDetailsService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/coin-list.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CoinListService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/gainers-losers.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GainersLosersService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/historical-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HistoricalDataService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/local-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/markets.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MarketsService",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/overview.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OverviewService",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/services/trending-list.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TrendingListService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/app/shared/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeCoin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeCoinPrice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coin-detail.data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeCoinStatistics",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeCoin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeCoinStatistics",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeCoinVotes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coinData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeTrendingCoinList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/coinListData.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "coinListData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/datasource/coin-list-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CoinListDatasource",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/assets/data/market-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MarketsDataSource",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/coin-market/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/data/src/lib/models/coin-chart/chart-data-tab.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ChartDataTab",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/data/src/lib/models/coin-chart/chart-data.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ChartData",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/data/src/lib/models/coin-chart/chart-date-range.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ChartDateRange",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/data/src/lib/models/coin-chart/overview-marketcap.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OverviewMarketcap",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/data/src/lib/models/coin-chart/overview-price.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OverviewPrice",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/data/src/lib/models/ui-calendar/date-range.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CalendarDateRange",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/calendar/calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/calendar/predefined-dates/predefined-dates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PredefinedDatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/line-chart/chart-data-tabs/chart-data-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartDataTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/line-chart/chart-exports-button/chart-exports-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartExportsButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/line-chart/chart-fullscreen-button/chart-fullscreen-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartFullscreenButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/line-chart/chart-range-selector/chart-range-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartRangeSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/line-chart/coin-chart-legend/coin-chart-legend.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinChartLegendComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/line-chart/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "libs/ui/src/lib/line-chart/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}